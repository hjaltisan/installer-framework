// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eve_launcher/uninstaller.proto

#ifndef PROTOBUF_INCLUDED_eve_5flauncher_2funinstaller_2eproto
#define PROTOBUF_INCLUDED_eve_5flauncher_2funinstaller_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "eve_launcher/application.pb.h"
#include "eve_launcher/pdm.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5flauncher_2funinstaller_2eproto 

namespace protobuf_eve_5flauncher_2funinstaller_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_eve_5flauncher_2funinstaller_2eproto
namespace eve_launcher {
namespace uninstaller {
class AnalyticsMessageSent;
class AnalyticsMessageSentDefaultTypeInternal;
extern AnalyticsMessageSentDefaultTypeInternal _AnalyticsMessageSent_default_instance_;
class DetailsDisplayed;
class DetailsDisplayedDefaultTypeInternal;
extern DetailsDisplayedDefaultTypeInternal _DetailsDisplayed_default_instance_;
class DetailsHidden;
class DetailsHiddenDefaultTypeInternal;
extern DetailsHiddenDefaultTypeInternal _DetailsHidden_default_instance_;
class ErrorEncountered;
class ErrorEncounteredDefaultTypeInternal;
extern ErrorEncounteredDefaultTypeInternal _ErrorEncountered_default_instance_;
class PageDisplayed;
class PageDisplayedDefaultTypeInternal;
extern PageDisplayedDefaultTypeInternal _PageDisplayed_default_instance_;
class ShutDown;
class ShutDownDefaultTypeInternal;
extern ShutDownDefaultTypeInternal _ShutDown_default_instance_;
class Started;
class StartedDefaultTypeInternal;
extern StartedDefaultTypeInternal _Started_default_instance_;
class UninstallationFailed;
class UninstallationFailedDefaultTypeInternal;
extern UninstallationFailedDefaultTypeInternal _UninstallationFailed_default_instance_;
class UninstallationFinished;
class UninstallationFinishedDefaultTypeInternal;
extern UninstallationFinishedDefaultTypeInternal _UninstallationFinished_default_instance_;
class UninstallationInterrupted;
class UninstallationInterruptedDefaultTypeInternal;
extern UninstallationInterruptedDefaultTypeInternal _UninstallationInterrupted_default_instance_;
class UninstallationStarted;
class UninstallationStartedDefaultTypeInternal;
extern UninstallationStartedDefaultTypeInternal _UninstallationStarted_default_instance_;
class UserCancelled;
class UserCancelledDefaultTypeInternal;
extern UserCancelledDefaultTypeInternal _UserCancelled_default_instance_;
}  // namespace uninstaller
}  // namespace eve_launcher
namespace google {
namespace protobuf {
template<> ::eve_launcher::uninstaller::AnalyticsMessageSent* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::AnalyticsMessageSent>(Arena*);
template<> ::eve_launcher::uninstaller::DetailsDisplayed* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::DetailsDisplayed>(Arena*);
template<> ::eve_launcher::uninstaller::DetailsHidden* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::DetailsHidden>(Arena*);
template<> ::eve_launcher::uninstaller::ErrorEncountered* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::ErrorEncountered>(Arena*);
template<> ::eve_launcher::uninstaller::PageDisplayed* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::PageDisplayed>(Arena*);
template<> ::eve_launcher::uninstaller::ShutDown* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::ShutDown>(Arena*);
template<> ::eve_launcher::uninstaller::Started* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::Started>(Arena*);
template<> ::eve_launcher::uninstaller::UninstallationFailed* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::UninstallationFailed>(Arena*);
template<> ::eve_launcher::uninstaller::UninstallationFinished* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::UninstallationFinished>(Arena*);
template<> ::eve_launcher::uninstaller::UninstallationInterrupted* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::UninstallationInterrupted>(Arena*);
template<> ::eve_launcher::uninstaller::UninstallationStarted* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::UninstallationStarted>(Arena*);
template<> ::eve_launcher::uninstaller::UserCancelled* Arena::CreateMaybeMessage<::eve_launcher::uninstaller::UserCancelled>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace eve_launcher {
namespace uninstaller {

enum PageDisplayed_FlowDirection {
  PageDisplayed_FlowDirection_FLOWDIRECTION_UNSPECIFIED = 0,
  PageDisplayed_FlowDirection_FLOWDIRECTION_FIRST_VIEW = 1,
  PageDisplayed_FlowDirection_FLOWDIRECTION_FORWARDS = 2,
  PageDisplayed_FlowDirection_FLOWDIRECTION_BACKWARDS = 3,
  PageDisplayed_FlowDirection_FLOWDIRECTION_RELOAD = 4,
  PageDisplayed_FlowDirection_PageDisplayed_FlowDirection_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PageDisplayed_FlowDirection_PageDisplayed_FlowDirection_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PageDisplayed_FlowDirection_IsValid(int value);
const PageDisplayed_FlowDirection PageDisplayed_FlowDirection_FlowDirection_MIN = PageDisplayed_FlowDirection_FLOWDIRECTION_UNSPECIFIED;
const PageDisplayed_FlowDirection PageDisplayed_FlowDirection_FlowDirection_MAX = PageDisplayed_FlowDirection_FLOWDIRECTION_RELOAD;
const int PageDisplayed_FlowDirection_FlowDirection_ARRAYSIZE = PageDisplayed_FlowDirection_FlowDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* PageDisplayed_FlowDirection_descriptor();
inline const ::std::string& PageDisplayed_FlowDirection_Name(PageDisplayed_FlowDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    PageDisplayed_FlowDirection_descriptor(), value);
}
inline bool PageDisplayed_FlowDirection_Parse(
    const ::std::string& name, PageDisplayed_FlowDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PageDisplayed_FlowDirection>(
    PageDisplayed_FlowDirection_descriptor(), name, value);
}
enum UserCancelled_Progress {
  UserCancelled_Progress_PROGRESS_UNSPECIFIED = 0,
  UserCancelled_Progress_PROGRESS_NOT_STARTED = 1,
  UserCancelled_Progress_PROGRESS_UNINSTALLING = 2,
  UserCancelled_Progress_PROGRESS_FINISHED = 3,
  UserCancelled_Progress_PROGRESS_FAILED = 4,
  UserCancelled_Progress_UserCancelled_Progress_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserCancelled_Progress_UserCancelled_Progress_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserCancelled_Progress_IsValid(int value);
const UserCancelled_Progress UserCancelled_Progress_Progress_MIN = UserCancelled_Progress_PROGRESS_UNSPECIFIED;
const UserCancelled_Progress UserCancelled_Progress_Progress_MAX = UserCancelled_Progress_PROGRESS_FAILED;
const int UserCancelled_Progress_Progress_ARRAYSIZE = UserCancelled_Progress_Progress_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserCancelled_Progress_descriptor();
inline const ::std::string& UserCancelled_Progress_Name(UserCancelled_Progress value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserCancelled_Progress_descriptor(), value);
}
inline bool UserCancelled_Progress_Parse(
    const ::std::string& name, UserCancelled_Progress* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserCancelled_Progress>(
    UserCancelled_Progress_descriptor(), name, value);
}
enum ShutDown_State {
  ShutDown_State_STATE_UNSPECIFIED = 0,
  ShutDown_State_STATE_UNINSTALLED = 1,
  ShutDown_State_STATE_UNINSTALLATION_FAILED = 2,
  ShutDown_State_STATE_UNINSTALLATION_NOT_STARTED = 3,
  ShutDown_State_ShutDown_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ShutDown_State_ShutDown_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ShutDown_State_IsValid(int value);
const ShutDown_State ShutDown_State_State_MIN = ShutDown_State_STATE_UNSPECIFIED;
const ShutDown_State ShutDown_State_State_MAX = ShutDown_State_STATE_UNINSTALLATION_NOT_STARTED;
const int ShutDown_State_State_ARRAYSIZE = ShutDown_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* ShutDown_State_descriptor();
inline const ::std::string& ShutDown_State_Name(ShutDown_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    ShutDown_State_descriptor(), value);
}
inline bool ShutDown_State_Parse(
    const ::std::string& name, ShutDown_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ShutDown_State>(
    ShutDown_State_descriptor(), name, value);
}
enum ErrorEncountered_ErrorCode {
  ErrorEncountered_ErrorCode_ERRORCODE_UNSPECIFIED = 0,
  ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FAILURE = 1,
  ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_UNFINISHED = 2,
  ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FORCE_UPDATE = 3,
  ErrorEncountered_ErrorCode_ErrorEncountered_ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorEncountered_ErrorCode_ErrorEncountered_ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorEncountered_ErrorCode_IsValid(int value);
const ErrorEncountered_ErrorCode ErrorEncountered_ErrorCode_ErrorCode_MIN = ErrorEncountered_ErrorCode_ERRORCODE_UNSPECIFIED;
const ErrorEncountered_ErrorCode ErrorEncountered_ErrorCode_ErrorCode_MAX = ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FORCE_UPDATE;
const int ErrorEncountered_ErrorCode_ErrorCode_ARRAYSIZE = ErrorEncountered_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorEncountered_ErrorCode_descriptor();
inline const ::std::string& ErrorEncountered_ErrorCode_Name(ErrorEncountered_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorEncountered_ErrorCode_descriptor(), value);
}
inline bool ErrorEncountered_ErrorCode_Parse(
    const ::std::string& name, ErrorEncountered_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorEncountered_ErrorCode>(
    ErrorEncountered_ErrorCode_descriptor(), name, value);
}
enum Page {
  PAGE_UNSPECIFIED = 0,
  PAGE_NOT_FOUND = 1,
  PAGE_NO_PAGE = 2,
  PAGE_INTRODUCTION = 3,
  PAGE_READY = 4,
  PAGE_UNINSTALLING = 5,
  PAGE_FINISHED = 6,
  PAGE_FAILED = 7,
  Page_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Page_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Page_IsValid(int value);
const Page Page_MIN = PAGE_UNSPECIFIED;
const Page Page_MAX = PAGE_FAILED;
const int Page_ARRAYSIZE = Page_MAX + 1;

const ::google::protobuf::EnumDescriptor* Page_descriptor();
inline const ::std::string& Page_Name(Page value) {
  return ::google::protobuf::internal::NameOfEnum(
    Page_descriptor(), value);
}
inline bool Page_Parse(
    const ::std::string& name, Page* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Page>(
    Page_descriptor(), name, value);
}
// ===================================================================

class Started : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.Started) */ {
 public:
  Started();
  virtual ~Started();

  Started(const Started& from);

  inline Started& operator=(const Started& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Started(Started&& from) noexcept
    : Started() {
    *this = ::std::move(from);
  }

  inline Started& operator=(Started&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Started& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Started* internal_default_instance() {
    return reinterpret_cast<const Started*>(
               &_Started_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Started* other);
  friend void swap(Started& a, Started& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Started* New() const final {
    return CreateMaybeMessage<Started>(NULL);
  }

  Started* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Started>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Started& from);
  void MergeFrom(const Started& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Started* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .platform.Information system_information = 3;
  bool has_system_information() const;
  void clear_system_information();
  static const int kSystemInformationFieldNumber = 3;
  private:
  const ::platform::Information& _internal_system_information() const;
  public:
  const ::platform::Information& system_information() const;
  ::platform::Information* release_system_information();
  ::platform::Information* mutable_system_information();
  void set_allocated_system_information(::platform::Information* system_information);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.Started)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::platform::Information* system_information_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PageDisplayed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.PageDisplayed) */ {
 public:
  PageDisplayed();
  virtual ~PageDisplayed();

  PageDisplayed(const PageDisplayed& from);

  inline PageDisplayed& operator=(const PageDisplayed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageDisplayed(PageDisplayed&& from) noexcept
    : PageDisplayed() {
    *this = ::std::move(from);
  }

  inline PageDisplayed& operator=(PageDisplayed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PageDisplayed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageDisplayed* internal_default_instance() {
    return reinterpret_cast<const PageDisplayed*>(
               &_PageDisplayed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PageDisplayed* other);
  friend void swap(PageDisplayed& a, PageDisplayed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageDisplayed* New() const final {
    return CreateMaybeMessage<PageDisplayed>(NULL);
  }

  PageDisplayed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageDisplayed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageDisplayed& from);
  void MergeFrom(const PageDisplayed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageDisplayed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PageDisplayed_FlowDirection FlowDirection;
  static const FlowDirection FLOWDIRECTION_UNSPECIFIED =
    PageDisplayed_FlowDirection_FLOWDIRECTION_UNSPECIFIED;
  static const FlowDirection FLOWDIRECTION_FIRST_VIEW =
    PageDisplayed_FlowDirection_FLOWDIRECTION_FIRST_VIEW;
  static const FlowDirection FLOWDIRECTION_FORWARDS =
    PageDisplayed_FlowDirection_FLOWDIRECTION_FORWARDS;
  static const FlowDirection FLOWDIRECTION_BACKWARDS =
    PageDisplayed_FlowDirection_FLOWDIRECTION_BACKWARDS;
  static const FlowDirection FLOWDIRECTION_RELOAD =
    PageDisplayed_FlowDirection_FLOWDIRECTION_RELOAD;
  static inline bool FlowDirection_IsValid(int value) {
    return PageDisplayed_FlowDirection_IsValid(value);
  }
  static const FlowDirection FlowDirection_MIN =
    PageDisplayed_FlowDirection_FlowDirection_MIN;
  static const FlowDirection FlowDirection_MAX =
    PageDisplayed_FlowDirection_FlowDirection_MAX;
  static const int FlowDirection_ARRAYSIZE =
    PageDisplayed_FlowDirection_FlowDirection_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FlowDirection_descriptor() {
    return PageDisplayed_FlowDirection_descriptor();
  }
  static inline const ::std::string& FlowDirection_Name(FlowDirection value) {
    return PageDisplayed_FlowDirection_Name(value);
  }
  static inline bool FlowDirection_Parse(const ::std::string& name,
      FlowDirection* value) {
    return PageDisplayed_FlowDirection_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.uninstaller.Page previous_page = 2;
  void clear_previous_page();
  static const int kPreviousPageFieldNumber = 2;
  ::eve_launcher::uninstaller::Page previous_page() const;
  void set_previous_page(::eve_launcher::uninstaller::Page value);

  // .eve_launcher.uninstaller.Page current_page = 3;
  void clear_current_page();
  static const int kCurrentPageFieldNumber = 3;
  ::eve_launcher::uninstaller::Page current_page() const;
  void set_current_page(::eve_launcher::uninstaller::Page value);

  // .eve_launcher.uninstaller.PageDisplayed.FlowDirection flow = 4;
  void clear_flow();
  static const int kFlowFieldNumber = 4;
  ::eve_launcher::uninstaller::PageDisplayed_FlowDirection flow() const;
  void set_flow(::eve_launcher::uninstaller::PageDisplayed_FlowDirection value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.PageDisplayed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int previous_page_;
  int current_page_;
  int flow_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserCancelled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.UserCancelled) */ {
 public:
  UserCancelled();
  virtual ~UserCancelled();

  UserCancelled(const UserCancelled& from);

  inline UserCancelled& operator=(const UserCancelled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCancelled(UserCancelled&& from) noexcept
    : UserCancelled() {
    *this = ::std::move(from);
  }

  inline UserCancelled& operator=(UserCancelled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCancelled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCancelled* internal_default_instance() {
    return reinterpret_cast<const UserCancelled*>(
               &_UserCancelled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UserCancelled* other);
  friend void swap(UserCancelled& a, UserCancelled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCancelled* New() const final {
    return CreateMaybeMessage<UserCancelled>(NULL);
  }

  UserCancelled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserCancelled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserCancelled& from);
  void MergeFrom(const UserCancelled& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserCancelled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserCancelled_Progress Progress;
  static const Progress PROGRESS_UNSPECIFIED =
    UserCancelled_Progress_PROGRESS_UNSPECIFIED;
  static const Progress PROGRESS_NOT_STARTED =
    UserCancelled_Progress_PROGRESS_NOT_STARTED;
  static const Progress PROGRESS_UNINSTALLING =
    UserCancelled_Progress_PROGRESS_UNINSTALLING;
  static const Progress PROGRESS_FINISHED =
    UserCancelled_Progress_PROGRESS_FINISHED;
  static const Progress PROGRESS_FAILED =
    UserCancelled_Progress_PROGRESS_FAILED;
  static inline bool Progress_IsValid(int value) {
    return UserCancelled_Progress_IsValid(value);
  }
  static const Progress Progress_MIN =
    UserCancelled_Progress_Progress_MIN;
  static const Progress Progress_MAX =
    UserCancelled_Progress_Progress_MAX;
  static const int Progress_ARRAYSIZE =
    UserCancelled_Progress_Progress_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Progress_descriptor() {
    return UserCancelled_Progress_descriptor();
  }
  static inline const ::std::string& Progress_Name(Progress value) {
    return UserCancelled_Progress_Name(value);
  }
  static inline bool Progress_Parse(const ::std::string& name,
      Progress* value) {
    return UserCancelled_Progress_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.uninstaller.Page page = 2;
  void clear_page();
  static const int kPageFieldNumber = 2;
  ::eve_launcher::uninstaller::Page page() const;
  void set_page(::eve_launcher::uninstaller::Page value);

  // .eve_launcher.uninstaller.UserCancelled.Progress progress = 3;
  void clear_progress();
  static const int kProgressFieldNumber = 3;
  ::eve_launcher::uninstaller::UserCancelled_Progress progress() const;
  void set_progress(::eve_launcher::uninstaller::UserCancelled_Progress value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.UserCancelled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int page_;
  int progress_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShutDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.ShutDown) */ {
 public:
  ShutDown();
  virtual ~ShutDown();

  ShutDown(const ShutDown& from);

  inline ShutDown& operator=(const ShutDown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShutDown(ShutDown&& from) noexcept
    : ShutDown() {
    *this = ::std::move(from);
  }

  inline ShutDown& operator=(ShutDown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutDown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShutDown* internal_default_instance() {
    return reinterpret_cast<const ShutDown*>(
               &_ShutDown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ShutDown* other);
  friend void swap(ShutDown& a, ShutDown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShutDown* New() const final {
    return CreateMaybeMessage<ShutDown>(NULL);
  }

  ShutDown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShutDown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShutDown& from);
  void MergeFrom(const ShutDown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShutDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ShutDown_State State;
  static const State STATE_UNSPECIFIED =
    ShutDown_State_STATE_UNSPECIFIED;
  static const State STATE_UNINSTALLED =
    ShutDown_State_STATE_UNINSTALLED;
  static const State STATE_UNINSTALLATION_FAILED =
    ShutDown_State_STATE_UNINSTALLATION_FAILED;
  static const State STATE_UNINSTALLATION_NOT_STARTED =
    ShutDown_State_STATE_UNINSTALLATION_NOT_STARTED;
  static inline bool State_IsValid(int value) {
    return ShutDown_State_IsValid(value);
  }
  static const State State_MIN =
    ShutDown_State_State_MIN;
  static const State State_MAX =
    ShutDown_State_State_MAX;
  static const int State_ARRAYSIZE =
    ShutDown_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return ShutDown_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return ShutDown_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return ShutDown_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.uninstaller.Page page = 2;
  void clear_page();
  static const int kPageFieldNumber = 2;
  ::eve_launcher::uninstaller::Page page() const;
  void set_page(::eve_launcher::uninstaller::Page value);

  // .eve_launcher.uninstaller.ShutDown.State state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::eve_launcher::uninstaller::ShutDown_State state() const;
  void set_state(::eve_launcher::uninstaller::ShutDown_State value);

  // bool finish_button = 4;
  void clear_finish_button();
  static const int kFinishButtonFieldNumber = 4;
  bool finish_button() const;
  void set_finish_button(bool value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.ShutDown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int page_;
  int state_;
  bool finish_button_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetailsDisplayed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.DetailsDisplayed) */ {
 public:
  DetailsDisplayed();
  virtual ~DetailsDisplayed();

  DetailsDisplayed(const DetailsDisplayed& from);

  inline DetailsDisplayed& operator=(const DetailsDisplayed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetailsDisplayed(DetailsDisplayed&& from) noexcept
    : DetailsDisplayed() {
    *this = ::std::move(from);
  }

  inline DetailsDisplayed& operator=(DetailsDisplayed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetailsDisplayed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetailsDisplayed* internal_default_instance() {
    return reinterpret_cast<const DetailsDisplayed*>(
               &_DetailsDisplayed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DetailsDisplayed* other);
  friend void swap(DetailsDisplayed& a, DetailsDisplayed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetailsDisplayed* New() const final {
    return CreateMaybeMessage<DetailsDisplayed>(NULL);
  }

  DetailsDisplayed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DetailsDisplayed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DetailsDisplayed& from);
  void MergeFrom(const DetailsDisplayed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetailsDisplayed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.DetailsDisplayed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetailsHidden : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.DetailsHidden) */ {
 public:
  DetailsHidden();
  virtual ~DetailsHidden();

  DetailsHidden(const DetailsHidden& from);

  inline DetailsHidden& operator=(const DetailsHidden& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetailsHidden(DetailsHidden&& from) noexcept
    : DetailsHidden() {
    *this = ::std::move(from);
  }

  inline DetailsHidden& operator=(DetailsHidden&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetailsHidden& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetailsHidden* internal_default_instance() {
    return reinterpret_cast<const DetailsHidden*>(
               &_DetailsHidden_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DetailsHidden* other);
  friend void swap(DetailsHidden& a, DetailsHidden& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetailsHidden* New() const final {
    return CreateMaybeMessage<DetailsHidden>(NULL);
  }

  DetailsHidden* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DetailsHidden>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DetailsHidden& from);
  void MergeFrom(const DetailsHidden& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetailsHidden* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.DetailsHidden)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UninstallationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.UninstallationStarted) */ {
 public:
  UninstallationStarted();
  virtual ~UninstallationStarted();

  UninstallationStarted(const UninstallationStarted& from);

  inline UninstallationStarted& operator=(const UninstallationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UninstallationStarted(UninstallationStarted&& from) noexcept
    : UninstallationStarted() {
    *this = ::std::move(from);
  }

  inline UninstallationStarted& operator=(UninstallationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UninstallationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UninstallationStarted* internal_default_instance() {
    return reinterpret_cast<const UninstallationStarted*>(
               &_UninstallationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UninstallationStarted* other);
  friend void swap(UninstallationStarted& a, UninstallationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UninstallationStarted* New() const final {
    return CreateMaybeMessage<UninstallationStarted>(NULL);
  }

  UninstallationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UninstallationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UninstallationStarted& from);
  void MergeFrom(const UninstallationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UninstallationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.UninstallationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UninstallationInterrupted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.UninstallationInterrupted) */ {
 public:
  UninstallationInterrupted();
  virtual ~UninstallationInterrupted();

  UninstallationInterrupted(const UninstallationInterrupted& from);

  inline UninstallationInterrupted& operator=(const UninstallationInterrupted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UninstallationInterrupted(UninstallationInterrupted&& from) noexcept
    : UninstallationInterrupted() {
    *this = ::std::move(from);
  }

  inline UninstallationInterrupted& operator=(UninstallationInterrupted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UninstallationInterrupted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UninstallationInterrupted* internal_default_instance() {
    return reinterpret_cast<const UninstallationInterrupted*>(
               &_UninstallationInterrupted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UninstallationInterrupted* other);
  friend void swap(UninstallationInterrupted& a, UninstallationInterrupted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UninstallationInterrupted* New() const final {
    return CreateMaybeMessage<UninstallationInterrupted>(NULL);
  }

  UninstallationInterrupted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UninstallationInterrupted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UninstallationInterrupted& from);
  void MergeFrom(const UninstallationInterrupted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UninstallationInterrupted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.UninstallationInterrupted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UninstallationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.UninstallationFinished) */ {
 public:
  UninstallationFinished();
  virtual ~UninstallationFinished();

  UninstallationFinished(const UninstallationFinished& from);

  inline UninstallationFinished& operator=(const UninstallationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UninstallationFinished(UninstallationFinished&& from) noexcept
    : UninstallationFinished() {
    *this = ::std::move(from);
  }

  inline UninstallationFinished& operator=(UninstallationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UninstallationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UninstallationFinished* internal_default_instance() {
    return reinterpret_cast<const UninstallationFinished*>(
               &_UninstallationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UninstallationFinished* other);
  friend void swap(UninstallationFinished& a, UninstallationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UninstallationFinished* New() const final {
    return CreateMaybeMessage<UninstallationFinished>(NULL);
  }

  UninstallationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UninstallationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UninstallationFinished& from);
  void MergeFrom(const UninstallationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UninstallationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.UninstallationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UninstallationFailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.UninstallationFailed) */ {
 public:
  UninstallationFailed();
  virtual ~UninstallationFailed();

  UninstallationFailed(const UninstallationFailed& from);

  inline UninstallationFailed& operator=(const UninstallationFailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UninstallationFailed(UninstallationFailed&& from) noexcept
    : UninstallationFailed() {
    *this = ::std::move(from);
  }

  inline UninstallationFailed& operator=(UninstallationFailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UninstallationFailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UninstallationFailed* internal_default_instance() {
    return reinterpret_cast<const UninstallationFailed*>(
               &_UninstallationFailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(UninstallationFailed* other);
  friend void swap(UninstallationFailed& a, UninstallationFailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UninstallationFailed* New() const final {
    return CreateMaybeMessage<UninstallationFailed>(NULL);
  }

  UninstallationFailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UninstallationFailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UninstallationFailed& from);
  void MergeFrom(const UninstallationFailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UninstallationFailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.UninstallationFailed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ErrorEncountered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.ErrorEncountered) */ {
 public:
  ErrorEncountered();
  virtual ~ErrorEncountered();

  ErrorEncountered(const ErrorEncountered& from);

  inline ErrorEncountered& operator=(const ErrorEncountered& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorEncountered(ErrorEncountered&& from) noexcept
    : ErrorEncountered() {
    *this = ::std::move(from);
  }

  inline ErrorEncountered& operator=(ErrorEncountered&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorEncountered& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorEncountered* internal_default_instance() {
    return reinterpret_cast<const ErrorEncountered*>(
               &_ErrorEncountered_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ErrorEncountered* other);
  friend void swap(ErrorEncountered& a, ErrorEncountered& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorEncountered* New() const final {
    return CreateMaybeMessage<ErrorEncountered>(NULL);
  }

  ErrorEncountered* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ErrorEncountered>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ErrorEncountered& from);
  void MergeFrom(const ErrorEncountered& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorEncountered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ErrorEncountered_ErrorCode ErrorCode;
  static const ErrorCode ERRORCODE_UNSPECIFIED =
    ErrorEncountered_ErrorCode_ERRORCODE_UNSPECIFIED;
  static const ErrorCode ERRORCODE_QT_STATUS_FAILURE =
    ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FAILURE;
  static const ErrorCode ERRORCODE_QT_STATUS_UNFINISHED =
    ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_UNFINISHED;
  static const ErrorCode ERRORCODE_QT_STATUS_FORCE_UPDATE =
    ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FORCE_UPDATE;
  static inline bool ErrorCode_IsValid(int value) {
    return ErrorEncountered_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    ErrorEncountered_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    ErrorEncountered_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    ErrorEncountered_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return ErrorEncountered_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return ErrorEncountered_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return ErrorEncountered_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.uninstaller.ErrorEncountered.ErrorCode code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::eve_launcher::uninstaller::ErrorEncountered_ErrorCode code() const;
  void set_code(::eve_launcher::uninstaller::ErrorEncountered_ErrorCode value);

  // .eve_launcher.uninstaller.Page page = 3;
  void clear_page();
  static const int kPageFieldNumber = 3;
  ::eve_launcher::uninstaller::Page page() const;
  void set_page(::eve_launcher::uninstaller::Page value);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.ErrorEncountered)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int code_;
  int page_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnalyticsMessageSent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.uninstaller.AnalyticsMessageSent) */ {
 public:
  AnalyticsMessageSent();
  virtual ~AnalyticsMessageSent();

  AnalyticsMessageSent(const AnalyticsMessageSent& from);

  inline AnalyticsMessageSent& operator=(const AnalyticsMessageSent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnalyticsMessageSent(AnalyticsMessageSent&& from) noexcept
    : AnalyticsMessageSent() {
    *this = ::std::move(from);
  }

  inline AnalyticsMessageSent& operator=(AnalyticsMessageSent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnalyticsMessageSent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnalyticsMessageSent* internal_default_instance() {
    return reinterpret_cast<const AnalyticsMessageSent*>(
               &_AnalyticsMessageSent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(AnalyticsMessageSent* other);
  friend void swap(AnalyticsMessageSent& a, AnalyticsMessageSent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnalyticsMessageSent* New() const final {
    return CreateMaybeMessage<AnalyticsMessageSent>(NULL);
  }

  AnalyticsMessageSent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AnalyticsMessageSent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AnalyticsMessageSent& from);
  void MergeFrom(const AnalyticsMessageSent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnalyticsMessageSent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.uninstaller.AnalyticsMessageSent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2funinstaller_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Started

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool Started::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& Started::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& Started::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.Started.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* Started::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.Started.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* Started::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.Started.event_metadata)
  return event_metadata_;
}
inline void Started::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.Started.event_metadata)
}

// int32 duration = 2;
inline void Started::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 Started::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.Started.duration)
  return duration_;
}
inline void Started::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.Started.duration)
}

// .platform.Information system_information = 3;
inline bool Started::has_system_information() const {
  return this != internal_default_instance() && system_information_ != NULL;
}
inline const ::platform::Information& Started::_internal_system_information() const {
  return *system_information_;
}
inline const ::platform::Information& Started::system_information() const {
  const ::platform::Information* p = system_information_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.Started.system_information)
  return p != NULL ? *p : *reinterpret_cast<const ::platform::Information*>(
      &::platform::_Information_default_instance_);
}
inline ::platform::Information* Started::release_system_information() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.Started.system_information)
  
  ::platform::Information* temp = system_information_;
  system_information_ = NULL;
  return temp;
}
inline ::platform::Information* Started::mutable_system_information() {
  
  if (system_information_ == NULL) {
    auto* p = CreateMaybeMessage<::platform::Information>(GetArenaNoVirtual());
    system_information_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.Started.system_information)
  return system_information_;
}
inline void Started::set_allocated_system_information(::platform::Information* system_information) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(system_information_);
  }
  if (system_information) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_information = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_information, submessage_arena);
    }
    
  } else {
    
  }
  system_information_ = system_information;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.Started.system_information)
}

// -------------------------------------------------------------------

// PageDisplayed

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool PageDisplayed::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& PageDisplayed::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& PageDisplayed::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.PageDisplayed.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* PageDisplayed::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.PageDisplayed.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* PageDisplayed::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.PageDisplayed.event_metadata)
  return event_metadata_;
}
inline void PageDisplayed::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.PageDisplayed.event_metadata)
}

// .eve_launcher.uninstaller.Page previous_page = 2;
inline void PageDisplayed::clear_previous_page() {
  previous_page_ = 0;
}
inline ::eve_launcher::uninstaller::Page PageDisplayed::previous_page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.PageDisplayed.previous_page)
  return static_cast< ::eve_launcher::uninstaller::Page >(previous_page_);
}
inline void PageDisplayed::set_previous_page(::eve_launcher::uninstaller::Page value) {
  
  previous_page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.PageDisplayed.previous_page)
}

// .eve_launcher.uninstaller.Page current_page = 3;
inline void PageDisplayed::clear_current_page() {
  current_page_ = 0;
}
inline ::eve_launcher::uninstaller::Page PageDisplayed::current_page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.PageDisplayed.current_page)
  return static_cast< ::eve_launcher::uninstaller::Page >(current_page_);
}
inline void PageDisplayed::set_current_page(::eve_launcher::uninstaller::Page value) {
  
  current_page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.PageDisplayed.current_page)
}

// .eve_launcher.uninstaller.PageDisplayed.FlowDirection flow = 4;
inline void PageDisplayed::clear_flow() {
  flow_ = 0;
}
inline ::eve_launcher::uninstaller::PageDisplayed_FlowDirection PageDisplayed::flow() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.PageDisplayed.flow)
  return static_cast< ::eve_launcher::uninstaller::PageDisplayed_FlowDirection >(flow_);
}
inline void PageDisplayed::set_flow(::eve_launcher::uninstaller::PageDisplayed_FlowDirection value) {
  
  flow_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.PageDisplayed.flow)
}

// -------------------------------------------------------------------

// UserCancelled

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UserCancelled::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UserCancelled::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UserCancelled::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UserCancelled.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UserCancelled::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.UserCancelled.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UserCancelled::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.UserCancelled.event_metadata)
  return event_metadata_;
}
inline void UserCancelled::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.UserCancelled.event_metadata)
}

// .eve_launcher.uninstaller.Page page = 2;
inline void UserCancelled::clear_page() {
  page_ = 0;
}
inline ::eve_launcher::uninstaller::Page UserCancelled::page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UserCancelled.page)
  return static_cast< ::eve_launcher::uninstaller::Page >(page_);
}
inline void UserCancelled::set_page(::eve_launcher::uninstaller::Page value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.UserCancelled.page)
}

// .eve_launcher.uninstaller.UserCancelled.Progress progress = 3;
inline void UserCancelled::clear_progress() {
  progress_ = 0;
}
inline ::eve_launcher::uninstaller::UserCancelled_Progress UserCancelled::progress() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UserCancelled.progress)
  return static_cast< ::eve_launcher::uninstaller::UserCancelled_Progress >(progress_);
}
inline void UserCancelled::set_progress(::eve_launcher::uninstaller::UserCancelled_Progress value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.UserCancelled.progress)
}

// -------------------------------------------------------------------

// ShutDown

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ShutDown::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ShutDown::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ShutDown::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.ShutDown.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ShutDown::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.ShutDown.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ShutDown::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.ShutDown.event_metadata)
  return event_metadata_;
}
inline void ShutDown::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.ShutDown.event_metadata)
}

// .eve_launcher.uninstaller.Page page = 2;
inline void ShutDown::clear_page() {
  page_ = 0;
}
inline ::eve_launcher::uninstaller::Page ShutDown::page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.ShutDown.page)
  return static_cast< ::eve_launcher::uninstaller::Page >(page_);
}
inline void ShutDown::set_page(::eve_launcher::uninstaller::Page value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.ShutDown.page)
}

// .eve_launcher.uninstaller.ShutDown.State state = 3;
inline void ShutDown::clear_state() {
  state_ = 0;
}
inline ::eve_launcher::uninstaller::ShutDown_State ShutDown::state() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.ShutDown.state)
  return static_cast< ::eve_launcher::uninstaller::ShutDown_State >(state_);
}
inline void ShutDown::set_state(::eve_launcher::uninstaller::ShutDown_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.ShutDown.state)
}

// bool finish_button = 4;
inline void ShutDown::clear_finish_button() {
  finish_button_ = false;
}
inline bool ShutDown::finish_button() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.ShutDown.finish_button)
  return finish_button_;
}
inline void ShutDown::set_finish_button(bool value) {
  
  finish_button_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.ShutDown.finish_button)
}

// -------------------------------------------------------------------

// DetailsDisplayed

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool DetailsDisplayed::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& DetailsDisplayed::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& DetailsDisplayed::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.DetailsDisplayed.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* DetailsDisplayed::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.DetailsDisplayed.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* DetailsDisplayed::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.DetailsDisplayed.event_metadata)
  return event_metadata_;
}
inline void DetailsDisplayed::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.DetailsDisplayed.event_metadata)
}

// -------------------------------------------------------------------

// DetailsHidden

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool DetailsHidden::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& DetailsHidden::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& DetailsHidden::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.DetailsHidden.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* DetailsHidden::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.DetailsHidden.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* DetailsHidden::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.DetailsHidden.event_metadata)
  return event_metadata_;
}
inline void DetailsHidden::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.DetailsHidden.event_metadata)
}

// -------------------------------------------------------------------

// UninstallationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UninstallationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UninstallationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UninstallationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.UninstallationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UninstallationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.UninstallationStarted.event_metadata)
  return event_metadata_;
}
inline void UninstallationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.UninstallationStarted.event_metadata)
}

// -------------------------------------------------------------------

// UninstallationInterrupted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UninstallationInterrupted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationInterrupted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationInterrupted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UninstallationInterrupted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UninstallationInterrupted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.UninstallationInterrupted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UninstallationInterrupted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.UninstallationInterrupted.event_metadata)
  return event_metadata_;
}
inline void UninstallationInterrupted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.UninstallationInterrupted.event_metadata)
}

// int32 duration = 2;
inline void UninstallationInterrupted::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 UninstallationInterrupted::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UninstallationInterrupted.duration)
  return duration_;
}
inline void UninstallationInterrupted::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.UninstallationInterrupted.duration)
}

// -------------------------------------------------------------------

// UninstallationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UninstallationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UninstallationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UninstallationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.UninstallationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UninstallationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.UninstallationFinished.event_metadata)
  return event_metadata_;
}
inline void UninstallationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.UninstallationFinished.event_metadata)
}

// int32 duration = 2;
inline void UninstallationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 UninstallationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UninstallationFinished.duration)
  return duration_;
}
inline void UninstallationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.UninstallationFinished.duration)
}

// -------------------------------------------------------------------

// UninstallationFailed

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UninstallationFailed::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationFailed::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UninstallationFailed::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UninstallationFailed.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UninstallationFailed::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.UninstallationFailed.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UninstallationFailed::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.UninstallationFailed.event_metadata)
  return event_metadata_;
}
inline void UninstallationFailed::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.UninstallationFailed.event_metadata)
}

// int32 duration = 2;
inline void UninstallationFailed::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 UninstallationFailed::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.UninstallationFailed.duration)
  return duration_;
}
inline void UninstallationFailed::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.UninstallationFailed.duration)
}

// -------------------------------------------------------------------

// ErrorEncountered

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ErrorEncountered::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ErrorEncountered::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ErrorEncountered::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.ErrorEncountered.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ErrorEncountered::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.ErrorEncountered.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ErrorEncountered::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.ErrorEncountered.event_metadata)
  return event_metadata_;
}
inline void ErrorEncountered::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.ErrorEncountered.event_metadata)
}

// .eve_launcher.uninstaller.ErrorEncountered.ErrorCode code = 2;
inline void ErrorEncountered::clear_code() {
  code_ = 0;
}
inline ::eve_launcher::uninstaller::ErrorEncountered_ErrorCode ErrorEncountered::code() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.ErrorEncountered.code)
  return static_cast< ::eve_launcher::uninstaller::ErrorEncountered_ErrorCode >(code_);
}
inline void ErrorEncountered::set_code(::eve_launcher::uninstaller::ErrorEncountered_ErrorCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.ErrorEncountered.code)
}

// .eve_launcher.uninstaller.Page page = 3;
inline void ErrorEncountered::clear_page() {
  page_ = 0;
}
inline ::eve_launcher::uninstaller::Page ErrorEncountered::page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.ErrorEncountered.page)
  return static_cast< ::eve_launcher::uninstaller::Page >(page_);
}
inline void ErrorEncountered::set_page(::eve_launcher::uninstaller::Page value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.ErrorEncountered.page)
}

// -------------------------------------------------------------------

// AnalyticsMessageSent

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool AnalyticsMessageSent::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& AnalyticsMessageSent::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& AnalyticsMessageSent::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.AnalyticsMessageSent.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* AnalyticsMessageSent::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.AnalyticsMessageSent.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* AnalyticsMessageSent::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.AnalyticsMessageSent.event_metadata)
  return event_metadata_;
}
inline void AnalyticsMessageSent::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.AnalyticsMessageSent.event_metadata)
}

// string message = 2;
inline void AnalyticsMessageSent::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnalyticsMessageSent::message() const {
  // @@protoc_insertion_point(field_get:eve_launcher.uninstaller.AnalyticsMessageSent.message)
  return message_.GetNoArena();
}
inline void AnalyticsMessageSent::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.uninstaller.AnalyticsMessageSent.message)
}
#if LANG_CXX11
inline void AnalyticsMessageSent::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.uninstaller.AnalyticsMessageSent.message)
}
#endif
inline void AnalyticsMessageSent::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.uninstaller.AnalyticsMessageSent.message)
}
inline void AnalyticsMessageSent::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.uninstaller.AnalyticsMessageSent.message)
}
inline ::std::string* AnalyticsMessageSent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.uninstaller.AnalyticsMessageSent.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnalyticsMessageSent::release_message() {
  // @@protoc_insertion_point(field_release:eve_launcher.uninstaller.AnalyticsMessageSent.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnalyticsMessageSent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.uninstaller.AnalyticsMessageSent.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace uninstaller
}  // namespace eve_launcher

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::eve_launcher::uninstaller::PageDisplayed_FlowDirection> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::uninstaller::PageDisplayed_FlowDirection>() {
  return ::eve_launcher::uninstaller::PageDisplayed_FlowDirection_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::uninstaller::UserCancelled_Progress> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::uninstaller::UserCancelled_Progress>() {
  return ::eve_launcher::uninstaller::UserCancelled_Progress_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::uninstaller::ShutDown_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::uninstaller::ShutDown_State>() {
  return ::eve_launcher::uninstaller::ShutDown_State_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::uninstaller::ErrorEncountered_ErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::uninstaller::ErrorEncountered_ErrorCode>() {
  return ::eve_launcher::uninstaller::ErrorEncountered_ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::uninstaller::Page> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::uninstaller::Page>() {
  return ::eve_launcher::uninstaller::Page_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_eve_5flauncher_2funinstaller_2eproto
