// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eve_launcher/installer.proto

#ifndef PROTOBUF_INCLUDED_eve_5flauncher_2finstaller_2eproto
#define PROTOBUF_INCLUDED_eve_5flauncher_2finstaller_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "eve_launcher/application.pb.h"
#include "eve_launcher/pdm.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5flauncher_2finstaller_2eproto 

namespace protobuf_eve_5flauncher_2finstaller_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[35];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_eve_5flauncher_2finstaller_2eproto
namespace eve_launcher {
namespace installer {
class AnalyticsMessageSent;
class AnalyticsMessageSentDefaultTypeInternal;
extern AnalyticsMessageSentDefaultTypeInternal _AnalyticsMessageSent_default_instance_;
class AutoRunDisabled;
class AutoRunDisabledDefaultTypeInternal;
extern AutoRunDisabledDefaultTypeInternal _AutoRunDisabled_default_instance_;
class AutoRunEnabled;
class AutoRunEnabledDefaultTypeInternal;
extern AutoRunEnabledDefaultTypeInternal _AutoRunEnabled_default_instance_;
class ComponentInitializationFinished;
class ComponentInitializationFinishedDefaultTypeInternal;
extern ComponentInitializationFinishedDefaultTypeInternal _ComponentInitializationFinished_default_instance_;
class ComponentInitializationStarted;
class ComponentInitializationStartedDefaultTypeInternal;
extern ComponentInitializationStartedDefaultTypeInternal _ComponentInitializationStarted_default_instance_;
class ComponentInstallationFinished;
class ComponentInstallationFinishedDefaultTypeInternal;
extern ComponentInstallationFinishedDefaultTypeInternal _ComponentInstallationFinished_default_instance_;
class ComponentInstallationStarted;
class ComponentInstallationStartedDefaultTypeInternal;
extern ComponentInstallationStartedDefaultTypeInternal _ComponentInstallationStarted_default_instance_;
class ComponentsInitializationFinished;
class ComponentsInitializationFinishedDefaultTypeInternal;
extern ComponentsInitializationFinishedDefaultTypeInternal _ComponentsInitializationFinished_default_instance_;
class ComponentsInitializationStarted;
class ComponentsInitializationStartedDefaultTypeInternal;
extern ComponentsInitializationStartedDefaultTypeInternal _ComponentsInitializationStarted_default_instance_;
class ComponentsInstallationFinished;
class ComponentsInstallationFinishedDefaultTypeInternal;
extern ComponentsInstallationFinishedDefaultTypeInternal _ComponentsInstallationFinished_default_instance_;
class ComponentsInstallationStarted;
class ComponentsInstallationStartedDefaultTypeInternal;
extern ComponentsInstallationStartedDefaultTypeInternal _ComponentsInstallationStarted_default_instance_;
class DetailsDisplayed;
class DetailsDisplayedDefaultTypeInternal;
extern DetailsDisplayedDefaultTypeInternal _DetailsDisplayed_default_instance_;
class DetailsHidden;
class DetailsHiddenDefaultTypeInternal;
extern DetailsHiddenDefaultTypeInternal _DetailsHidden_default_instance_;
class ErrorEncountered;
class ErrorEncounteredDefaultTypeInternal;
extern ErrorEncounteredDefaultTypeInternal _ErrorEncountered_default_instance_;
class EulaAccepted;
class EulaAcceptedDefaultTypeInternal;
extern EulaAcceptedDefaultTypeInternal _EulaAccepted_default_instance_;
class EulaDeclined;
class EulaDeclinedDefaultTypeInternal;
extern EulaDeclinedDefaultTypeInternal _EulaDeclined_default_instance_;
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class IPAddress;
class IPAddressDefaultTypeInternal;
extern IPAddressDefaultTypeInternal _IPAddress_default_instance_;
class InstallationFailed;
class InstallationFailedDefaultTypeInternal;
extern InstallationFailedDefaultTypeInternal _InstallationFailed_default_instance_;
class InstallationFinished;
class InstallationFinishedDefaultTypeInternal;
extern InstallationFinishedDefaultTypeInternal _InstallationFinished_default_instance_;
class InstallationInterrupted;
class InstallationInterruptedDefaultTypeInternal;
extern InstallationInterruptedDefaultTypeInternal _InstallationInterrupted_default_instance_;
class InstallationStarted;
class InstallationStartedDefaultTypeInternal;
extern InstallationStartedDefaultTypeInternal _InstallationStarted_default_instance_;
class LocationChanged;
class LocationChangedDefaultTypeInternal;
extern LocationChangedDefaultTypeInternal _LocationChanged_default_instance_;
class PageDisplayed;
class PageDisplayedDefaultTypeInternal;
extern PageDisplayedDefaultTypeInternal _PageDisplayed_default_instance_;
class PreparationFinished;
class PreparationFinishedDefaultTypeInternal;
extern PreparationFinishedDefaultTypeInternal _PreparationFinished_default_instance_;
class PreparationStarted;
class PreparationStartedDefaultTypeInternal;
extern PreparationStartedDefaultTypeInternal _PreparationStarted_default_instance_;
class ProvidedClientFound;
class ProvidedClientFoundDefaultTypeInternal;
extern ProvidedClientFoundDefaultTypeInternal _ProvidedClientFound_default_instance_;
class RedistSearchConcluded;
class RedistSearchConcludedDefaultTypeInternal;
extern RedistSearchConcludedDefaultTypeInternal _RedistSearchConcluded_default_instance_;
class SharedCacheMessageClosed;
class SharedCacheMessageClosedDefaultTypeInternal;
extern SharedCacheMessageClosedDefaultTypeInternal _SharedCacheMessageClosed_default_instance_;
class SharedCacheMessageShown;
class SharedCacheMessageShownDefaultTypeInternal;
extern SharedCacheMessageShownDefaultTypeInternal _SharedCacheMessageShown_default_instance_;
class ShutDown;
class ShutDownDefaultTypeInternal;
extern ShutDownDefaultTypeInternal _ShutDown_default_instance_;
class Started;
class StartedDefaultTypeInternal;
extern StartedDefaultTypeInternal _Started_default_instance_;
class UninstallerCreationFinished;
class UninstallerCreationFinishedDefaultTypeInternal;
extern UninstallerCreationFinishedDefaultTypeInternal _UninstallerCreationFinished_default_instance_;
class UninstallerCreationStarted;
class UninstallerCreationStartedDefaultTypeInternal;
extern UninstallerCreationStartedDefaultTypeInternal _UninstallerCreationStarted_default_instance_;
class UserCancelled;
class UserCancelledDefaultTypeInternal;
extern UserCancelledDefaultTypeInternal _UserCancelled_default_instance_;
}  // namespace installer
}  // namespace eve_launcher
namespace google {
namespace protobuf {
template<> ::eve_launcher::installer::AnalyticsMessageSent* Arena::CreateMaybeMessage<::eve_launcher::installer::AnalyticsMessageSent>(Arena*);
template<> ::eve_launcher::installer::AutoRunDisabled* Arena::CreateMaybeMessage<::eve_launcher::installer::AutoRunDisabled>(Arena*);
template<> ::eve_launcher::installer::AutoRunEnabled* Arena::CreateMaybeMessage<::eve_launcher::installer::AutoRunEnabled>(Arena*);
template<> ::eve_launcher::installer::ComponentInitializationFinished* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentInitializationFinished>(Arena*);
template<> ::eve_launcher::installer::ComponentInitializationStarted* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentInitializationStarted>(Arena*);
template<> ::eve_launcher::installer::ComponentInstallationFinished* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentInstallationFinished>(Arena*);
template<> ::eve_launcher::installer::ComponentInstallationStarted* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentInstallationStarted>(Arena*);
template<> ::eve_launcher::installer::ComponentsInitializationFinished* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentsInitializationFinished>(Arena*);
template<> ::eve_launcher::installer::ComponentsInitializationStarted* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentsInitializationStarted>(Arena*);
template<> ::eve_launcher::installer::ComponentsInstallationFinished* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentsInstallationFinished>(Arena*);
template<> ::eve_launcher::installer::ComponentsInstallationStarted* Arena::CreateMaybeMessage<::eve_launcher::installer::ComponentsInstallationStarted>(Arena*);
template<> ::eve_launcher::installer::DetailsDisplayed* Arena::CreateMaybeMessage<::eve_launcher::installer::DetailsDisplayed>(Arena*);
template<> ::eve_launcher::installer::DetailsHidden* Arena::CreateMaybeMessage<::eve_launcher::installer::DetailsHidden>(Arena*);
template<> ::eve_launcher::installer::ErrorEncountered* Arena::CreateMaybeMessage<::eve_launcher::installer::ErrorEncountered>(Arena*);
template<> ::eve_launcher::installer::EulaAccepted* Arena::CreateMaybeMessage<::eve_launcher::installer::EulaAccepted>(Arena*);
template<> ::eve_launcher::installer::EulaDeclined* Arena::CreateMaybeMessage<::eve_launcher::installer::EulaDeclined>(Arena*);
template<> ::eve_launcher::installer::Event* Arena::CreateMaybeMessage<::eve_launcher::installer::Event>(Arena*);
template<> ::eve_launcher::installer::IPAddress* Arena::CreateMaybeMessage<::eve_launcher::installer::IPAddress>(Arena*);
template<> ::eve_launcher::installer::InstallationFailed* Arena::CreateMaybeMessage<::eve_launcher::installer::InstallationFailed>(Arena*);
template<> ::eve_launcher::installer::InstallationFinished* Arena::CreateMaybeMessage<::eve_launcher::installer::InstallationFinished>(Arena*);
template<> ::eve_launcher::installer::InstallationInterrupted* Arena::CreateMaybeMessage<::eve_launcher::installer::InstallationInterrupted>(Arena*);
template<> ::eve_launcher::installer::InstallationStarted* Arena::CreateMaybeMessage<::eve_launcher::installer::InstallationStarted>(Arena*);
template<> ::eve_launcher::installer::LocationChanged* Arena::CreateMaybeMessage<::eve_launcher::installer::LocationChanged>(Arena*);
template<> ::eve_launcher::installer::PageDisplayed* Arena::CreateMaybeMessage<::eve_launcher::installer::PageDisplayed>(Arena*);
template<> ::eve_launcher::installer::PreparationFinished* Arena::CreateMaybeMessage<::eve_launcher::installer::PreparationFinished>(Arena*);
template<> ::eve_launcher::installer::PreparationStarted* Arena::CreateMaybeMessage<::eve_launcher::installer::PreparationStarted>(Arena*);
template<> ::eve_launcher::installer::ProvidedClientFound* Arena::CreateMaybeMessage<::eve_launcher::installer::ProvidedClientFound>(Arena*);
template<> ::eve_launcher::installer::RedistSearchConcluded* Arena::CreateMaybeMessage<::eve_launcher::installer::RedistSearchConcluded>(Arena*);
template<> ::eve_launcher::installer::SharedCacheMessageClosed* Arena::CreateMaybeMessage<::eve_launcher::installer::SharedCacheMessageClosed>(Arena*);
template<> ::eve_launcher::installer::SharedCacheMessageShown* Arena::CreateMaybeMessage<::eve_launcher::installer::SharedCacheMessageShown>(Arena*);
template<> ::eve_launcher::installer::ShutDown* Arena::CreateMaybeMessage<::eve_launcher::installer::ShutDown>(Arena*);
template<> ::eve_launcher::installer::Started* Arena::CreateMaybeMessage<::eve_launcher::installer::Started>(Arena*);
template<> ::eve_launcher::installer::UninstallerCreationFinished* Arena::CreateMaybeMessage<::eve_launcher::installer::UninstallerCreationFinished>(Arena*);
template<> ::eve_launcher::installer::UninstallerCreationStarted* Arena::CreateMaybeMessage<::eve_launcher::installer::UninstallerCreationStarted>(Arena*);
template<> ::eve_launcher::installer::UserCancelled* Arena::CreateMaybeMessage<::eve_launcher::installer::UserCancelled>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace eve_launcher {
namespace installer {

enum PageDisplayed_FlowDirection {
  PageDisplayed_FlowDirection_FLOWDIRECTION_UNSPECIFIED = 0,
  PageDisplayed_FlowDirection_FLOWDIRECTION_FIRST_VIEW = 1,
  PageDisplayed_FlowDirection_FLOWDIRECTION_FORWARDS = 2,
  PageDisplayed_FlowDirection_FLOWDIRECTION_BACKWARDS = 3,
  PageDisplayed_FlowDirection_FLOWDIRECTION_RELOAD = 4,
  PageDisplayed_FlowDirection_PageDisplayed_FlowDirection_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PageDisplayed_FlowDirection_PageDisplayed_FlowDirection_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PageDisplayed_FlowDirection_IsValid(int value);
const PageDisplayed_FlowDirection PageDisplayed_FlowDirection_FlowDirection_MIN = PageDisplayed_FlowDirection_FLOWDIRECTION_UNSPECIFIED;
const PageDisplayed_FlowDirection PageDisplayed_FlowDirection_FlowDirection_MAX = PageDisplayed_FlowDirection_FLOWDIRECTION_RELOAD;
const int PageDisplayed_FlowDirection_FlowDirection_ARRAYSIZE = PageDisplayed_FlowDirection_FlowDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* PageDisplayed_FlowDirection_descriptor();
inline const ::std::string& PageDisplayed_FlowDirection_Name(PageDisplayed_FlowDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    PageDisplayed_FlowDirection_descriptor(), value);
}
inline bool PageDisplayed_FlowDirection_Parse(
    const ::std::string& name, PageDisplayed_FlowDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PageDisplayed_FlowDirection>(
    PageDisplayed_FlowDirection_descriptor(), name, value);
}
enum UserCancelled_Progress {
  UserCancelled_Progress_PROGRESS_UNSPECIFIED = 0,
  UserCancelled_Progress_PROGRESS_NOT_STARTED = 1,
  UserCancelled_Progress_PROGRESS_INSTALLING = 2,
  UserCancelled_Progress_PROGRESS_FINISHED = 3,
  UserCancelled_Progress_PROGRESS_FAILED = 4,
  UserCancelled_Progress_UserCancelled_Progress_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UserCancelled_Progress_UserCancelled_Progress_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UserCancelled_Progress_IsValid(int value);
const UserCancelled_Progress UserCancelled_Progress_Progress_MIN = UserCancelled_Progress_PROGRESS_UNSPECIFIED;
const UserCancelled_Progress UserCancelled_Progress_Progress_MAX = UserCancelled_Progress_PROGRESS_FAILED;
const int UserCancelled_Progress_Progress_ARRAYSIZE = UserCancelled_Progress_Progress_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserCancelled_Progress_descriptor();
inline const ::std::string& UserCancelled_Progress_Name(UserCancelled_Progress value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserCancelled_Progress_descriptor(), value);
}
inline bool UserCancelled_Progress_Parse(
    const ::std::string& name, UserCancelled_Progress* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserCancelled_Progress>(
    UserCancelled_Progress_descriptor(), name, value);
}
enum ShutDown_State {
  ShutDown_State_STATE_UNSPECIFIED = 0,
  ShutDown_State_STATE_INSTALLED = 1,
  ShutDown_State_STATE_INSTALLATION_FAILED = 2,
  ShutDown_State_STATE_INSTALLATION_NOT_STARTED = 3,
  ShutDown_State_ShutDown_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ShutDown_State_ShutDown_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ShutDown_State_IsValid(int value);
const ShutDown_State ShutDown_State_State_MIN = ShutDown_State_STATE_UNSPECIFIED;
const ShutDown_State ShutDown_State_State_MAX = ShutDown_State_STATE_INSTALLATION_NOT_STARTED;
const int ShutDown_State_State_ARRAYSIZE = ShutDown_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* ShutDown_State_descriptor();
inline const ::std::string& ShutDown_State_Name(ShutDown_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    ShutDown_State_descriptor(), value);
}
inline bool ShutDown_State_Parse(
    const ::std::string& name, ShutDown_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ShutDown_State>(
    ShutDown_State_descriptor(), name, value);
}
enum LocationChanged_Source {
  LocationChanged_Source_SOURCE_UNSPECIFIED = 0,
  LocationChanged_Source_SOURCE_INSTALL_DIRECTORY = 1,
  LocationChanged_Source_SOURCE_START_MENU_LOCATION = 2,
  LocationChanged_Source_SOURCE_SHARED_CACHE_FOLDER = 3,
  LocationChanged_Source_LocationChanged_Source_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LocationChanged_Source_LocationChanged_Source_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LocationChanged_Source_IsValid(int value);
const LocationChanged_Source LocationChanged_Source_Source_MIN = LocationChanged_Source_SOURCE_UNSPECIFIED;
const LocationChanged_Source LocationChanged_Source_Source_MAX = LocationChanged_Source_SOURCE_SHARED_CACHE_FOLDER;
const int LocationChanged_Source_Source_ARRAYSIZE = LocationChanged_Source_Source_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationChanged_Source_descriptor();
inline const ::std::string& LocationChanged_Source_Name(LocationChanged_Source value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationChanged_Source_descriptor(), value);
}
inline bool LocationChanged_Source_Parse(
    const ::std::string& name, LocationChanged_Source* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationChanged_Source>(
    LocationChanged_Source_descriptor(), name, value);
}
enum LocationChanged_Provider {
  LocationChanged_Provider_PROVIDER_UNSPECIFIED = 0,
  LocationChanged_Provider_PROVIDER_USER = 1,
  LocationChanged_Provider_PROVIDER_SYSTEM = 2,
  LocationChanged_Provider_LocationChanged_Provider_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LocationChanged_Provider_LocationChanged_Provider_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LocationChanged_Provider_IsValid(int value);
const LocationChanged_Provider LocationChanged_Provider_Provider_MIN = LocationChanged_Provider_PROVIDER_UNSPECIFIED;
const LocationChanged_Provider LocationChanged_Provider_Provider_MAX = LocationChanged_Provider_PROVIDER_SYSTEM;
const int LocationChanged_Provider_Provider_ARRAYSIZE = LocationChanged_Provider_Provider_MAX + 1;

const ::google::protobuf::EnumDescriptor* LocationChanged_Provider_descriptor();
inline const ::std::string& LocationChanged_Provider_Name(LocationChanged_Provider value) {
  return ::google::protobuf::internal::NameOfEnum(
    LocationChanged_Provider_descriptor(), value);
}
inline bool LocationChanged_Provider_Parse(
    const ::std::string& name, LocationChanged_Provider* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LocationChanged_Provider>(
    LocationChanged_Provider_descriptor(), name, value);
}
enum RedistSearchConcluded_RedistReason {
  RedistSearchConcluded_RedistReason_REDISTREASON_UNSPECIFIED = 0,
  RedistSearchConcluded_RedistReason_REDISTREASON_NOT_WINDOWS = 1,
  RedistSearchConcluded_RedistReason_REDISTREASON_INCLUDED_IN_WINDOWS_VERSION = 2,
  RedistSearchConcluded_RedistReason_REDISTREASON_FOUND_DLLS = 3,
  RedistSearchConcluded_RedistReason_REDISTREASON_FOUND_WINDOWS_UPDATE = 4,
  RedistSearchConcluded_RedistReason_REDISTREASON_WINDOWS_UPDATE_MISSING = 5,
  RedistSearchConcluded_RedistReason_REDISTREASON_REDIST_MISSING = 6,
  RedistSearchConcluded_RedistReason_RedistSearchConcluded_RedistReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RedistSearchConcluded_RedistReason_RedistSearchConcluded_RedistReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RedistSearchConcluded_RedistReason_IsValid(int value);
const RedistSearchConcluded_RedistReason RedistSearchConcluded_RedistReason_RedistReason_MIN = RedistSearchConcluded_RedistReason_REDISTREASON_UNSPECIFIED;
const RedistSearchConcluded_RedistReason RedistSearchConcluded_RedistReason_RedistReason_MAX = RedistSearchConcluded_RedistReason_REDISTREASON_REDIST_MISSING;
const int RedistSearchConcluded_RedistReason_RedistReason_ARRAYSIZE = RedistSearchConcluded_RedistReason_RedistReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* RedistSearchConcluded_RedistReason_descriptor();
inline const ::std::string& RedistSearchConcluded_RedistReason_Name(RedistSearchConcluded_RedistReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    RedistSearchConcluded_RedistReason_descriptor(), value);
}
inline bool RedistSearchConcluded_RedistReason_Parse(
    const ::std::string& name, RedistSearchConcluded_RedistReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RedistSearchConcluded_RedistReason>(
    RedistSearchConcluded_RedistReason_descriptor(), name, value);
}
enum ErrorEncountered_ErrorCode {
  ErrorEncountered_ErrorCode_ERRORCODE_UNSPECIFIED = 0,
  ErrorEncountered_ErrorCode_ERRORCODE_CREATE_OPERATIONS = 1,
  ErrorEncountered_ErrorCode_ERRORCODE_ADD_OPERATION = 2,
  ErrorEncountered_ErrorCode_ERRORCODE_SEARCH_DLL = 3,
  ErrorEncountered_ErrorCode_ERRORCODE_SEARCH_WINDOWS_UPDATE = 4,
  ErrorEncountered_ErrorCode_ERRORCODE_MISSING_PREREQUISITE = 5,
  ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FAILURE = 6,
  ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_UNFINISHED = 7,
  ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FORCE_UPDATE = 8,
  ErrorEncountered_ErrorCode_ErrorEncountered_ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorEncountered_ErrorCode_ErrorEncountered_ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorEncountered_ErrorCode_IsValid(int value);
const ErrorEncountered_ErrorCode ErrorEncountered_ErrorCode_ErrorCode_MIN = ErrorEncountered_ErrorCode_ERRORCODE_UNSPECIFIED;
const ErrorEncountered_ErrorCode ErrorEncountered_ErrorCode_ErrorCode_MAX = ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FORCE_UPDATE;
const int ErrorEncountered_ErrorCode_ErrorCode_ARRAYSIZE = ErrorEncountered_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorEncountered_ErrorCode_descriptor();
inline const ::std::string& ErrorEncountered_ErrorCode_Name(ErrorEncountered_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorEncountered_ErrorCode_descriptor(), value);
}
inline bool ErrorEncountered_ErrorCode_Parse(
    const ::std::string& name, ErrorEncountered_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorEncountered_ErrorCode>(
    ErrorEncountered_ErrorCode_descriptor(), name, value);
}
enum Page {
  PAGE_UNSPECIFIED = 0,
  PAGE_NOT_FOUND = 1,
  PAGE_NO_PAGE = 2,
  PAGE_INTRODUCTION = 3,
  PAGE_TARGET_DIRECTORY = 4,
  PAGE_COMPONENT_SELECTION = 5,
  PAGE_EULA = 6,
  PAGE_START_MENU = 7,
  PAGE_READY = 8,
  PAGE_EXECUTION = 9,
  PAGE_FINISHED = 10,
  PAGE_FAILED = 11,
  Page_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Page_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Page_IsValid(int value);
const Page Page_MIN = PAGE_UNSPECIFIED;
const Page Page_MAX = PAGE_FAILED;
const int Page_ARRAYSIZE = Page_MAX + 1;

const ::google::protobuf::EnumDescriptor* Page_descriptor();
inline const ::std::string& Page_Name(Page value) {
  return ::google::protobuf::internal::NameOfEnum(
    Page_descriptor(), value);
}
inline bool Page_Parse(
    const ::std::string& name, Page* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Page>(
    Page_descriptor(), name, value);
}
enum RedistVersion {
  REDISTVERSION_UNSPECIFIED = 0,
  REDISTVERSION_NONE = 1,
  REDISTVERSION_7SP1_X64 = 2,
  REDISTVERSION_7SP1_X86 = 3,
  REDISTVERSION_8_X64 = 4,
  REDISTVERSION_8_X86 = 5,
  REDISTVERSION_81_X64 = 6,
  REDISTVERSION_81_X86 = 7,
  RedistVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RedistVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RedistVersion_IsValid(int value);
const RedistVersion RedistVersion_MIN = REDISTVERSION_UNSPECIFIED;
const RedistVersion RedistVersion_MAX = REDISTVERSION_81_X86;
const int RedistVersion_ARRAYSIZE = RedistVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* RedistVersion_descriptor();
inline const ::std::string& RedistVersion_Name(RedistVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    RedistVersion_descriptor(), value);
}
inline bool RedistVersion_Parse(
    const ::std::string& name, RedistVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RedistVersion>(
    RedistVersion_descriptor(), name, value);
}
enum MessageBoxButton {
  MESSAGEBOXBUTTON_UNSPECIFIED = 0,
  MESSAGEBOXBUTTON_YES = 1,
  MESSAGEBOXBUTTON_NO = 2,
  MessageBoxButton_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageBoxButton_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageBoxButton_IsValid(int value);
const MessageBoxButton MessageBoxButton_MIN = MESSAGEBOXBUTTON_UNSPECIFIED;
const MessageBoxButton MessageBoxButton_MAX = MESSAGEBOXBUTTON_NO;
const int MessageBoxButton_ARRAYSIZE = MessageBoxButton_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageBoxButton_descriptor();
inline const ::std::string& MessageBoxButton_Name(MessageBoxButton value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageBoxButton_descriptor(), value);
}
inline bool MessageBoxButton_Parse(
    const ::std::string& name, MessageBoxButton* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageBoxButton>(
    MessageBoxButton_descriptor(), name, value);
}
enum Component {
  COMPONENT_UNSPECIFIED = 0,
  COMPONENT_NONE = 1,
  COMPONENT_LAUNCHER = 2,
  COMPONENT_REDIST = 3,
  Component_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Component_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Component_IsValid(int value);
const Component Component_MIN = COMPONENT_UNSPECIFIED;
const Component Component_MAX = COMPONENT_REDIST;
const int Component_ARRAYSIZE = Component_MAX + 1;

const ::google::protobuf::EnumDescriptor* Component_descriptor();
inline const ::std::string& Component_Name(Component value) {
  return ::google::protobuf::internal::NameOfEnum(
    Component_descriptor(), value);
}
inline bool Component_Parse(
    const ::std::string& name, Component* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Component>(
    Component_descriptor(), name, value);
}
// ===================================================================

class Started : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.Started) */ {
 public:
  Started();
  virtual ~Started();

  Started(const Started& from);

  inline Started& operator=(const Started& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Started(Started&& from) noexcept
    : Started() {
    *this = ::std::move(from);
  }

  inline Started& operator=(Started&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Started& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Started* internal_default_instance() {
    return reinterpret_cast<const Started*>(
               &_Started_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Started* other);
  friend void swap(Started& a, Started& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Started* New() const final {
    return CreateMaybeMessage<Started>(NULL);
  }

  Started* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Started>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Started& from);
  void MergeFrom(const Started& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Started* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .platform.Information system_information = 3;
  bool has_system_information() const;
  void clear_system_information();
  static const int kSystemInformationFieldNumber = 3;
  private:
  const ::platform::Information& _internal_system_information() const;
  public:
  const ::platform::Information& system_information() const;
  ::platform::Information* release_system_information();
  ::platform::Information* mutable_system_information();
  void set_allocated_system_information(::platform::Information* system_information);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.Started)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::platform::Information* system_information_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PageDisplayed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.PageDisplayed) */ {
 public:
  PageDisplayed();
  virtual ~PageDisplayed();

  PageDisplayed(const PageDisplayed& from);

  inline PageDisplayed& operator=(const PageDisplayed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageDisplayed(PageDisplayed&& from) noexcept
    : PageDisplayed() {
    *this = ::std::move(from);
  }

  inline PageDisplayed& operator=(PageDisplayed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PageDisplayed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageDisplayed* internal_default_instance() {
    return reinterpret_cast<const PageDisplayed*>(
               &_PageDisplayed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PageDisplayed* other);
  friend void swap(PageDisplayed& a, PageDisplayed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageDisplayed* New() const final {
    return CreateMaybeMessage<PageDisplayed>(NULL);
  }

  PageDisplayed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageDisplayed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageDisplayed& from);
  void MergeFrom(const PageDisplayed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageDisplayed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PageDisplayed_FlowDirection FlowDirection;
  static const FlowDirection FLOWDIRECTION_UNSPECIFIED =
    PageDisplayed_FlowDirection_FLOWDIRECTION_UNSPECIFIED;
  static const FlowDirection FLOWDIRECTION_FIRST_VIEW =
    PageDisplayed_FlowDirection_FLOWDIRECTION_FIRST_VIEW;
  static const FlowDirection FLOWDIRECTION_FORWARDS =
    PageDisplayed_FlowDirection_FLOWDIRECTION_FORWARDS;
  static const FlowDirection FLOWDIRECTION_BACKWARDS =
    PageDisplayed_FlowDirection_FLOWDIRECTION_BACKWARDS;
  static const FlowDirection FLOWDIRECTION_RELOAD =
    PageDisplayed_FlowDirection_FLOWDIRECTION_RELOAD;
  static inline bool FlowDirection_IsValid(int value) {
    return PageDisplayed_FlowDirection_IsValid(value);
  }
  static const FlowDirection FlowDirection_MIN =
    PageDisplayed_FlowDirection_FlowDirection_MIN;
  static const FlowDirection FlowDirection_MAX =
    PageDisplayed_FlowDirection_FlowDirection_MAX;
  static const int FlowDirection_ARRAYSIZE =
    PageDisplayed_FlowDirection_FlowDirection_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FlowDirection_descriptor() {
    return PageDisplayed_FlowDirection_descriptor();
  }
  static inline const ::std::string& FlowDirection_Name(FlowDirection value) {
    return PageDisplayed_FlowDirection_Name(value);
  }
  static inline bool FlowDirection_Parse(const ::std::string& name,
      FlowDirection* value) {
    return PageDisplayed_FlowDirection_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.Page previous_page = 2;
  void clear_previous_page();
  static const int kPreviousPageFieldNumber = 2;
  ::eve_launcher::installer::Page previous_page() const;
  void set_previous_page(::eve_launcher::installer::Page value);

  // .eve_launcher.installer.Page current_page = 3;
  void clear_current_page();
  static const int kCurrentPageFieldNumber = 3;
  ::eve_launcher::installer::Page current_page() const;
  void set_current_page(::eve_launcher::installer::Page value);

  // .eve_launcher.installer.PageDisplayed.FlowDirection flow = 4;
  void clear_flow();
  static const int kFlowFieldNumber = 4;
  ::eve_launcher::installer::PageDisplayed_FlowDirection flow() const;
  void set_flow(::eve_launcher::installer::PageDisplayed_FlowDirection value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.PageDisplayed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int previous_page_;
  int current_page_;
  int flow_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserCancelled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.UserCancelled) */ {
 public:
  UserCancelled();
  virtual ~UserCancelled();

  UserCancelled(const UserCancelled& from);

  inline UserCancelled& operator=(const UserCancelled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCancelled(UserCancelled&& from) noexcept
    : UserCancelled() {
    *this = ::std::move(from);
  }

  inline UserCancelled& operator=(UserCancelled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCancelled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCancelled* internal_default_instance() {
    return reinterpret_cast<const UserCancelled*>(
               &_UserCancelled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UserCancelled* other);
  friend void swap(UserCancelled& a, UserCancelled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCancelled* New() const final {
    return CreateMaybeMessage<UserCancelled>(NULL);
  }

  UserCancelled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UserCancelled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UserCancelled& from);
  void MergeFrom(const UserCancelled& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserCancelled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef UserCancelled_Progress Progress;
  static const Progress PROGRESS_UNSPECIFIED =
    UserCancelled_Progress_PROGRESS_UNSPECIFIED;
  static const Progress PROGRESS_NOT_STARTED =
    UserCancelled_Progress_PROGRESS_NOT_STARTED;
  static const Progress PROGRESS_INSTALLING =
    UserCancelled_Progress_PROGRESS_INSTALLING;
  static const Progress PROGRESS_FINISHED =
    UserCancelled_Progress_PROGRESS_FINISHED;
  static const Progress PROGRESS_FAILED =
    UserCancelled_Progress_PROGRESS_FAILED;
  static inline bool Progress_IsValid(int value) {
    return UserCancelled_Progress_IsValid(value);
  }
  static const Progress Progress_MIN =
    UserCancelled_Progress_Progress_MIN;
  static const Progress Progress_MAX =
    UserCancelled_Progress_Progress_MAX;
  static const int Progress_ARRAYSIZE =
    UserCancelled_Progress_Progress_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Progress_descriptor() {
    return UserCancelled_Progress_descriptor();
  }
  static inline const ::std::string& Progress_Name(Progress value) {
    return UserCancelled_Progress_Name(value);
  }
  static inline bool Progress_Parse(const ::std::string& name,
      Progress* value) {
    return UserCancelled_Progress_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.Page page = 2;
  void clear_page();
  static const int kPageFieldNumber = 2;
  ::eve_launcher::installer::Page page() const;
  void set_page(::eve_launcher::installer::Page value);

  // .eve_launcher.installer.UserCancelled.Progress progress = 3;
  void clear_progress();
  static const int kProgressFieldNumber = 3;
  ::eve_launcher::installer::UserCancelled_Progress progress() const;
  void set_progress(::eve_launcher::installer::UserCancelled_Progress value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.UserCancelled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int page_;
  int progress_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShutDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ShutDown) */ {
 public:
  ShutDown();
  virtual ~ShutDown();

  ShutDown(const ShutDown& from);

  inline ShutDown& operator=(const ShutDown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShutDown(ShutDown&& from) noexcept
    : ShutDown() {
    *this = ::std::move(from);
  }

  inline ShutDown& operator=(ShutDown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutDown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShutDown* internal_default_instance() {
    return reinterpret_cast<const ShutDown*>(
               &_ShutDown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ShutDown* other);
  friend void swap(ShutDown& a, ShutDown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShutDown* New() const final {
    return CreateMaybeMessage<ShutDown>(NULL);
  }

  ShutDown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShutDown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShutDown& from);
  void MergeFrom(const ShutDown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShutDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ShutDown_State State;
  static const State STATE_UNSPECIFIED =
    ShutDown_State_STATE_UNSPECIFIED;
  static const State STATE_INSTALLED =
    ShutDown_State_STATE_INSTALLED;
  static const State STATE_INSTALLATION_FAILED =
    ShutDown_State_STATE_INSTALLATION_FAILED;
  static const State STATE_INSTALLATION_NOT_STARTED =
    ShutDown_State_STATE_INSTALLATION_NOT_STARTED;
  static inline bool State_IsValid(int value) {
    return ShutDown_State_IsValid(value);
  }
  static const State State_MIN =
    ShutDown_State_State_MIN;
  static const State State_MAX =
    ShutDown_State_State_MAX;
  static const int State_ARRAYSIZE =
    ShutDown_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return ShutDown_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return ShutDown_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return ShutDown_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.Page page = 2;
  void clear_page();
  static const int kPageFieldNumber = 2;
  ::eve_launcher::installer::Page page() const;
  void set_page(::eve_launcher::installer::Page value);

  // .eve_launcher.installer.ShutDown.State state = 3;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::eve_launcher::installer::ShutDown_State state() const;
  void set_state(::eve_launcher::installer::ShutDown_State value);

  // bool finish_button = 4;
  void clear_finish_button();
  static const int kFinishButtonFieldNumber = 4;
  bool finish_button() const;
  void set_finish_button(bool value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ShutDown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int page_;
  int state_;
  bool finish_button_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PreparationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.PreparationStarted) */ {
 public:
  PreparationStarted();
  virtual ~PreparationStarted();

  PreparationStarted(const PreparationStarted& from);

  inline PreparationStarted& operator=(const PreparationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PreparationStarted(PreparationStarted&& from) noexcept
    : PreparationStarted() {
    *this = ::std::move(from);
  }

  inline PreparationStarted& operator=(PreparationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PreparationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PreparationStarted* internal_default_instance() {
    return reinterpret_cast<const PreparationStarted*>(
               &_PreparationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PreparationStarted* other);
  friend void swap(PreparationStarted& a, PreparationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PreparationStarted* New() const final {
    return CreateMaybeMessage<PreparationStarted>(NULL);
  }

  PreparationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PreparationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PreparationStarted& from);
  void MergeFrom(const PreparationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PreparationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.PreparationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PreparationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.PreparationFinished) */ {
 public:
  PreparationFinished();
  virtual ~PreparationFinished();

  PreparationFinished(const PreparationFinished& from);

  inline PreparationFinished& operator=(const PreparationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PreparationFinished(PreparationFinished&& from) noexcept
    : PreparationFinished() {
    *this = ::std::move(from);
  }

  inline PreparationFinished& operator=(PreparationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PreparationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PreparationFinished* internal_default_instance() {
    return reinterpret_cast<const PreparationFinished*>(
               &_PreparationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PreparationFinished* other);
  friend void swap(PreparationFinished& a, PreparationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PreparationFinished* New() const final {
    return CreateMaybeMessage<PreparationFinished>(NULL);
  }

  PreparationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PreparationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PreparationFinished& from);
  void MergeFrom(const PreparationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PreparationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.PreparationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LocationChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.LocationChanged) */ {
 public:
  LocationChanged();
  virtual ~LocationChanged();

  LocationChanged(const LocationChanged& from);

  inline LocationChanged& operator=(const LocationChanged& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocationChanged(LocationChanged&& from) noexcept
    : LocationChanged() {
    *this = ::std::move(from);
  }

  inline LocationChanged& operator=(LocationChanged&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocationChanged& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationChanged* internal_default_instance() {
    return reinterpret_cast<const LocationChanged*>(
               &_LocationChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(LocationChanged* other);
  friend void swap(LocationChanged& a, LocationChanged& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocationChanged* New() const final {
    return CreateMaybeMessage<LocationChanged>(NULL);
  }

  LocationChanged* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LocationChanged>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LocationChanged& from);
  void MergeFrom(const LocationChanged& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef LocationChanged_Source Source;
  static const Source SOURCE_UNSPECIFIED =
    LocationChanged_Source_SOURCE_UNSPECIFIED;
  static const Source SOURCE_INSTALL_DIRECTORY =
    LocationChanged_Source_SOURCE_INSTALL_DIRECTORY;
  static const Source SOURCE_START_MENU_LOCATION =
    LocationChanged_Source_SOURCE_START_MENU_LOCATION;
  static const Source SOURCE_SHARED_CACHE_FOLDER =
    LocationChanged_Source_SOURCE_SHARED_CACHE_FOLDER;
  static inline bool Source_IsValid(int value) {
    return LocationChanged_Source_IsValid(value);
  }
  static const Source Source_MIN =
    LocationChanged_Source_Source_MIN;
  static const Source Source_MAX =
    LocationChanged_Source_Source_MAX;
  static const int Source_ARRAYSIZE =
    LocationChanged_Source_Source_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Source_descriptor() {
    return LocationChanged_Source_descriptor();
  }
  static inline const ::std::string& Source_Name(Source value) {
    return LocationChanged_Source_Name(value);
  }
  static inline bool Source_Parse(const ::std::string& name,
      Source* value) {
    return LocationChanged_Source_Parse(name, value);
  }

  typedef LocationChanged_Provider Provider;
  static const Provider PROVIDER_UNSPECIFIED =
    LocationChanged_Provider_PROVIDER_UNSPECIFIED;
  static const Provider PROVIDER_USER =
    LocationChanged_Provider_PROVIDER_USER;
  static const Provider PROVIDER_SYSTEM =
    LocationChanged_Provider_PROVIDER_SYSTEM;
  static inline bool Provider_IsValid(int value) {
    return LocationChanged_Provider_IsValid(value);
  }
  static const Provider Provider_MIN =
    LocationChanged_Provider_Provider_MIN;
  static const Provider Provider_MAX =
    LocationChanged_Provider_Provider_MAX;
  static const int Provider_ARRAYSIZE =
    LocationChanged_Provider_Provider_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Provider_descriptor() {
    return LocationChanged_Provider_descriptor();
  }
  static inline const ::std::string& Provider_Name(Provider value) {
    return LocationChanged_Provider_Name(value);
  }
  static inline bool Provider_Parse(const ::std::string& name,
      Provider* value) {
    return LocationChanged_Provider_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string path = 4;
  void clear_path();
  static const int kPathFieldNumber = 4;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.LocationChanged.Source source = 2;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  ::eve_launcher::installer::LocationChanged_Source source() const;
  void set_source(::eve_launcher::installer::LocationChanged_Source value);

  // .eve_launcher.installer.LocationChanged.Provider provider = 3;
  void clear_provider();
  static const int kProviderFieldNumber = 3;
  ::eve_launcher::installer::LocationChanged_Provider provider() const;
  void set_provider(::eve_launcher::installer::LocationChanged_Provider value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.LocationChanged)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int source_;
  int provider_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetailsDisplayed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.DetailsDisplayed) */ {
 public:
  DetailsDisplayed();
  virtual ~DetailsDisplayed();

  DetailsDisplayed(const DetailsDisplayed& from);

  inline DetailsDisplayed& operator=(const DetailsDisplayed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetailsDisplayed(DetailsDisplayed&& from) noexcept
    : DetailsDisplayed() {
    *this = ::std::move(from);
  }

  inline DetailsDisplayed& operator=(DetailsDisplayed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetailsDisplayed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetailsDisplayed* internal_default_instance() {
    return reinterpret_cast<const DetailsDisplayed*>(
               &_DetailsDisplayed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DetailsDisplayed* other);
  friend void swap(DetailsDisplayed& a, DetailsDisplayed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetailsDisplayed* New() const final {
    return CreateMaybeMessage<DetailsDisplayed>(NULL);
  }

  DetailsDisplayed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DetailsDisplayed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DetailsDisplayed& from);
  void MergeFrom(const DetailsDisplayed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetailsDisplayed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.DetailsDisplayed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DetailsHidden : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.DetailsHidden) */ {
 public:
  DetailsHidden();
  virtual ~DetailsHidden();

  DetailsHidden(const DetailsHidden& from);

  inline DetailsHidden& operator=(const DetailsHidden& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DetailsHidden(DetailsHidden&& from) noexcept
    : DetailsHidden() {
    *this = ::std::move(from);
  }

  inline DetailsHidden& operator=(DetailsHidden&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DetailsHidden& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DetailsHidden* internal_default_instance() {
    return reinterpret_cast<const DetailsHidden*>(
               &_DetailsHidden_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DetailsHidden* other);
  friend void swap(DetailsHidden& a, DetailsHidden& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DetailsHidden* New() const final {
    return CreateMaybeMessage<DetailsHidden>(NULL);
  }

  DetailsHidden* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DetailsHidden>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DetailsHidden& from);
  void MergeFrom(const DetailsHidden& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetailsHidden* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.DetailsHidden)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutoRunEnabled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.AutoRunEnabled) */ {
 public:
  AutoRunEnabled();
  virtual ~AutoRunEnabled();

  AutoRunEnabled(const AutoRunEnabled& from);

  inline AutoRunEnabled& operator=(const AutoRunEnabled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutoRunEnabled(AutoRunEnabled&& from) noexcept
    : AutoRunEnabled() {
    *this = ::std::move(from);
  }

  inline AutoRunEnabled& operator=(AutoRunEnabled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoRunEnabled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoRunEnabled* internal_default_instance() {
    return reinterpret_cast<const AutoRunEnabled*>(
               &_AutoRunEnabled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(AutoRunEnabled* other);
  friend void swap(AutoRunEnabled& a, AutoRunEnabled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutoRunEnabled* New() const final {
    return CreateMaybeMessage<AutoRunEnabled>(NULL);
  }

  AutoRunEnabled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AutoRunEnabled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AutoRunEnabled& from);
  void MergeFrom(const AutoRunEnabled& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoRunEnabled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.AutoRunEnabled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AutoRunDisabled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.AutoRunDisabled) */ {
 public:
  AutoRunDisabled();
  virtual ~AutoRunDisabled();

  AutoRunDisabled(const AutoRunDisabled& from);

  inline AutoRunDisabled& operator=(const AutoRunDisabled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AutoRunDisabled(AutoRunDisabled&& from) noexcept
    : AutoRunDisabled() {
    *this = ::std::move(from);
  }

  inline AutoRunDisabled& operator=(AutoRunDisabled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoRunDisabled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AutoRunDisabled* internal_default_instance() {
    return reinterpret_cast<const AutoRunDisabled*>(
               &_AutoRunDisabled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(AutoRunDisabled* other);
  friend void swap(AutoRunDisabled& a, AutoRunDisabled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AutoRunDisabled* New() const final {
    return CreateMaybeMessage<AutoRunDisabled>(NULL);
  }

  AutoRunDisabled* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AutoRunDisabled>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AutoRunDisabled& from);
  void MergeFrom(const AutoRunDisabled& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AutoRunDisabled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.AutoRunDisabled)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EulaAccepted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.EulaAccepted) */ {
 public:
  EulaAccepted();
  virtual ~EulaAccepted();

  EulaAccepted(const EulaAccepted& from);

  inline EulaAccepted& operator=(const EulaAccepted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EulaAccepted(EulaAccepted&& from) noexcept
    : EulaAccepted() {
    *this = ::std::move(from);
  }

  inline EulaAccepted& operator=(EulaAccepted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EulaAccepted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EulaAccepted* internal_default_instance() {
    return reinterpret_cast<const EulaAccepted*>(
               &_EulaAccepted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(EulaAccepted* other);
  friend void swap(EulaAccepted& a, EulaAccepted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EulaAccepted* New() const final {
    return CreateMaybeMessage<EulaAccepted>(NULL);
  }

  EulaAccepted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EulaAccepted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EulaAccepted& from);
  void MergeFrom(const EulaAccepted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EulaAccepted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.EulaAccepted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EulaDeclined : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.EulaDeclined) */ {
 public:
  EulaDeclined();
  virtual ~EulaDeclined();

  EulaDeclined(const EulaDeclined& from);

  inline EulaDeclined& operator=(const EulaDeclined& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EulaDeclined(EulaDeclined&& from) noexcept
    : EulaDeclined() {
    *this = ::std::move(from);
  }

  inline EulaDeclined& operator=(EulaDeclined&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EulaDeclined& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EulaDeclined* internal_default_instance() {
    return reinterpret_cast<const EulaDeclined*>(
               &_EulaDeclined_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(EulaDeclined* other);
  friend void swap(EulaDeclined& a, EulaDeclined& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EulaDeclined* New() const final {
    return CreateMaybeMessage<EulaDeclined>(NULL);
  }

  EulaDeclined* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EulaDeclined>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EulaDeclined& from);
  void MergeFrom(const EulaDeclined& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EulaDeclined* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.EulaDeclined)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedistSearchConcluded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.RedistSearchConcluded) */ {
 public:
  RedistSearchConcluded();
  virtual ~RedistSearchConcluded();

  RedistSearchConcluded(const RedistSearchConcluded& from);

  inline RedistSearchConcluded& operator=(const RedistSearchConcluded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedistSearchConcluded(RedistSearchConcluded&& from) noexcept
    : RedistSearchConcluded() {
    *this = ::std::move(from);
  }

  inline RedistSearchConcluded& operator=(RedistSearchConcluded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RedistSearchConcluded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RedistSearchConcluded* internal_default_instance() {
    return reinterpret_cast<const RedistSearchConcluded*>(
               &_RedistSearchConcluded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(RedistSearchConcluded* other);
  friend void swap(RedistSearchConcluded& a, RedistSearchConcluded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedistSearchConcluded* New() const final {
    return CreateMaybeMessage<RedistSearchConcluded>(NULL);
  }

  RedistSearchConcluded* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RedistSearchConcluded>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RedistSearchConcluded& from);
  void MergeFrom(const RedistSearchConcluded& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RedistSearchConcluded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RedistSearchConcluded_RedistReason RedistReason;
  static const RedistReason REDISTREASON_UNSPECIFIED =
    RedistSearchConcluded_RedistReason_REDISTREASON_UNSPECIFIED;
  static const RedistReason REDISTREASON_NOT_WINDOWS =
    RedistSearchConcluded_RedistReason_REDISTREASON_NOT_WINDOWS;
  static const RedistReason REDISTREASON_INCLUDED_IN_WINDOWS_VERSION =
    RedistSearchConcluded_RedistReason_REDISTREASON_INCLUDED_IN_WINDOWS_VERSION;
  static const RedistReason REDISTREASON_FOUND_DLLS =
    RedistSearchConcluded_RedistReason_REDISTREASON_FOUND_DLLS;
  static const RedistReason REDISTREASON_FOUND_WINDOWS_UPDATE =
    RedistSearchConcluded_RedistReason_REDISTREASON_FOUND_WINDOWS_UPDATE;
  static const RedistReason REDISTREASON_WINDOWS_UPDATE_MISSING =
    RedistSearchConcluded_RedistReason_REDISTREASON_WINDOWS_UPDATE_MISSING;
  static const RedistReason REDISTREASON_REDIST_MISSING =
    RedistSearchConcluded_RedistReason_REDISTREASON_REDIST_MISSING;
  static inline bool RedistReason_IsValid(int value) {
    return RedistSearchConcluded_RedistReason_IsValid(value);
  }
  static const RedistReason RedistReason_MIN =
    RedistSearchConcluded_RedistReason_RedistReason_MIN;
  static const RedistReason RedistReason_MAX =
    RedistSearchConcluded_RedistReason_RedistReason_MAX;
  static const int RedistReason_ARRAYSIZE =
    RedistSearchConcluded_RedistReason_RedistReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RedistReason_descriptor() {
    return RedistSearchConcluded_RedistReason_descriptor();
  }
  static inline const ::std::string& RedistReason_Name(RedistReason value) {
    return RedistSearchConcluded_RedistReason_Name(value);
  }
  static inline bool RedistReason_Parse(const ::std::string& name,
      RedistReason* value) {
    return RedistSearchConcluded_RedistReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.RedistVersion version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::eve_launcher::installer::RedistVersion version() const;
  void set_version(::eve_launcher::installer::RedistVersion value);

  // .eve_launcher.installer.RedistSearchConcluded.RedistReason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::eve_launcher::installer::RedistSearchConcluded_RedistReason reason() const;
  void set_reason(::eve_launcher::installer::RedistSearchConcluded_RedistReason value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.RedistSearchConcluded)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int version_;
  int reason_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProvidedClientFound : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ProvidedClientFound) */ {
 public:
  ProvidedClientFound();
  virtual ~ProvidedClientFound();

  ProvidedClientFound(const ProvidedClientFound& from);

  inline ProvidedClientFound& operator=(const ProvidedClientFound& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProvidedClientFound(ProvidedClientFound&& from) noexcept
    : ProvidedClientFound() {
    *this = ::std::move(from);
  }

  inline ProvidedClientFound& operator=(ProvidedClientFound&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProvidedClientFound& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProvidedClientFound* internal_default_instance() {
    return reinterpret_cast<const ProvidedClientFound*>(
               &_ProvidedClientFound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ProvidedClientFound* other);
  friend void swap(ProvidedClientFound& a, ProvidedClientFound& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProvidedClientFound* New() const final {
    return CreateMaybeMessage<ProvidedClientFound>(NULL);
  }

  ProvidedClientFound* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProvidedClientFound>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProvidedClientFound& from);
  void MergeFrom(const ProvidedClientFound& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProvidedClientFound* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ProvidedClientFound)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SharedCacheMessageShown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.SharedCacheMessageShown) */ {
 public:
  SharedCacheMessageShown();
  virtual ~SharedCacheMessageShown();

  SharedCacheMessageShown(const SharedCacheMessageShown& from);

  inline SharedCacheMessageShown& operator=(const SharedCacheMessageShown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SharedCacheMessageShown(SharedCacheMessageShown&& from) noexcept
    : SharedCacheMessageShown() {
    *this = ::std::move(from);
  }

  inline SharedCacheMessageShown& operator=(SharedCacheMessageShown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SharedCacheMessageShown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SharedCacheMessageShown* internal_default_instance() {
    return reinterpret_cast<const SharedCacheMessageShown*>(
               &_SharedCacheMessageShown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SharedCacheMessageShown* other);
  friend void swap(SharedCacheMessageShown& a, SharedCacheMessageShown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SharedCacheMessageShown* New() const final {
    return CreateMaybeMessage<SharedCacheMessageShown>(NULL);
  }

  SharedCacheMessageShown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SharedCacheMessageShown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SharedCacheMessageShown& from);
  void MergeFrom(const SharedCacheMessageShown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SharedCacheMessageShown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.SharedCacheMessageShown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SharedCacheMessageClosed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.SharedCacheMessageClosed) */ {
 public:
  SharedCacheMessageClosed();
  virtual ~SharedCacheMessageClosed();

  SharedCacheMessageClosed(const SharedCacheMessageClosed& from);

  inline SharedCacheMessageClosed& operator=(const SharedCacheMessageClosed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SharedCacheMessageClosed(SharedCacheMessageClosed&& from) noexcept
    : SharedCacheMessageClosed() {
    *this = ::std::move(from);
  }

  inline SharedCacheMessageClosed& operator=(SharedCacheMessageClosed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SharedCacheMessageClosed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SharedCacheMessageClosed* internal_default_instance() {
    return reinterpret_cast<const SharedCacheMessageClosed*>(
               &_SharedCacheMessageClosed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(SharedCacheMessageClosed* other);
  friend void swap(SharedCacheMessageClosed& a, SharedCacheMessageClosed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SharedCacheMessageClosed* New() const final {
    return CreateMaybeMessage<SharedCacheMessageClosed>(NULL);
  }

  SharedCacheMessageClosed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SharedCacheMessageClosed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SharedCacheMessageClosed& from);
  void MergeFrom(const SharedCacheMessageClosed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SharedCacheMessageClosed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.MessageBoxButton message_box_button = 2;
  void clear_message_box_button();
  static const int kMessageBoxButtonFieldNumber = 2;
  ::eve_launcher::installer::MessageBoxButton message_box_button() const;
  void set_message_box_button(::eve_launcher::installer::MessageBoxButton value);

  // int32 time_displayed = 3;
  void clear_time_displayed();
  static const int kTimeDisplayedFieldNumber = 3;
  ::google::protobuf::int32 time_displayed() const;
  void set_time_displayed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.SharedCacheMessageClosed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int message_box_button_;
  ::google::protobuf::int32 time_displayed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstallationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.InstallationStarted) */ {
 public:
  InstallationStarted();
  virtual ~InstallationStarted();

  InstallationStarted(const InstallationStarted& from);

  inline InstallationStarted& operator=(const InstallationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstallationStarted(InstallationStarted&& from) noexcept
    : InstallationStarted() {
    *this = ::std::move(from);
  }

  inline InstallationStarted& operator=(InstallationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstallationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstallationStarted* internal_default_instance() {
    return reinterpret_cast<const InstallationStarted*>(
               &_InstallationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(InstallationStarted* other);
  friend void swap(InstallationStarted& a, InstallationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstallationStarted* New() const final {
    return CreateMaybeMessage<InstallationStarted>(NULL);
  }

  InstallationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstallationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstallationStarted& from);
  void MergeFrom(const InstallationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstallationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.InstallationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstallationInterrupted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.InstallationInterrupted) */ {
 public:
  InstallationInterrupted();
  virtual ~InstallationInterrupted();

  InstallationInterrupted(const InstallationInterrupted& from);

  inline InstallationInterrupted& operator=(const InstallationInterrupted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstallationInterrupted(InstallationInterrupted&& from) noexcept
    : InstallationInterrupted() {
    *this = ::std::move(from);
  }

  inline InstallationInterrupted& operator=(InstallationInterrupted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstallationInterrupted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstallationInterrupted* internal_default_instance() {
    return reinterpret_cast<const InstallationInterrupted*>(
               &_InstallationInterrupted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(InstallationInterrupted* other);
  friend void swap(InstallationInterrupted& a, InstallationInterrupted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstallationInterrupted* New() const final {
    return CreateMaybeMessage<InstallationInterrupted>(NULL);
  }

  InstallationInterrupted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstallationInterrupted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstallationInterrupted& from);
  void MergeFrom(const InstallationInterrupted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstallationInterrupted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.InstallationInterrupted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstallationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.InstallationFinished) */ {
 public:
  InstallationFinished();
  virtual ~InstallationFinished();

  InstallationFinished(const InstallationFinished& from);

  inline InstallationFinished& operator=(const InstallationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstallationFinished(InstallationFinished&& from) noexcept
    : InstallationFinished() {
    *this = ::std::move(from);
  }

  inline InstallationFinished& operator=(InstallationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstallationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstallationFinished* internal_default_instance() {
    return reinterpret_cast<const InstallationFinished*>(
               &_InstallationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(InstallationFinished* other);
  friend void swap(InstallationFinished& a, InstallationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstallationFinished* New() const final {
    return CreateMaybeMessage<InstallationFinished>(NULL);
  }

  InstallationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstallationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstallationFinished& from);
  void MergeFrom(const InstallationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstallationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.InstallationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstallationFailed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.InstallationFailed) */ {
 public:
  InstallationFailed();
  virtual ~InstallationFailed();

  InstallationFailed(const InstallationFailed& from);

  inline InstallationFailed& operator=(const InstallationFailed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstallationFailed(InstallationFailed&& from) noexcept
    : InstallationFailed() {
    *this = ::std::move(from);
  }

  inline InstallationFailed& operator=(InstallationFailed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstallationFailed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstallationFailed* internal_default_instance() {
    return reinterpret_cast<const InstallationFailed*>(
               &_InstallationFailed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(InstallationFailed* other);
  friend void swap(InstallationFailed& a, InstallationFailed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstallationFailed* New() const final {
    return CreateMaybeMessage<InstallationFailed>(NULL);
  }

  InstallationFailed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstallationFailed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstallationFailed& from);
  void MergeFrom(const InstallationFailed& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstallationFailed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.InstallationFailed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UninstallerCreationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.UninstallerCreationStarted) */ {
 public:
  UninstallerCreationStarted();
  virtual ~UninstallerCreationStarted();

  UninstallerCreationStarted(const UninstallerCreationStarted& from);

  inline UninstallerCreationStarted& operator=(const UninstallerCreationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UninstallerCreationStarted(UninstallerCreationStarted&& from) noexcept
    : UninstallerCreationStarted() {
    *this = ::std::move(from);
  }

  inline UninstallerCreationStarted& operator=(UninstallerCreationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UninstallerCreationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UninstallerCreationStarted* internal_default_instance() {
    return reinterpret_cast<const UninstallerCreationStarted*>(
               &_UninstallerCreationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(UninstallerCreationStarted* other);
  friend void swap(UninstallerCreationStarted& a, UninstallerCreationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UninstallerCreationStarted* New() const final {
    return CreateMaybeMessage<UninstallerCreationStarted>(NULL);
  }

  UninstallerCreationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UninstallerCreationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UninstallerCreationStarted& from);
  void MergeFrom(const UninstallerCreationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UninstallerCreationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.UninstallerCreationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UninstallerCreationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.UninstallerCreationFinished) */ {
 public:
  UninstallerCreationFinished();
  virtual ~UninstallerCreationFinished();

  UninstallerCreationFinished(const UninstallerCreationFinished& from);

  inline UninstallerCreationFinished& operator=(const UninstallerCreationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UninstallerCreationFinished(UninstallerCreationFinished&& from) noexcept
    : UninstallerCreationFinished() {
    *this = ::std::move(from);
  }

  inline UninstallerCreationFinished& operator=(UninstallerCreationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UninstallerCreationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UninstallerCreationFinished* internal_default_instance() {
    return reinterpret_cast<const UninstallerCreationFinished*>(
               &_UninstallerCreationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(UninstallerCreationFinished* other);
  friend void swap(UninstallerCreationFinished& a, UninstallerCreationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UninstallerCreationFinished* New() const final {
    return CreateMaybeMessage<UninstallerCreationFinished>(NULL);
  }

  UninstallerCreationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UninstallerCreationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UninstallerCreationFinished& from);
  void MergeFrom(const UninstallerCreationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UninstallerCreationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.UninstallerCreationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentInitializationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentInitializationStarted) */ {
 public:
  ComponentInitializationStarted();
  virtual ~ComponentInitializationStarted();

  ComponentInitializationStarted(const ComponentInitializationStarted& from);

  inline ComponentInitializationStarted& operator=(const ComponentInitializationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentInitializationStarted(ComponentInitializationStarted&& from) noexcept
    : ComponentInitializationStarted() {
    *this = ::std::move(from);
  }

  inline ComponentInitializationStarted& operator=(ComponentInitializationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentInitializationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentInitializationStarted* internal_default_instance() {
    return reinterpret_cast<const ComponentInitializationStarted*>(
               &_ComponentInitializationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(ComponentInitializationStarted* other);
  friend void swap(ComponentInitializationStarted& a, ComponentInitializationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentInitializationStarted* New() const final {
    return CreateMaybeMessage<ComponentInitializationStarted>(NULL);
  }

  ComponentInitializationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentInitializationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentInitializationStarted& from);
  void MergeFrom(const ComponentInitializationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentInitializationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.Component component = 2;
  void clear_component();
  static const int kComponentFieldNumber = 2;
  ::eve_launcher::installer::Component component() const;
  void set_component(::eve_launcher::installer::Component value);

  // .eve_launcher.installer.RedistVersion redist_version = 3;
  void clear_redist_version();
  static const int kRedistVersionFieldNumber = 3;
  ::eve_launcher::installer::RedistVersion redist_version() const;
  void set_redist_version(::eve_launcher::installer::RedistVersion value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentInitializationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int component_;
  int redist_version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentInitializationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentInitializationFinished) */ {
 public:
  ComponentInitializationFinished();
  virtual ~ComponentInitializationFinished();

  ComponentInitializationFinished(const ComponentInitializationFinished& from);

  inline ComponentInitializationFinished& operator=(const ComponentInitializationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentInitializationFinished(ComponentInitializationFinished&& from) noexcept
    : ComponentInitializationFinished() {
    *this = ::std::move(from);
  }

  inline ComponentInitializationFinished& operator=(ComponentInitializationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentInitializationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentInitializationFinished* internal_default_instance() {
    return reinterpret_cast<const ComponentInitializationFinished*>(
               &_ComponentInitializationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(ComponentInitializationFinished* other);
  friend void swap(ComponentInitializationFinished& a, ComponentInitializationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentInitializationFinished* New() const final {
    return CreateMaybeMessage<ComponentInitializationFinished>(NULL);
  }

  ComponentInitializationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentInitializationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentInitializationFinished& from);
  void MergeFrom(const ComponentInitializationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentInitializationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.Component component = 2;
  void clear_component();
  static const int kComponentFieldNumber = 2;
  ::eve_launcher::installer::Component component() const;
  void set_component(::eve_launcher::installer::Component value);

  // .eve_launcher.installer.RedistVersion redist_version = 3;
  void clear_redist_version();
  static const int kRedistVersionFieldNumber = 3;
  ::eve_launcher::installer::RedistVersion redist_version() const;
  void set_redist_version(::eve_launcher::installer::RedistVersion value);

  // int32 duration = 4;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentInitializationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int component_;
  int redist_version_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentInstallationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentInstallationStarted) */ {
 public:
  ComponentInstallationStarted();
  virtual ~ComponentInstallationStarted();

  ComponentInstallationStarted(const ComponentInstallationStarted& from);

  inline ComponentInstallationStarted& operator=(const ComponentInstallationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentInstallationStarted(ComponentInstallationStarted&& from) noexcept
    : ComponentInstallationStarted() {
    *this = ::std::move(from);
  }

  inline ComponentInstallationStarted& operator=(ComponentInstallationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentInstallationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentInstallationStarted* internal_default_instance() {
    return reinterpret_cast<const ComponentInstallationStarted*>(
               &_ComponentInstallationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(ComponentInstallationStarted* other);
  friend void swap(ComponentInstallationStarted& a, ComponentInstallationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentInstallationStarted* New() const final {
    return CreateMaybeMessage<ComponentInstallationStarted>(NULL);
  }

  ComponentInstallationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentInstallationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentInstallationStarted& from);
  void MergeFrom(const ComponentInstallationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentInstallationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.Component component = 2;
  void clear_component();
  static const int kComponentFieldNumber = 2;
  ::eve_launcher::installer::Component component() const;
  void set_component(::eve_launcher::installer::Component value);

  // .eve_launcher.installer.RedistVersion redist_version = 3;
  void clear_redist_version();
  static const int kRedistVersionFieldNumber = 3;
  ::eve_launcher::installer::RedistVersion redist_version() const;
  void set_redist_version(::eve_launcher::installer::RedistVersion value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentInstallationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int component_;
  int redist_version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentInstallationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentInstallationFinished) */ {
 public:
  ComponentInstallationFinished();
  virtual ~ComponentInstallationFinished();

  ComponentInstallationFinished(const ComponentInstallationFinished& from);

  inline ComponentInstallationFinished& operator=(const ComponentInstallationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentInstallationFinished(ComponentInstallationFinished&& from) noexcept
    : ComponentInstallationFinished() {
    *this = ::std::move(from);
  }

  inline ComponentInstallationFinished& operator=(ComponentInstallationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentInstallationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentInstallationFinished* internal_default_instance() {
    return reinterpret_cast<const ComponentInstallationFinished*>(
               &_ComponentInstallationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(ComponentInstallationFinished* other);
  friend void swap(ComponentInstallationFinished& a, ComponentInstallationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentInstallationFinished* New() const final {
    return CreateMaybeMessage<ComponentInstallationFinished>(NULL);
  }

  ComponentInstallationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentInstallationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentInstallationFinished& from);
  void MergeFrom(const ComponentInstallationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentInstallationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.Component component = 2;
  void clear_component();
  static const int kComponentFieldNumber = 2;
  ::eve_launcher::installer::Component component() const;
  void set_component(::eve_launcher::installer::Component value);

  // .eve_launcher.installer.RedistVersion redist_version = 3;
  void clear_redist_version();
  static const int kRedistVersionFieldNumber = 3;
  ::eve_launcher::installer::RedistVersion redist_version() const;
  void set_redist_version(::eve_launcher::installer::RedistVersion value);

  // int32 duration = 4;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentInstallationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int component_;
  int redist_version_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentsInitializationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentsInitializationStarted) */ {
 public:
  ComponentsInitializationStarted();
  virtual ~ComponentsInitializationStarted();

  ComponentsInitializationStarted(const ComponentsInitializationStarted& from);

  inline ComponentsInitializationStarted& operator=(const ComponentsInitializationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentsInitializationStarted(ComponentsInitializationStarted&& from) noexcept
    : ComponentsInitializationStarted() {
    *this = ::std::move(from);
  }

  inline ComponentsInitializationStarted& operator=(ComponentsInitializationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentsInitializationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentsInitializationStarted* internal_default_instance() {
    return reinterpret_cast<const ComponentsInitializationStarted*>(
               &_ComponentsInitializationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(ComponentsInitializationStarted* other);
  friend void swap(ComponentsInitializationStarted& a, ComponentsInitializationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentsInitializationStarted* New() const final {
    return CreateMaybeMessage<ComponentsInitializationStarted>(NULL);
  }

  ComponentsInitializationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentsInitializationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentsInitializationStarted& from);
  void MergeFrom(const ComponentsInitializationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentsInitializationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentsInitializationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentsInitializationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentsInitializationFinished) */ {
 public:
  ComponentsInitializationFinished();
  virtual ~ComponentsInitializationFinished();

  ComponentsInitializationFinished(const ComponentsInitializationFinished& from);

  inline ComponentsInitializationFinished& operator=(const ComponentsInitializationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentsInitializationFinished(ComponentsInitializationFinished&& from) noexcept
    : ComponentsInitializationFinished() {
    *this = ::std::move(from);
  }

  inline ComponentsInitializationFinished& operator=(ComponentsInitializationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentsInitializationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentsInitializationFinished* internal_default_instance() {
    return reinterpret_cast<const ComponentsInitializationFinished*>(
               &_ComponentsInitializationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(ComponentsInitializationFinished* other);
  friend void swap(ComponentsInitializationFinished& a, ComponentsInitializationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentsInitializationFinished* New() const final {
    return CreateMaybeMessage<ComponentsInitializationFinished>(NULL);
  }

  ComponentsInitializationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentsInitializationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentsInitializationFinished& from);
  void MergeFrom(const ComponentsInitializationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentsInitializationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentsInitializationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentsInstallationStarted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentsInstallationStarted) */ {
 public:
  ComponentsInstallationStarted();
  virtual ~ComponentsInstallationStarted();

  ComponentsInstallationStarted(const ComponentsInstallationStarted& from);

  inline ComponentsInstallationStarted& operator=(const ComponentsInstallationStarted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentsInstallationStarted(ComponentsInstallationStarted&& from) noexcept
    : ComponentsInstallationStarted() {
    *this = ::std::move(from);
  }

  inline ComponentsInstallationStarted& operator=(ComponentsInstallationStarted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentsInstallationStarted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentsInstallationStarted* internal_default_instance() {
    return reinterpret_cast<const ComponentsInstallationStarted*>(
               &_ComponentsInstallationStarted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(ComponentsInstallationStarted* other);
  friend void swap(ComponentsInstallationStarted& a, ComponentsInstallationStarted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentsInstallationStarted* New() const final {
    return CreateMaybeMessage<ComponentsInstallationStarted>(NULL);
  }

  ComponentsInstallationStarted* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentsInstallationStarted>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentsInstallationStarted& from);
  void MergeFrom(const ComponentsInstallationStarted& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentsInstallationStarted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentsInstallationStarted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentsInstallationFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ComponentsInstallationFinished) */ {
 public:
  ComponentsInstallationFinished();
  virtual ~ComponentsInstallationFinished();

  ComponentsInstallationFinished(const ComponentsInstallationFinished& from);

  inline ComponentsInstallationFinished& operator=(const ComponentsInstallationFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ComponentsInstallationFinished(ComponentsInstallationFinished&& from) noexcept
    : ComponentsInstallationFinished() {
    *this = ::std::move(from);
  }

  inline ComponentsInstallationFinished& operator=(ComponentsInstallationFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentsInstallationFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentsInstallationFinished* internal_default_instance() {
    return reinterpret_cast<const ComponentsInstallationFinished*>(
               &_ComponentsInstallationFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(ComponentsInstallationFinished* other);
  friend void swap(ComponentsInstallationFinished& a, ComponentsInstallationFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ComponentsInstallationFinished* New() const final {
    return CreateMaybeMessage<ComponentsInstallationFinished>(NULL);
  }

  ComponentsInstallationFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ComponentsInstallationFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ComponentsInstallationFinished& from);
  void MergeFrom(const ComponentsInstallationFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentsInstallationFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ComponentsInstallationFinished)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  ::google::protobuf::int32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ErrorEncountered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.ErrorEncountered) */ {
 public:
  ErrorEncountered();
  virtual ~ErrorEncountered();

  ErrorEncountered(const ErrorEncountered& from);

  inline ErrorEncountered& operator=(const ErrorEncountered& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ErrorEncountered(ErrorEncountered&& from) noexcept
    : ErrorEncountered() {
    *this = ::std::move(from);
  }

  inline ErrorEncountered& operator=(ErrorEncountered&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorEncountered& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorEncountered* internal_default_instance() {
    return reinterpret_cast<const ErrorEncountered*>(
               &_ErrorEncountered_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(ErrorEncountered* other);
  friend void swap(ErrorEncountered& a, ErrorEncountered& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ErrorEncountered* New() const final {
    return CreateMaybeMessage<ErrorEncountered>(NULL);
  }

  ErrorEncountered* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ErrorEncountered>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ErrorEncountered& from);
  void MergeFrom(const ErrorEncountered& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorEncountered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ErrorEncountered_ErrorCode ErrorCode;
  static const ErrorCode ERRORCODE_UNSPECIFIED =
    ErrorEncountered_ErrorCode_ERRORCODE_UNSPECIFIED;
  static const ErrorCode ERRORCODE_CREATE_OPERATIONS =
    ErrorEncountered_ErrorCode_ERRORCODE_CREATE_OPERATIONS;
  static const ErrorCode ERRORCODE_ADD_OPERATION =
    ErrorEncountered_ErrorCode_ERRORCODE_ADD_OPERATION;
  static const ErrorCode ERRORCODE_SEARCH_DLL =
    ErrorEncountered_ErrorCode_ERRORCODE_SEARCH_DLL;
  static const ErrorCode ERRORCODE_SEARCH_WINDOWS_UPDATE =
    ErrorEncountered_ErrorCode_ERRORCODE_SEARCH_WINDOWS_UPDATE;
  static const ErrorCode ERRORCODE_MISSING_PREREQUISITE =
    ErrorEncountered_ErrorCode_ERRORCODE_MISSING_PREREQUISITE;
  static const ErrorCode ERRORCODE_QT_STATUS_FAILURE =
    ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FAILURE;
  static const ErrorCode ERRORCODE_QT_STATUS_UNFINISHED =
    ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_UNFINISHED;
  static const ErrorCode ERRORCODE_QT_STATUS_FORCE_UPDATE =
    ErrorEncountered_ErrorCode_ERRORCODE_QT_STATUS_FORCE_UPDATE;
  static inline bool ErrorCode_IsValid(int value) {
    return ErrorEncountered_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    ErrorEncountered_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    ErrorEncountered_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    ErrorEncountered_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return ErrorEncountered_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return ErrorEncountered_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return ErrorEncountered_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // .eve_launcher.installer.ErrorEncountered.ErrorCode code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::eve_launcher::installer::ErrorEncountered_ErrorCode code() const;
  void set_code(::eve_launcher::installer::ErrorEncountered_ErrorCode value);

  // .eve_launcher.installer.Page page = 3;
  void clear_page();
  static const int kPageFieldNumber = 3;
  ::eve_launcher::installer::Page page() const;
  void set_page(::eve_launcher::installer::Page value);

  // .eve_launcher.installer.Component component = 4;
  void clear_component();
  static const int kComponentFieldNumber = 4;
  ::eve_launcher::installer::Component component() const;
  void set_component(::eve_launcher::installer::Component value);

  // .eve_launcher.installer.RedistVersion redist_version = 5;
  void clear_redist_version();
  static const int kRedistVersionFieldNumber = 5;
  ::eve_launcher::installer::RedistVersion redist_version() const;
  void set_redist_version(::eve_launcher::installer::RedistVersion value);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.ErrorEncountered)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  int code_;
  int page_;
  int component_;
  int redist_version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnalyticsMessageSent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.AnalyticsMessageSent) */ {
 public:
  AnalyticsMessageSent();
  virtual ~AnalyticsMessageSent();

  AnalyticsMessageSent(const AnalyticsMessageSent& from);

  inline AnalyticsMessageSent& operator=(const AnalyticsMessageSent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnalyticsMessageSent(AnalyticsMessageSent&& from) noexcept
    : AnalyticsMessageSent() {
    *this = ::std::move(from);
  }

  inline AnalyticsMessageSent& operator=(AnalyticsMessageSent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnalyticsMessageSent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AnalyticsMessageSent* internal_default_instance() {
    return reinterpret_cast<const AnalyticsMessageSent*>(
               &_AnalyticsMessageSent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(AnalyticsMessageSent* other);
  friend void swap(AnalyticsMessageSent& a, AnalyticsMessageSent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnalyticsMessageSent* New() const final {
    return CreateMaybeMessage<AnalyticsMessageSent>(NULL);
  }

  AnalyticsMessageSent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AnalyticsMessageSent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AnalyticsMessageSent& from);
  void MergeFrom(const AnalyticsMessageSent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnalyticsMessageSent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .eve_launcher.application.EventMetadata event_metadata = 1;
  bool has_event_metadata() const;
  void clear_event_metadata();
  static const int kEventMetadataFieldNumber = 1;
  private:
  const ::eve_launcher::application::EventMetadata& _internal_event_metadata() const;
  public:
  const ::eve_launcher::application::EventMetadata& event_metadata() const;
  ::eve_launcher::application::EventMetadata* release_event_metadata();
  ::eve_launcher::application::EventMetadata* mutable_event_metadata();
  void set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.AnalyticsMessageSent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::eve_launcher::application::EventMetadata* event_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IPAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.IPAddress) */ {
 public:
  IPAddress();
  virtual ~IPAddress();

  IPAddress(const IPAddress& from);

  inline IPAddress& operator=(const IPAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IPAddress(IPAddress&& from) noexcept
    : IPAddress() {
    *this = ::std::move(from);
  }

  inline IPAddress& operator=(IPAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPAddress& default_instance();

  enum VersionCase {
    kV4 = 1,
    kV6 = 2,
    VERSION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IPAddress* internal_default_instance() {
    return reinterpret_cast<const IPAddress*>(
               &_IPAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(IPAddress* other);
  friend void swap(IPAddress& a, IPAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IPAddress* New() const final {
    return CreateMaybeMessage<IPAddress>(NULL);
  }

  IPAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IPAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IPAddress& from);
  void MergeFrom(const IPAddress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IPAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 v4 = 1;
  private:
  bool has_v4() const;
  public:
  void clear_v4();
  static const int kV4FieldNumber = 1;
  ::google::protobuf::uint32 v4() const;
  void set_v4(::google::protobuf::uint32 value);

  // bytes v6 = 2;
  private:
  bool has_v6() const;
  public:
  void clear_v6();
  static const int kV6FieldNumber = 2;
  const ::std::string& v6() const;
  void set_v6(const ::std::string& value);
  #if LANG_CXX11
  void set_v6(::std::string&& value);
  #endif
  void set_v6(const char* value);
  void set_v6(const void* value, size_t size);
  ::std::string* mutable_v6();
  ::std::string* release_v6();
  void set_allocated_v6(::std::string* v6);

  void clear_version();
  VersionCase version_case() const;
  // @@protoc_insertion_point(class_scope:eve_launcher.installer.IPAddress)
 private:
  void set_has_v4();
  void set_has_v6();

  inline bool has_version() const;
  inline void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union VersionUnion {
    VersionUnion() {}
    ::google::protobuf::uint32 v4_;
    ::google::protobuf::internal::ArenaStringPtr v6_;
  } version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.installer.Event) */ {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(Event* other);
  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Event* New() const final {
    return CreateMaybeMessage<Event>(NULL);
  }

  Event* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Event>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes uuid = 3;
  void clear_uuid();
  static const int kUuidFieldNumber = 3;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string tenant = 5;
  void clear_tenant();
  static const int kTenantFieldNumber = 5;
  const ::std::string& tenant() const;
  void set_tenant(const ::std::string& value);
  #if LANG_CXX11
  void set_tenant(::std::string&& value);
  #endif
  void set_tenant(const char* value);
  void set_tenant(const char* value, size_t size);
  ::std::string* mutable_tenant();
  ::std::string* release_tenant();
  void set_allocated_tenant(::std::string* tenant);

  // bytes journey = 7;
  void clear_journey();
  static const int kJourneyFieldNumber = 7;
  const ::std::string& journey() const;
  void set_journey(const ::std::string& value);
  #if LANG_CXX11
  void set_journey(::std::string&& value);
  #endif
  void set_journey(const char* value);
  void set_journey(const void* value, size_t size);
  ::std::string* mutable_journey();
  ::std::string* release_journey();
  void set_allocated_journey(::std::string* journey);

  // .google.protobuf.Timestamp occurred = 1;
  bool has_occurred() const;
  void clear_occurred();
  static const int kOccurredFieldNumber = 1;
  private:
  const ::google::protobuf::Timestamp& _internal_occurred() const;
  public:
  const ::google::protobuf::Timestamp& occurred() const;
  ::google::protobuf::Timestamp* release_occurred();
  ::google::protobuf::Timestamp* mutable_occurred();
  void set_allocated_occurred(::google::protobuf::Timestamp* occurred);

  // .google.protobuf.Timestamp received = 2;
  bool has_received() const;
  void clear_received();
  static const int kReceivedFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_received() const;
  public:
  const ::google::protobuf::Timestamp& received() const;
  ::google::protobuf::Timestamp* release_received();
  ::google::protobuf::Timestamp* mutable_received();
  void set_allocated_received(::google::protobuf::Timestamp* received);

  // .eve_launcher.installer.IPAddress ip_address = 4;
  bool has_ip_address() const;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 4;
  private:
  const ::eve_launcher::installer::IPAddress& _internal_ip_address() const;
  public:
  const ::eve_launcher::installer::IPAddress& ip_address() const;
  ::eve_launcher::installer::IPAddress* release_ip_address();
  ::eve_launcher::installer::IPAddress* mutable_ip_address();
  void set_allocated_ip_address(::eve_launcher::installer::IPAddress* ip_address);

  // .google.protobuf.Any payload = 6;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 6;
  private:
  const ::google::protobuf::Any& _internal_payload() const;
  public:
  const ::google::protobuf::Any& payload() const;
  ::google::protobuf::Any* release_payload();
  ::google::protobuf::Any* mutable_payload();
  void set_allocated_payload(::google::protobuf::Any* payload);

  // @@protoc_insertion_point(class_scope:eve_launcher.installer.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr tenant_;
  ::google::protobuf::internal::ArenaStringPtr journey_;
  ::google::protobuf::Timestamp* occurred_;
  ::google::protobuf::Timestamp* received_;
  ::eve_launcher::installer::IPAddress* ip_address_;
  ::google::protobuf::Any* payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2finstaller_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Started

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool Started::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& Started::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& Started::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Started.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* Started::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Started.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* Started::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Started.event_metadata)
  return event_metadata_;
}
inline void Started::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Started.event_metadata)
}

// int32 duration = 2;
inline void Started::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 Started::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Started.duration)
  return duration_;
}
inline void Started::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.Started.duration)
}

// .platform.Information system_information = 3;
inline bool Started::has_system_information() const {
  return this != internal_default_instance() && system_information_ != NULL;
}
inline const ::platform::Information& Started::_internal_system_information() const {
  return *system_information_;
}
inline const ::platform::Information& Started::system_information() const {
  const ::platform::Information* p = system_information_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Started.system_information)
  return p != NULL ? *p : *reinterpret_cast<const ::platform::Information*>(
      &::platform::_Information_default_instance_);
}
inline ::platform::Information* Started::release_system_information() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Started.system_information)
  
  ::platform::Information* temp = system_information_;
  system_information_ = NULL;
  return temp;
}
inline ::platform::Information* Started::mutable_system_information() {
  
  if (system_information_ == NULL) {
    auto* p = CreateMaybeMessage<::platform::Information>(GetArenaNoVirtual());
    system_information_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Started.system_information)
  return system_information_;
}
inline void Started::set_allocated_system_information(::platform::Information* system_information) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(system_information_);
  }
  if (system_information) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_information = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_information, submessage_arena);
    }
    
  } else {
    
  }
  system_information_ = system_information;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Started.system_information)
}

// -------------------------------------------------------------------

// PageDisplayed

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool PageDisplayed::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& PageDisplayed::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& PageDisplayed::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.PageDisplayed.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* PageDisplayed::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.PageDisplayed.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* PageDisplayed::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.PageDisplayed.event_metadata)
  return event_metadata_;
}
inline void PageDisplayed::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.PageDisplayed.event_metadata)
}

// .eve_launcher.installer.Page previous_page = 2;
inline void PageDisplayed::clear_previous_page() {
  previous_page_ = 0;
}
inline ::eve_launcher::installer::Page PageDisplayed::previous_page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.PageDisplayed.previous_page)
  return static_cast< ::eve_launcher::installer::Page >(previous_page_);
}
inline void PageDisplayed::set_previous_page(::eve_launcher::installer::Page value) {
  
  previous_page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.PageDisplayed.previous_page)
}

// .eve_launcher.installer.Page current_page = 3;
inline void PageDisplayed::clear_current_page() {
  current_page_ = 0;
}
inline ::eve_launcher::installer::Page PageDisplayed::current_page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.PageDisplayed.current_page)
  return static_cast< ::eve_launcher::installer::Page >(current_page_);
}
inline void PageDisplayed::set_current_page(::eve_launcher::installer::Page value) {
  
  current_page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.PageDisplayed.current_page)
}

// .eve_launcher.installer.PageDisplayed.FlowDirection flow = 4;
inline void PageDisplayed::clear_flow() {
  flow_ = 0;
}
inline ::eve_launcher::installer::PageDisplayed_FlowDirection PageDisplayed::flow() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.PageDisplayed.flow)
  return static_cast< ::eve_launcher::installer::PageDisplayed_FlowDirection >(flow_);
}
inline void PageDisplayed::set_flow(::eve_launcher::installer::PageDisplayed_FlowDirection value) {
  
  flow_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.PageDisplayed.flow)
}

// -------------------------------------------------------------------

// UserCancelled

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UserCancelled::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UserCancelled::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UserCancelled::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.UserCancelled.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UserCancelled::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.UserCancelled.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UserCancelled::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.UserCancelled.event_metadata)
  return event_metadata_;
}
inline void UserCancelled::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.UserCancelled.event_metadata)
}

// .eve_launcher.installer.Page page = 2;
inline void UserCancelled::clear_page() {
  page_ = 0;
}
inline ::eve_launcher::installer::Page UserCancelled::page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.UserCancelled.page)
  return static_cast< ::eve_launcher::installer::Page >(page_);
}
inline void UserCancelled::set_page(::eve_launcher::installer::Page value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.UserCancelled.page)
}

// .eve_launcher.installer.UserCancelled.Progress progress = 3;
inline void UserCancelled::clear_progress() {
  progress_ = 0;
}
inline ::eve_launcher::installer::UserCancelled_Progress UserCancelled::progress() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.UserCancelled.progress)
  return static_cast< ::eve_launcher::installer::UserCancelled_Progress >(progress_);
}
inline void UserCancelled::set_progress(::eve_launcher::installer::UserCancelled_Progress value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.UserCancelled.progress)
}

// -------------------------------------------------------------------

// ShutDown

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ShutDown::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ShutDown::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ShutDown::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ShutDown.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ShutDown::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ShutDown.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ShutDown::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ShutDown.event_metadata)
  return event_metadata_;
}
inline void ShutDown::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ShutDown.event_metadata)
}

// .eve_launcher.installer.Page page = 2;
inline void ShutDown::clear_page() {
  page_ = 0;
}
inline ::eve_launcher::installer::Page ShutDown::page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ShutDown.page)
  return static_cast< ::eve_launcher::installer::Page >(page_);
}
inline void ShutDown::set_page(::eve_launcher::installer::Page value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ShutDown.page)
}

// .eve_launcher.installer.ShutDown.State state = 3;
inline void ShutDown::clear_state() {
  state_ = 0;
}
inline ::eve_launcher::installer::ShutDown_State ShutDown::state() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ShutDown.state)
  return static_cast< ::eve_launcher::installer::ShutDown_State >(state_);
}
inline void ShutDown::set_state(::eve_launcher::installer::ShutDown_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ShutDown.state)
}

// bool finish_button = 4;
inline void ShutDown::clear_finish_button() {
  finish_button_ = false;
}
inline bool ShutDown::finish_button() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ShutDown.finish_button)
  return finish_button_;
}
inline void ShutDown::set_finish_button(bool value) {
  
  finish_button_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ShutDown.finish_button)
}

// -------------------------------------------------------------------

// PreparationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool PreparationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& PreparationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& PreparationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.PreparationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* PreparationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.PreparationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* PreparationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.PreparationStarted.event_metadata)
  return event_metadata_;
}
inline void PreparationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.PreparationStarted.event_metadata)
}

// -------------------------------------------------------------------

// PreparationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool PreparationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& PreparationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& PreparationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.PreparationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* PreparationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.PreparationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* PreparationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.PreparationFinished.event_metadata)
  return event_metadata_;
}
inline void PreparationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.PreparationFinished.event_metadata)
}

// int32 duration = 2;
inline void PreparationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 PreparationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.PreparationFinished.duration)
  return duration_;
}
inline void PreparationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.PreparationFinished.duration)
}

// -------------------------------------------------------------------

// LocationChanged

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool LocationChanged::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& LocationChanged::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& LocationChanged::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.LocationChanged.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* LocationChanged::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.LocationChanged.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* LocationChanged::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.LocationChanged.event_metadata)
  return event_metadata_;
}
inline void LocationChanged::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.LocationChanged.event_metadata)
}

// .eve_launcher.installer.LocationChanged.Source source = 2;
inline void LocationChanged::clear_source() {
  source_ = 0;
}
inline ::eve_launcher::installer::LocationChanged_Source LocationChanged::source() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.LocationChanged.source)
  return static_cast< ::eve_launcher::installer::LocationChanged_Source >(source_);
}
inline void LocationChanged::set_source(::eve_launcher::installer::LocationChanged_Source value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.LocationChanged.source)
}

// .eve_launcher.installer.LocationChanged.Provider provider = 3;
inline void LocationChanged::clear_provider() {
  provider_ = 0;
}
inline ::eve_launcher::installer::LocationChanged_Provider LocationChanged::provider() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.LocationChanged.provider)
  return static_cast< ::eve_launcher::installer::LocationChanged_Provider >(provider_);
}
inline void LocationChanged::set_provider(::eve_launcher::installer::LocationChanged_Provider value) {
  
  provider_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.LocationChanged.provider)
}

// string path = 4;
inline void LocationChanged::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocationChanged::path() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.LocationChanged.path)
  return path_.GetNoArena();
}
inline void LocationChanged::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.installer.LocationChanged.path)
}
#if LANG_CXX11
inline void LocationChanged::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.installer.LocationChanged.path)
}
#endif
inline void LocationChanged::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.installer.LocationChanged.path)
}
inline void LocationChanged::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.installer.LocationChanged.path)
}
inline ::std::string* LocationChanged::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.LocationChanged.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocationChanged::release_path() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.LocationChanged.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocationChanged::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.LocationChanged.path)
}

// -------------------------------------------------------------------

// DetailsDisplayed

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool DetailsDisplayed::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& DetailsDisplayed::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& DetailsDisplayed::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.DetailsDisplayed.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* DetailsDisplayed::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.DetailsDisplayed.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* DetailsDisplayed::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.DetailsDisplayed.event_metadata)
  return event_metadata_;
}
inline void DetailsDisplayed::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.DetailsDisplayed.event_metadata)
}

// -------------------------------------------------------------------

// DetailsHidden

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool DetailsHidden::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& DetailsHidden::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& DetailsHidden::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.DetailsHidden.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* DetailsHidden::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.DetailsHidden.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* DetailsHidden::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.DetailsHidden.event_metadata)
  return event_metadata_;
}
inline void DetailsHidden::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.DetailsHidden.event_metadata)
}

// -------------------------------------------------------------------

// AutoRunEnabled

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool AutoRunEnabled::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& AutoRunEnabled::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& AutoRunEnabled::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.AutoRunEnabled.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* AutoRunEnabled::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.AutoRunEnabled.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* AutoRunEnabled::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.AutoRunEnabled.event_metadata)
  return event_metadata_;
}
inline void AutoRunEnabled::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.AutoRunEnabled.event_metadata)
}

// -------------------------------------------------------------------

// AutoRunDisabled

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool AutoRunDisabled::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& AutoRunDisabled::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& AutoRunDisabled::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.AutoRunDisabled.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* AutoRunDisabled::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.AutoRunDisabled.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* AutoRunDisabled::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.AutoRunDisabled.event_metadata)
  return event_metadata_;
}
inline void AutoRunDisabled::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.AutoRunDisabled.event_metadata)
}

// -------------------------------------------------------------------

// EulaAccepted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool EulaAccepted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& EulaAccepted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& EulaAccepted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.EulaAccepted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* EulaAccepted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.EulaAccepted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* EulaAccepted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.EulaAccepted.event_metadata)
  return event_metadata_;
}
inline void EulaAccepted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.EulaAccepted.event_metadata)
}

// -------------------------------------------------------------------

// EulaDeclined

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool EulaDeclined::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& EulaDeclined::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& EulaDeclined::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.EulaDeclined.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* EulaDeclined::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.EulaDeclined.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* EulaDeclined::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.EulaDeclined.event_metadata)
  return event_metadata_;
}
inline void EulaDeclined::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.EulaDeclined.event_metadata)
}

// -------------------------------------------------------------------

// RedistSearchConcluded

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool RedistSearchConcluded::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& RedistSearchConcluded::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& RedistSearchConcluded::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.RedistSearchConcluded.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* RedistSearchConcluded::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.RedistSearchConcluded.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* RedistSearchConcluded::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.RedistSearchConcluded.event_metadata)
  return event_metadata_;
}
inline void RedistSearchConcluded::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.RedistSearchConcluded.event_metadata)
}

// .eve_launcher.installer.RedistVersion version = 2;
inline void RedistSearchConcluded::clear_version() {
  version_ = 0;
}
inline ::eve_launcher::installer::RedistVersion RedistSearchConcluded::version() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.RedistSearchConcluded.version)
  return static_cast< ::eve_launcher::installer::RedistVersion >(version_);
}
inline void RedistSearchConcluded::set_version(::eve_launcher::installer::RedistVersion value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.RedistSearchConcluded.version)
}

// .eve_launcher.installer.RedistSearchConcluded.RedistReason reason = 3;
inline void RedistSearchConcluded::clear_reason() {
  reason_ = 0;
}
inline ::eve_launcher::installer::RedistSearchConcluded_RedistReason RedistSearchConcluded::reason() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.RedistSearchConcluded.reason)
  return static_cast< ::eve_launcher::installer::RedistSearchConcluded_RedistReason >(reason_);
}
inline void RedistSearchConcluded::set_reason(::eve_launcher::installer::RedistSearchConcluded_RedistReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.RedistSearchConcluded.reason)
}

// -------------------------------------------------------------------

// ProvidedClientFound

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ProvidedClientFound::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ProvidedClientFound::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ProvidedClientFound::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ProvidedClientFound.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ProvidedClientFound::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ProvidedClientFound.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ProvidedClientFound::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ProvidedClientFound.event_metadata)
  return event_metadata_;
}
inline void ProvidedClientFound::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ProvidedClientFound.event_metadata)
}

// -------------------------------------------------------------------

// SharedCacheMessageShown

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool SharedCacheMessageShown::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& SharedCacheMessageShown::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& SharedCacheMessageShown::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.SharedCacheMessageShown.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* SharedCacheMessageShown::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.SharedCacheMessageShown.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* SharedCacheMessageShown::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.SharedCacheMessageShown.event_metadata)
  return event_metadata_;
}
inline void SharedCacheMessageShown::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.SharedCacheMessageShown.event_metadata)
}

// -------------------------------------------------------------------

// SharedCacheMessageClosed

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool SharedCacheMessageClosed::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& SharedCacheMessageClosed::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& SharedCacheMessageClosed::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.SharedCacheMessageClosed.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* SharedCacheMessageClosed::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.SharedCacheMessageClosed.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* SharedCacheMessageClosed::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.SharedCacheMessageClosed.event_metadata)
  return event_metadata_;
}
inline void SharedCacheMessageClosed::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.SharedCacheMessageClosed.event_metadata)
}

// .eve_launcher.installer.MessageBoxButton message_box_button = 2;
inline void SharedCacheMessageClosed::clear_message_box_button() {
  message_box_button_ = 0;
}
inline ::eve_launcher::installer::MessageBoxButton SharedCacheMessageClosed::message_box_button() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.SharedCacheMessageClosed.message_box_button)
  return static_cast< ::eve_launcher::installer::MessageBoxButton >(message_box_button_);
}
inline void SharedCacheMessageClosed::set_message_box_button(::eve_launcher::installer::MessageBoxButton value) {
  
  message_box_button_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.SharedCacheMessageClosed.message_box_button)
}

// int32 time_displayed = 3;
inline void SharedCacheMessageClosed::clear_time_displayed() {
  time_displayed_ = 0;
}
inline ::google::protobuf::int32 SharedCacheMessageClosed::time_displayed() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.SharedCacheMessageClosed.time_displayed)
  return time_displayed_;
}
inline void SharedCacheMessageClosed::set_time_displayed(::google::protobuf::int32 value) {
  
  time_displayed_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.SharedCacheMessageClosed.time_displayed)
}

// -------------------------------------------------------------------

// InstallationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool InstallationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& InstallationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& InstallationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.InstallationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* InstallationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.InstallationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* InstallationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.InstallationStarted.event_metadata)
  return event_metadata_;
}
inline void InstallationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.InstallationStarted.event_metadata)
}

// -------------------------------------------------------------------

// InstallationInterrupted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool InstallationInterrupted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& InstallationInterrupted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& InstallationInterrupted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.InstallationInterrupted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* InstallationInterrupted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.InstallationInterrupted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* InstallationInterrupted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.InstallationInterrupted.event_metadata)
  return event_metadata_;
}
inline void InstallationInterrupted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.InstallationInterrupted.event_metadata)
}

// int32 duration = 2;
inline void InstallationInterrupted::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 InstallationInterrupted::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.InstallationInterrupted.duration)
  return duration_;
}
inline void InstallationInterrupted::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.InstallationInterrupted.duration)
}

// -------------------------------------------------------------------

// InstallationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool InstallationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& InstallationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& InstallationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.InstallationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* InstallationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.InstallationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* InstallationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.InstallationFinished.event_metadata)
  return event_metadata_;
}
inline void InstallationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.InstallationFinished.event_metadata)
}

// int32 duration = 2;
inline void InstallationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 InstallationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.InstallationFinished.duration)
  return duration_;
}
inline void InstallationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.InstallationFinished.duration)
}

// -------------------------------------------------------------------

// InstallationFailed

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool InstallationFailed::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& InstallationFailed::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& InstallationFailed::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.InstallationFailed.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* InstallationFailed::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.InstallationFailed.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* InstallationFailed::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.InstallationFailed.event_metadata)
  return event_metadata_;
}
inline void InstallationFailed::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.InstallationFailed.event_metadata)
}

// int32 duration = 2;
inline void InstallationFailed::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 InstallationFailed::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.InstallationFailed.duration)
  return duration_;
}
inline void InstallationFailed::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.InstallationFailed.duration)
}

// -------------------------------------------------------------------

// UninstallerCreationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UninstallerCreationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UninstallerCreationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UninstallerCreationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.UninstallerCreationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UninstallerCreationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.UninstallerCreationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UninstallerCreationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.UninstallerCreationStarted.event_metadata)
  return event_metadata_;
}
inline void UninstallerCreationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.UninstallerCreationStarted.event_metadata)
}

// -------------------------------------------------------------------

// UninstallerCreationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool UninstallerCreationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& UninstallerCreationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& UninstallerCreationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.UninstallerCreationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* UninstallerCreationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.UninstallerCreationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* UninstallerCreationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.UninstallerCreationFinished.event_metadata)
  return event_metadata_;
}
inline void UninstallerCreationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.UninstallerCreationFinished.event_metadata)
}

// int32 duration = 2;
inline void UninstallerCreationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 UninstallerCreationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.UninstallerCreationFinished.duration)
  return duration_;
}
inline void UninstallerCreationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.UninstallerCreationFinished.duration)
}

// -------------------------------------------------------------------

// ComponentInitializationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentInitializationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInitializationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInitializationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInitializationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentInitializationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentInitializationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentInitializationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentInitializationStarted.event_metadata)
  return event_metadata_;
}
inline void ComponentInitializationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentInitializationStarted.event_metadata)
}

// .eve_launcher.installer.Component component = 2;
inline void ComponentInitializationStarted::clear_component() {
  component_ = 0;
}
inline ::eve_launcher::installer::Component ComponentInitializationStarted::component() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInitializationStarted.component)
  return static_cast< ::eve_launcher::installer::Component >(component_);
}
inline void ComponentInitializationStarted::set_component(::eve_launcher::installer::Component value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInitializationStarted.component)
}

// .eve_launcher.installer.RedistVersion redist_version = 3;
inline void ComponentInitializationStarted::clear_redist_version() {
  redist_version_ = 0;
}
inline ::eve_launcher::installer::RedistVersion ComponentInitializationStarted::redist_version() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInitializationStarted.redist_version)
  return static_cast< ::eve_launcher::installer::RedistVersion >(redist_version_);
}
inline void ComponentInitializationStarted::set_redist_version(::eve_launcher::installer::RedistVersion value) {
  
  redist_version_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInitializationStarted.redist_version)
}

// -------------------------------------------------------------------

// ComponentInitializationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentInitializationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInitializationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInitializationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInitializationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentInitializationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentInitializationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentInitializationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentInitializationFinished.event_metadata)
  return event_metadata_;
}
inline void ComponentInitializationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentInitializationFinished.event_metadata)
}

// .eve_launcher.installer.Component component = 2;
inline void ComponentInitializationFinished::clear_component() {
  component_ = 0;
}
inline ::eve_launcher::installer::Component ComponentInitializationFinished::component() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInitializationFinished.component)
  return static_cast< ::eve_launcher::installer::Component >(component_);
}
inline void ComponentInitializationFinished::set_component(::eve_launcher::installer::Component value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInitializationFinished.component)
}

// .eve_launcher.installer.RedistVersion redist_version = 3;
inline void ComponentInitializationFinished::clear_redist_version() {
  redist_version_ = 0;
}
inline ::eve_launcher::installer::RedistVersion ComponentInitializationFinished::redist_version() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInitializationFinished.redist_version)
  return static_cast< ::eve_launcher::installer::RedistVersion >(redist_version_);
}
inline void ComponentInitializationFinished::set_redist_version(::eve_launcher::installer::RedistVersion value) {
  
  redist_version_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInitializationFinished.redist_version)
}

// int32 duration = 4;
inline void ComponentInitializationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 ComponentInitializationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInitializationFinished.duration)
  return duration_;
}
inline void ComponentInitializationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInitializationFinished.duration)
}

// -------------------------------------------------------------------

// ComponentInstallationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentInstallationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInstallationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInstallationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInstallationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentInstallationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentInstallationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentInstallationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentInstallationStarted.event_metadata)
  return event_metadata_;
}
inline void ComponentInstallationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentInstallationStarted.event_metadata)
}

// .eve_launcher.installer.Component component = 2;
inline void ComponentInstallationStarted::clear_component() {
  component_ = 0;
}
inline ::eve_launcher::installer::Component ComponentInstallationStarted::component() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInstallationStarted.component)
  return static_cast< ::eve_launcher::installer::Component >(component_);
}
inline void ComponentInstallationStarted::set_component(::eve_launcher::installer::Component value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInstallationStarted.component)
}

// .eve_launcher.installer.RedistVersion redist_version = 3;
inline void ComponentInstallationStarted::clear_redist_version() {
  redist_version_ = 0;
}
inline ::eve_launcher::installer::RedistVersion ComponentInstallationStarted::redist_version() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInstallationStarted.redist_version)
  return static_cast< ::eve_launcher::installer::RedistVersion >(redist_version_);
}
inline void ComponentInstallationStarted::set_redist_version(::eve_launcher::installer::RedistVersion value) {
  
  redist_version_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInstallationStarted.redist_version)
}

// -------------------------------------------------------------------

// ComponentInstallationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentInstallationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInstallationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentInstallationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInstallationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentInstallationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentInstallationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentInstallationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentInstallationFinished.event_metadata)
  return event_metadata_;
}
inline void ComponentInstallationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentInstallationFinished.event_metadata)
}

// .eve_launcher.installer.Component component = 2;
inline void ComponentInstallationFinished::clear_component() {
  component_ = 0;
}
inline ::eve_launcher::installer::Component ComponentInstallationFinished::component() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInstallationFinished.component)
  return static_cast< ::eve_launcher::installer::Component >(component_);
}
inline void ComponentInstallationFinished::set_component(::eve_launcher::installer::Component value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInstallationFinished.component)
}

// .eve_launcher.installer.RedistVersion redist_version = 3;
inline void ComponentInstallationFinished::clear_redist_version() {
  redist_version_ = 0;
}
inline ::eve_launcher::installer::RedistVersion ComponentInstallationFinished::redist_version() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInstallationFinished.redist_version)
  return static_cast< ::eve_launcher::installer::RedistVersion >(redist_version_);
}
inline void ComponentInstallationFinished::set_redist_version(::eve_launcher::installer::RedistVersion value) {
  
  redist_version_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInstallationFinished.redist_version)
}

// int32 duration = 4;
inline void ComponentInstallationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 ComponentInstallationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentInstallationFinished.duration)
  return duration_;
}
inline void ComponentInstallationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentInstallationFinished.duration)
}

// -------------------------------------------------------------------

// ComponentsInitializationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentsInitializationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInitializationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInitializationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentsInitializationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentsInitializationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentsInitializationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentsInitializationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentsInitializationStarted.event_metadata)
  return event_metadata_;
}
inline void ComponentsInitializationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentsInitializationStarted.event_metadata)
}

// -------------------------------------------------------------------

// ComponentsInitializationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentsInitializationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInitializationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInitializationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentsInitializationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentsInitializationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentsInitializationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentsInitializationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentsInitializationFinished.event_metadata)
  return event_metadata_;
}
inline void ComponentsInitializationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentsInitializationFinished.event_metadata)
}

// int32 duration = 2;
inline void ComponentsInitializationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 ComponentsInitializationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentsInitializationFinished.duration)
  return duration_;
}
inline void ComponentsInitializationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentsInitializationFinished.duration)
}

// -------------------------------------------------------------------

// ComponentsInstallationStarted

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentsInstallationStarted::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInstallationStarted::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInstallationStarted::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentsInstallationStarted.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentsInstallationStarted::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentsInstallationStarted.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentsInstallationStarted::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentsInstallationStarted.event_metadata)
  return event_metadata_;
}
inline void ComponentsInstallationStarted::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentsInstallationStarted.event_metadata)
}

// -------------------------------------------------------------------

// ComponentsInstallationFinished

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ComponentsInstallationFinished::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInstallationFinished::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ComponentsInstallationFinished::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentsInstallationFinished.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ComponentsInstallationFinished::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ComponentsInstallationFinished.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ComponentsInstallationFinished::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ComponentsInstallationFinished.event_metadata)
  return event_metadata_;
}
inline void ComponentsInstallationFinished::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ComponentsInstallationFinished.event_metadata)
}

// int32 duration = 2;
inline void ComponentsInstallationFinished::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 ComponentsInstallationFinished::duration() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ComponentsInstallationFinished.duration)
  return duration_;
}
inline void ComponentsInstallationFinished::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ComponentsInstallationFinished.duration)
}

// -------------------------------------------------------------------

// ErrorEncountered

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool ErrorEncountered::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& ErrorEncountered::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& ErrorEncountered::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ErrorEncountered.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* ErrorEncountered::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.ErrorEncountered.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* ErrorEncountered::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.ErrorEncountered.event_metadata)
  return event_metadata_;
}
inline void ErrorEncountered::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.ErrorEncountered.event_metadata)
}

// .eve_launcher.installer.ErrorEncountered.ErrorCode code = 2;
inline void ErrorEncountered::clear_code() {
  code_ = 0;
}
inline ::eve_launcher::installer::ErrorEncountered_ErrorCode ErrorEncountered::code() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ErrorEncountered.code)
  return static_cast< ::eve_launcher::installer::ErrorEncountered_ErrorCode >(code_);
}
inline void ErrorEncountered::set_code(::eve_launcher::installer::ErrorEncountered_ErrorCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ErrorEncountered.code)
}

// .eve_launcher.installer.Page page = 3;
inline void ErrorEncountered::clear_page() {
  page_ = 0;
}
inline ::eve_launcher::installer::Page ErrorEncountered::page() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ErrorEncountered.page)
  return static_cast< ::eve_launcher::installer::Page >(page_);
}
inline void ErrorEncountered::set_page(::eve_launcher::installer::Page value) {
  
  page_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ErrorEncountered.page)
}

// .eve_launcher.installer.Component component = 4;
inline void ErrorEncountered::clear_component() {
  component_ = 0;
}
inline ::eve_launcher::installer::Component ErrorEncountered::component() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ErrorEncountered.component)
  return static_cast< ::eve_launcher::installer::Component >(component_);
}
inline void ErrorEncountered::set_component(::eve_launcher::installer::Component value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ErrorEncountered.component)
}

// .eve_launcher.installer.RedistVersion redist_version = 5;
inline void ErrorEncountered::clear_redist_version() {
  redist_version_ = 0;
}
inline ::eve_launcher::installer::RedistVersion ErrorEncountered::redist_version() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.ErrorEncountered.redist_version)
  return static_cast< ::eve_launcher::installer::RedistVersion >(redist_version_);
}
inline void ErrorEncountered::set_redist_version(::eve_launcher::installer::RedistVersion value) {
  
  redist_version_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.ErrorEncountered.redist_version)
}

// -------------------------------------------------------------------

// AnalyticsMessageSent

// .eve_launcher.application.EventMetadata event_metadata = 1;
inline bool AnalyticsMessageSent::has_event_metadata() const {
  return this != internal_default_instance() && event_metadata_ != NULL;
}
inline const ::eve_launcher::application::EventMetadata& AnalyticsMessageSent::_internal_event_metadata() const {
  return *event_metadata_;
}
inline const ::eve_launcher::application::EventMetadata& AnalyticsMessageSent::event_metadata() const {
  const ::eve_launcher::application::EventMetadata* p = event_metadata_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.AnalyticsMessageSent.event_metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::application::EventMetadata*>(
      &::eve_launcher::application::_EventMetadata_default_instance_);
}
inline ::eve_launcher::application::EventMetadata* AnalyticsMessageSent::release_event_metadata() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.AnalyticsMessageSent.event_metadata)
  
  ::eve_launcher::application::EventMetadata* temp = event_metadata_;
  event_metadata_ = NULL;
  return temp;
}
inline ::eve_launcher::application::EventMetadata* AnalyticsMessageSent::mutable_event_metadata() {
  
  if (event_metadata_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::application::EventMetadata>(GetArenaNoVirtual());
    event_metadata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.AnalyticsMessageSent.event_metadata)
  return event_metadata_;
}
inline void AnalyticsMessageSent::set_allocated_event_metadata(::eve_launcher::application::EventMetadata* event_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(event_metadata_);
  }
  if (event_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event_metadata, submessage_arena);
    }
    
  } else {
    
  }
  event_metadata_ = event_metadata;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.AnalyticsMessageSent.event_metadata)
}

// string message = 2;
inline void AnalyticsMessageSent::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AnalyticsMessageSent::message() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.AnalyticsMessageSent.message)
  return message_.GetNoArena();
}
inline void AnalyticsMessageSent::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.installer.AnalyticsMessageSent.message)
}
#if LANG_CXX11
inline void AnalyticsMessageSent::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.installer.AnalyticsMessageSent.message)
}
#endif
inline void AnalyticsMessageSent::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.installer.AnalyticsMessageSent.message)
}
inline void AnalyticsMessageSent::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.installer.AnalyticsMessageSent.message)
}
inline ::std::string* AnalyticsMessageSent::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.AnalyticsMessageSent.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AnalyticsMessageSent::release_message() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.AnalyticsMessageSent.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AnalyticsMessageSent::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.AnalyticsMessageSent.message)
}

// -------------------------------------------------------------------

// IPAddress

// fixed32 v4 = 1;
inline bool IPAddress::has_v4() const {
  return version_case() == kV4;
}
inline void IPAddress::set_has_v4() {
  _oneof_case_[0] = kV4;
}
inline void IPAddress::clear_v4() {
  if (has_v4()) {
    version_.v4_ = 0u;
    clear_has_version();
  }
}
inline ::google::protobuf::uint32 IPAddress::v4() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.IPAddress.v4)
  if (has_v4()) {
    return version_.v4_;
  }
  return 0u;
}
inline void IPAddress::set_v4(::google::protobuf::uint32 value) {
  if (!has_v4()) {
    clear_version();
    set_has_v4();
  }
  version_.v4_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.installer.IPAddress.v4)
}

// bytes v6 = 2;
inline bool IPAddress::has_v6() const {
  return version_case() == kV6;
}
inline void IPAddress::set_has_v6() {
  _oneof_case_[0] = kV6;
}
inline void IPAddress::clear_v6() {
  if (has_v6()) {
    version_.v6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_version();
  }
}
inline const ::std::string& IPAddress::v6() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.IPAddress.v6)
  if (has_v6()) {
    return version_.v6_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void IPAddress::set_v6(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:eve_launcher.installer.IPAddress.v6)
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.installer.IPAddress.v6)
}
#if LANG_CXX11
inline void IPAddress::set_v6(::std::string&& value) {
  // @@protoc_insertion_point(field_set:eve_launcher.installer.IPAddress.v6)
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.installer.IPAddress.v6)
}
#endif
inline void IPAddress::set_v6(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.installer.IPAddress.v6)
}
inline void IPAddress::set_v6(const void* value, size_t size) {
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.installer.IPAddress.v6)
}
inline ::std::string* IPAddress::mutable_v6() {
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.IPAddress.v6)
  return version_.v6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IPAddress::release_v6() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.IPAddress.v6)
  if (has_v6()) {
    clear_has_version();
    return version_.v6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void IPAddress::set_allocated_v6(::std::string* v6) {
  if (!has_v6()) {
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_version();
  if (v6 != NULL) {
    set_has_v6();
    version_.v6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), v6);
  }
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.IPAddress.v6)
}

inline bool IPAddress::has_version() const {
  return version_case() != VERSION_NOT_SET;
}
inline void IPAddress::clear_has_version() {
  _oneof_case_[0] = VERSION_NOT_SET;
}
inline IPAddress::VersionCase IPAddress::version_case() const {
  return IPAddress::VersionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Event

// .google.protobuf.Timestamp occurred = 1;
inline bool Event::has_occurred() const {
  return this != internal_default_instance() && occurred_ != NULL;
}
inline const ::google::protobuf::Timestamp& Event::_internal_occurred() const {
  return *occurred_;
}
inline const ::google::protobuf::Timestamp& Event::occurred() const {
  const ::google::protobuf::Timestamp* p = occurred_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Event.occurred)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Event::release_occurred() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Event.occurred)
  
  ::google::protobuf::Timestamp* temp = occurred_;
  occurred_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Event::mutable_occurred() {
  
  if (occurred_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    occurred_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Event.occurred)
  return occurred_;
}
inline void Event::set_allocated_occurred(::google::protobuf::Timestamp* occurred) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(occurred_);
  }
  if (occurred) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(occurred)->GetArena();
    if (message_arena != submessage_arena) {
      occurred = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, occurred, submessage_arena);
    }
    
  } else {
    
  }
  occurred_ = occurred;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Event.occurred)
}

// .google.protobuf.Timestamp received = 2;
inline bool Event::has_received() const {
  return this != internal_default_instance() && received_ != NULL;
}
inline const ::google::protobuf::Timestamp& Event::_internal_received() const {
  return *received_;
}
inline const ::google::protobuf::Timestamp& Event::received() const {
  const ::google::protobuf::Timestamp* p = received_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Event.received)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Event::release_received() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Event.received)
  
  ::google::protobuf::Timestamp* temp = received_;
  received_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Event::mutable_received() {
  
  if (received_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    received_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Event.received)
  return received_;
}
inline void Event::set_allocated_received(::google::protobuf::Timestamp* received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(received_);
  }
  if (received) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(received)->GetArena();
    if (message_arena != submessage_arena) {
      received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, received, submessage_arena);
    }
    
  } else {
    
  }
  received_ = received;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Event.received)
}

// bytes uuid = 3;
inline void Event::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::uuid() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Event.uuid)
  return uuid_.GetNoArena();
}
inline void Event::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.installer.Event.uuid)
}
#if LANG_CXX11
inline void Event::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.installer.Event.uuid)
}
#endif
inline void Event::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.installer.Event.uuid)
}
inline void Event::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.installer.Event.uuid)
}
inline ::std::string* Event::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Event.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_uuid() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Event.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Event.uuid)
}

// .eve_launcher.installer.IPAddress ip_address = 4;
inline bool Event::has_ip_address() const {
  return this != internal_default_instance() && ip_address_ != NULL;
}
inline void Event::clear_ip_address() {
  if (GetArenaNoVirtual() == NULL && ip_address_ != NULL) {
    delete ip_address_;
  }
  ip_address_ = NULL;
}
inline const ::eve_launcher::installer::IPAddress& Event::_internal_ip_address() const {
  return *ip_address_;
}
inline const ::eve_launcher::installer::IPAddress& Event::ip_address() const {
  const ::eve_launcher::installer::IPAddress* p = ip_address_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Event.ip_address)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::installer::IPAddress*>(
      &::eve_launcher::installer::_IPAddress_default_instance_);
}
inline ::eve_launcher::installer::IPAddress* Event::release_ip_address() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Event.ip_address)
  
  ::eve_launcher::installer::IPAddress* temp = ip_address_;
  ip_address_ = NULL;
  return temp;
}
inline ::eve_launcher::installer::IPAddress* Event::mutable_ip_address() {
  
  if (ip_address_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::installer::IPAddress>(GetArenaNoVirtual());
    ip_address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Event.ip_address)
  return ip_address_;
}
inline void Event::set_allocated_ip_address(::eve_launcher::installer::IPAddress* ip_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ip_address_;
  }
  if (ip_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ip_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ip_address, submessage_arena);
    }
    
  } else {
    
  }
  ip_address_ = ip_address;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Event.ip_address)
}

// string tenant = 5;
inline void Event::clear_tenant() {
  tenant_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::tenant() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Event.tenant)
  return tenant_.GetNoArena();
}
inline void Event::set_tenant(const ::std::string& value) {
  
  tenant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.installer.Event.tenant)
}
#if LANG_CXX11
inline void Event::set_tenant(::std::string&& value) {
  
  tenant_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.installer.Event.tenant)
}
#endif
inline void Event::set_tenant(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tenant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.installer.Event.tenant)
}
inline void Event::set_tenant(const char* value, size_t size) {
  
  tenant_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.installer.Event.tenant)
}
inline ::std::string* Event::mutable_tenant() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Event.tenant)
  return tenant_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_tenant() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Event.tenant)
  
  return tenant_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_tenant(::std::string* tenant) {
  if (tenant != NULL) {
    
  } else {
    
  }
  tenant_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tenant);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Event.tenant)
}

// .google.protobuf.Any payload = 6;
inline bool Event::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline const ::google::protobuf::Any& Event::_internal_payload() const {
  return *payload_;
}
inline const ::google::protobuf::Any& Event::payload() const {
  const ::google::protobuf::Any* p = payload_;
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Event.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Event::release_payload() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Event.payload)
  
  ::google::protobuf::Any* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* Event::mutable_payload() {
  
  if (payload_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    payload_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Event.payload)
  return payload_;
}
inline void Event::set_allocated_payload(::google::protobuf::Any* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(payload_);
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Event.payload)
}

// bytes journey = 7;
inline void Event::clear_journey() {
  journey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::journey() const {
  // @@protoc_insertion_point(field_get:eve_launcher.installer.Event.journey)
  return journey_.GetNoArena();
}
inline void Event::set_journey(const ::std::string& value) {
  
  journey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.installer.Event.journey)
}
#if LANG_CXX11
inline void Event::set_journey(::std::string&& value) {
  
  journey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.installer.Event.journey)
}
#endif
inline void Event::set_journey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  journey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.installer.Event.journey)
}
inline void Event::set_journey(const void* value, size_t size) {
  
  journey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.installer.Event.journey)
}
inline ::std::string* Event::mutable_journey() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.installer.Event.journey)
  return journey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_journey() {
  // @@protoc_insertion_point(field_release:eve_launcher.installer.Event.journey)
  
  return journey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_journey(::std::string* journey) {
  if (journey != NULL) {
    
  } else {
    
  }
  journey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), journey);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.installer.Event.journey)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace installer
}  // namespace eve_launcher

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::eve_launcher::installer::PageDisplayed_FlowDirection> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::PageDisplayed_FlowDirection>() {
  return ::eve_launcher::installer::PageDisplayed_FlowDirection_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::UserCancelled_Progress> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::UserCancelled_Progress>() {
  return ::eve_launcher::installer::UserCancelled_Progress_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::ShutDown_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::ShutDown_State>() {
  return ::eve_launcher::installer::ShutDown_State_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::LocationChanged_Source> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::LocationChanged_Source>() {
  return ::eve_launcher::installer::LocationChanged_Source_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::LocationChanged_Provider> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::LocationChanged_Provider>() {
  return ::eve_launcher::installer::LocationChanged_Provider_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::RedistSearchConcluded_RedistReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::RedistSearchConcluded_RedistReason>() {
  return ::eve_launcher::installer::RedistSearchConcluded_RedistReason_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::ErrorEncountered_ErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::ErrorEncountered_ErrorCode>() {
  return ::eve_launcher::installer::ErrorEncountered_ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::Page> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::Page>() {
  return ::eve_launcher::installer::Page_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::RedistVersion> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::RedistVersion>() {
  return ::eve_launcher::installer::RedistVersion_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::MessageBoxButton> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::MessageBoxButton>() {
  return ::eve_launcher::installer::MessageBoxButton_descriptor();
}
template <> struct is_proto_enum< ::eve_launcher::installer::Component> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eve_launcher::installer::Component>() {
  return ::eve_launcher::installer::Component_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_eve_5flauncher_2finstaller_2eproto
