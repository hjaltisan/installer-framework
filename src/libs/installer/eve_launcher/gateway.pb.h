// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eve_launcher/gateway.proto

#ifndef PROTOBUF_INCLUDED_eve_5flauncher_2fgateway_2eproto
#define PROTOBUF_INCLUDED_eve_5flauncher_2fgateway_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "eve_launcher/launcher.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5flauncher_2fgateway_2eproto 

namespace protobuf_eve_5flauncher_2fgateway_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_eve_5flauncher_2fgateway_2eproto
namespace eve_launcher {
namespace gateway {
class DefaultResponse;
class DefaultResponseDefaultTypeInternal;
extern DefaultResponseDefaultTypeInternal _DefaultResponse_default_instance_;
class Event;
class EventDefaultTypeInternal;
extern EventDefaultTypeInternal _Event_default_instance_;
class IPAddress;
class IPAddressDefaultTypeInternal;
extern IPAddressDefaultTypeInternal _IPAddress_default_instance_;
}  // namespace gateway
}  // namespace eve_launcher
namespace google {
namespace protobuf {
template<> ::eve_launcher::gateway::DefaultResponse* Arena::CreateMaybeMessage<::eve_launcher::gateway::DefaultResponse>(Arena*);
template<> ::eve_launcher::gateway::Event* Arena::CreateMaybeMessage<::eve_launcher::gateway::Event>(Arena*);
template<> ::eve_launcher::gateway::IPAddress* Arena::CreateMaybeMessage<::eve_launcher::gateway::IPAddress>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace eve_launcher {
namespace gateway {

// ===================================================================

class IPAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.gateway.IPAddress) */ {
 public:
  IPAddress();
  virtual ~IPAddress();

  IPAddress(const IPAddress& from);

  inline IPAddress& operator=(const IPAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IPAddress(IPAddress&& from) noexcept
    : IPAddress() {
    *this = ::std::move(from);
  }

  inline IPAddress& operator=(IPAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IPAddress& default_instance();

  enum VersionCase {
    kV4 = 1,
    kV6 = 2,
    VERSION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IPAddress* internal_default_instance() {
    return reinterpret_cast<const IPAddress*>(
               &_IPAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(IPAddress* other);
  friend void swap(IPAddress& a, IPAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IPAddress* New() const final {
    return CreateMaybeMessage<IPAddress>(NULL);
  }

  IPAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IPAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IPAddress& from);
  void MergeFrom(const IPAddress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IPAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 v4 = 1;
  private:
  bool has_v4() const;
  public:
  void clear_v4();
  static const int kV4FieldNumber = 1;
  ::google::protobuf::uint32 v4() const;
  void set_v4(::google::protobuf::uint32 value);

  // bytes v6 = 2;
  private:
  bool has_v6() const;
  public:
  void clear_v6();
  static const int kV6FieldNumber = 2;
  const ::std::string& v6() const;
  void set_v6(const ::std::string& value);
  #if LANG_CXX11
  void set_v6(::std::string&& value);
  #endif
  void set_v6(const char* value);
  void set_v6(const void* value, size_t size);
  ::std::string* mutable_v6();
  ::std::string* release_v6();
  void set_allocated_v6(::std::string* v6);

  void clear_version();
  VersionCase version_case() const;
  // @@protoc_insertion_point(class_scope:eve_launcher.gateway.IPAddress)
 private:
  void set_has_v4();
  void set_has_v6();

  inline bool has_version() const;
  inline void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union VersionUnion {
    VersionUnion() {}
    ::google::protobuf::uint32 v4_;
    ::google::protobuf::internal::ArenaStringPtr v6_;
  } version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_eve_5flauncher_2fgateway_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.gateway.Event) */ {
 public:
  Event();
  virtual ~Event();

  Event(const Event& from);

  inline Event& operator=(const Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Event(Event&& from) noexcept
    : Event() {
    *this = ::std::move(from);
  }

  inline Event& operator=(Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Event* internal_default_instance() {
    return reinterpret_cast<const Event*>(
               &_Event_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Event* other);
  friend void swap(Event& a, Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Event* New() const final {
    return CreateMaybeMessage<Event>(NULL);
  }

  Event* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Event>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Event& from);
  void MergeFrom(const Event& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string publisher = 3;
  void clear_publisher();
  static const int kPublisherFieldNumber = 3;
  const ::std::string& publisher() const;
  void set_publisher(const ::std::string& value);
  #if LANG_CXX11
  void set_publisher(::std::string&& value);
  #endif
  void set_publisher(const char* value);
  void set_publisher(const char* value, size_t size);
  ::std::string* mutable_publisher();
  ::std::string* release_publisher();
  void set_allocated_publisher(::std::string* publisher);

  // .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  public:
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // .eve_launcher.Event launcher_event = 4;
  bool has_launcher_event() const;
  void clear_launcher_event();
  static const int kLauncherEventFieldNumber = 4;
  private:
  const ::eve_launcher::Event& _internal_launcher_event() const;
  public:
  const ::eve_launcher::Event& launcher_event() const;
  ::eve_launcher::Event* release_launcher_event();
  ::eve_launcher::Event* mutable_launcher_event();
  void set_allocated_launcher_event(::eve_launcher::Event* launcher_event);

  // .eve_launcher.gateway.IPAddress launcher_ip_address = 5;
  bool has_launcher_ip_address() const;
  void clear_launcher_ip_address();
  static const int kLauncherIpAddressFieldNumber = 5;
  private:
  const ::eve_launcher::gateway::IPAddress& _internal_launcher_ip_address() const;
  public:
  const ::eve_launcher::gateway::IPAddress& launcher_ip_address() const;
  ::eve_launcher::gateway::IPAddress* release_launcher_ip_address();
  ::eve_launcher::gateway::IPAddress* mutable_launcher_ip_address();
  void set_allocated_launcher_ip_address(::eve_launcher::gateway::IPAddress* launcher_ip_address);

  // @@protoc_insertion_point(class_scope:eve_launcher.gateway.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr publisher_;
  ::google::protobuf::Timestamp* timestamp_;
  ::eve_launcher::Event* launcher_event_;
  ::eve_launcher::gateway::IPAddress* launcher_ip_address_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2fgateway_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DefaultResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eve_launcher.gateway.DefaultResponse) */ {
 public:
  DefaultResponse();
  virtual ~DefaultResponse();

  DefaultResponse(const DefaultResponse& from);

  inline DefaultResponse& operator=(const DefaultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DefaultResponse(DefaultResponse&& from) noexcept
    : DefaultResponse() {
    *this = ::std::move(from);
  }

  inline DefaultResponse& operator=(DefaultResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DefaultResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DefaultResponse* internal_default_instance() {
    return reinterpret_cast<const DefaultResponse*>(
               &_DefaultResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DefaultResponse* other);
  friend void swap(DefaultResponse& a, DefaultResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DefaultResponse* New() const final {
    return CreateMaybeMessage<DefaultResponse>(NULL);
  }

  DefaultResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DefaultResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DefaultResponse& from);
  void MergeFrom(const DefaultResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DefaultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:eve_launcher.gateway.DefaultResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_eve_5flauncher_2fgateway_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IPAddress

// fixed32 v4 = 1;
inline bool IPAddress::has_v4() const {
  return version_case() == kV4;
}
inline void IPAddress::set_has_v4() {
  _oneof_case_[0] = kV4;
}
inline void IPAddress::clear_v4() {
  if (has_v4()) {
    version_.v4_ = 0u;
    clear_has_version();
  }
}
inline ::google::protobuf::uint32 IPAddress::v4() const {
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.IPAddress.v4)
  if (has_v4()) {
    return version_.v4_;
  }
  return 0u;
}
inline void IPAddress::set_v4(::google::protobuf::uint32 value) {
  if (!has_v4()) {
    clear_version();
    set_has_v4();
  }
  version_.v4_ = value;
  // @@protoc_insertion_point(field_set:eve_launcher.gateway.IPAddress.v4)
}

// bytes v6 = 2;
inline bool IPAddress::has_v6() const {
  return version_case() == kV6;
}
inline void IPAddress::set_has_v6() {
  _oneof_case_[0] = kV6;
}
inline void IPAddress::clear_v6() {
  if (has_v6()) {
    version_.v6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_version();
  }
}
inline const ::std::string& IPAddress::v6() const {
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.IPAddress.v6)
  if (has_v6()) {
    return version_.v6_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void IPAddress::set_v6(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:eve_launcher.gateway.IPAddress.v6)
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.gateway.IPAddress.v6)
}
#if LANG_CXX11
inline void IPAddress::set_v6(::std::string&& value) {
  // @@protoc_insertion_point(field_set:eve_launcher.gateway.IPAddress.v6)
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.gateway.IPAddress.v6)
}
#endif
inline void IPAddress::set_v6(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.gateway.IPAddress.v6)
}
inline void IPAddress::set_v6(const void* value, size_t size) {
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  version_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.gateway.IPAddress.v6)
}
inline ::std::string* IPAddress::mutable_v6() {
  if (!has_v6()) {
    clear_version();
    set_has_v6();
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.gateway.IPAddress.v6)
  return version_.v6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IPAddress::release_v6() {
  // @@protoc_insertion_point(field_release:eve_launcher.gateway.IPAddress.v6)
  if (has_v6()) {
    clear_has_version();
    return version_.v6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void IPAddress::set_allocated_v6(::std::string* v6) {
  if (!has_v6()) {
    version_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_version();
  if (v6 != NULL) {
    set_has_v6();
    version_.v6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), v6);
  }
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.gateway.IPAddress.v6)
}

inline bool IPAddress::has_version() const {
  return version_case() != VERSION_NOT_SET;
}
inline void IPAddress::clear_has_version() {
  _oneof_case_[0] = VERSION_NOT_SET;
}
inline IPAddress::VersionCase IPAddress::version_case() const {
  return IPAddress::VersionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Event

// .google.protobuf.Timestamp timestamp = 1;
inline bool Event::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline const ::google::protobuf::Timestamp& Event::_internal_timestamp() const {
  return *timestamp_;
}
inline const ::google::protobuf::Timestamp& Event::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.Event.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Event::release_timestamp() {
  // @@protoc_insertion_point(field_release:eve_launcher.gateway.Event.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Event::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.gateway.Event.timestamp)
  return timestamp_;
}
inline void Event::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.gateway.Event.timestamp)
}

// bytes uuid = 2;
inline void Event::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::uuid() const {
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.Event.uuid)
  return uuid_.GetNoArena();
}
inline void Event::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.gateway.Event.uuid)
}
#if LANG_CXX11
inline void Event::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.gateway.Event.uuid)
}
#endif
inline void Event::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.gateway.Event.uuid)
}
inline void Event::set_uuid(const void* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.gateway.Event.uuid)
}
inline ::std::string* Event::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.gateway.Event.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_uuid() {
  // @@protoc_insertion_point(field_release:eve_launcher.gateway.Event.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.gateway.Event.uuid)
}

// string publisher = 3;
inline void Event::clear_publisher() {
  publisher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Event::publisher() const {
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.Event.publisher)
  return publisher_.GetNoArena();
}
inline void Event::set_publisher(const ::std::string& value) {
  
  publisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.gateway.Event.publisher)
}
#if LANG_CXX11
inline void Event::set_publisher(::std::string&& value) {
  
  publisher_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.gateway.Event.publisher)
}
#endif
inline void Event::set_publisher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  publisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.gateway.Event.publisher)
}
inline void Event::set_publisher(const char* value, size_t size) {
  
  publisher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.gateway.Event.publisher)
}
inline ::std::string* Event::mutable_publisher() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.gateway.Event.publisher)
  return publisher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Event::release_publisher() {
  // @@protoc_insertion_point(field_release:eve_launcher.gateway.Event.publisher)
  
  return publisher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Event::set_allocated_publisher(::std::string* publisher) {
  if (publisher != NULL) {
    
  } else {
    
  }
  publisher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.gateway.Event.publisher)
}

// .eve_launcher.Event launcher_event = 4;
inline bool Event::has_launcher_event() const {
  return this != internal_default_instance() && launcher_event_ != NULL;
}
inline const ::eve_launcher::Event& Event::_internal_launcher_event() const {
  return *launcher_event_;
}
inline const ::eve_launcher::Event& Event::launcher_event() const {
  const ::eve_launcher::Event* p = launcher_event_;
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.Event.launcher_event)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::Event*>(
      &::eve_launcher::_Event_default_instance_);
}
inline ::eve_launcher::Event* Event::release_launcher_event() {
  // @@protoc_insertion_point(field_release:eve_launcher.gateway.Event.launcher_event)
  
  ::eve_launcher::Event* temp = launcher_event_;
  launcher_event_ = NULL;
  return temp;
}
inline ::eve_launcher::Event* Event::mutable_launcher_event() {
  
  if (launcher_event_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::Event>(GetArenaNoVirtual());
    launcher_event_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.gateway.Event.launcher_event)
  return launcher_event_;
}
inline void Event::set_allocated_launcher_event(::eve_launcher::Event* launcher_event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(launcher_event_);
  }
  if (launcher_event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      launcher_event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, launcher_event, submessage_arena);
    }
    
  } else {
    
  }
  launcher_event_ = launcher_event;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.gateway.Event.launcher_event)
}

// .eve_launcher.gateway.IPAddress launcher_ip_address = 5;
inline bool Event::has_launcher_ip_address() const {
  return this != internal_default_instance() && launcher_ip_address_ != NULL;
}
inline void Event::clear_launcher_ip_address() {
  if (GetArenaNoVirtual() == NULL && launcher_ip_address_ != NULL) {
    delete launcher_ip_address_;
  }
  launcher_ip_address_ = NULL;
}
inline const ::eve_launcher::gateway::IPAddress& Event::_internal_launcher_ip_address() const {
  return *launcher_ip_address_;
}
inline const ::eve_launcher::gateway::IPAddress& Event::launcher_ip_address() const {
  const ::eve_launcher::gateway::IPAddress* p = launcher_ip_address_;
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.Event.launcher_ip_address)
  return p != NULL ? *p : *reinterpret_cast<const ::eve_launcher::gateway::IPAddress*>(
      &::eve_launcher::gateway::_IPAddress_default_instance_);
}
inline ::eve_launcher::gateway::IPAddress* Event::release_launcher_ip_address() {
  // @@protoc_insertion_point(field_release:eve_launcher.gateway.Event.launcher_ip_address)
  
  ::eve_launcher::gateway::IPAddress* temp = launcher_ip_address_;
  launcher_ip_address_ = NULL;
  return temp;
}
inline ::eve_launcher::gateway::IPAddress* Event::mutable_launcher_ip_address() {
  
  if (launcher_ip_address_ == NULL) {
    auto* p = CreateMaybeMessage<::eve_launcher::gateway::IPAddress>(GetArenaNoVirtual());
    launcher_ip_address_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eve_launcher.gateway.Event.launcher_ip_address)
  return launcher_ip_address_;
}
inline void Event::set_allocated_launcher_ip_address(::eve_launcher::gateway::IPAddress* launcher_ip_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete launcher_ip_address_;
  }
  if (launcher_ip_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      launcher_ip_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, launcher_ip_address, submessage_arena);
    }
    
  } else {
    
  }
  launcher_ip_address_ = launcher_ip_address;
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.gateway.Event.launcher_ip_address)
}

// -------------------------------------------------------------------

// DefaultResponse

// string message = 1;
inline void DefaultResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DefaultResponse::message() const {
  // @@protoc_insertion_point(field_get:eve_launcher.gateway.DefaultResponse.message)
  return message_.GetNoArena();
}
inline void DefaultResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_launcher.gateway.DefaultResponse.message)
}
#if LANG_CXX11
inline void DefaultResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eve_launcher.gateway.DefaultResponse.message)
}
#endif
inline void DefaultResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_launcher.gateway.DefaultResponse.message)
}
inline void DefaultResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_launcher.gateway.DefaultResponse.message)
}
inline ::std::string* DefaultResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:eve_launcher.gateway.DefaultResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DefaultResponse::release_message() {
  // @@protoc_insertion_point(field_release:eve_launcher.gateway.DefaultResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DefaultResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:eve_launcher.gateway.DefaultResponse.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway
}  // namespace eve_launcher

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_eve_5flauncher_2fgateway_2eproto
