// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eve_launcher/gateway.proto

#include "eve_launcher/gateway.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2fgateway_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IPAddress_eve_5flauncher_2fgateway_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Event_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace eve_launcher {
namespace gateway {
class IPAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IPAddress> _instance;
  ::google::protobuf::uint32 v4_;
  ::google::protobuf::internal::ArenaStringPtr v6_;
} _IPAddress_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event> _instance;
} _Event_default_instance_;
class DefaultResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DefaultResponse> _instance;
} _DefaultResponse_default_instance_;
}  // namespace gateway
}  // namespace eve_launcher
static void InitDefaultsIPAddress_eve_5flauncher_2fgateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::gateway::_IPAddress_default_instance_;
    new (ptr) ::eve_launcher::gateway::IPAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::gateway::IPAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IPAddress_eve_5flauncher_2fgateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIPAddress_eve_5flauncher_2fgateway_2eproto}, {}};

static void InitDefaultsEvent_eve_5flauncher_2fgateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::gateway::_Event_default_instance_;
    new (ptr) ::eve_launcher::gateway::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::gateway::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Event_eve_5flauncher_2fgateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEvent_eve_5flauncher_2fgateway_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Event_eve_5flauncher_2flauncher_2eproto.base,
      &scc_info_IPAddress_eve_5flauncher_2fgateway_2eproto.base,}};

static void InitDefaultsDefaultResponse_eve_5flauncher_2fgateway_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::gateway::_DefaultResponse_default_instance_;
    new (ptr) ::eve_launcher::gateway::DefaultResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::gateway::DefaultResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DefaultResponse_eve_5flauncher_2fgateway_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDefaultResponse_eve_5flauncher_2fgateway_2eproto}, {}};

void InitDefaults_eve_5flauncher_2fgateway_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_IPAddress_eve_5flauncher_2fgateway_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event_eve_5flauncher_2fgateway_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DefaultResponse_eve_5flauncher_2fgateway_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_eve_5flauncher_2fgateway_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_eve_5flauncher_2fgateway_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_eve_5flauncher_2fgateway_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_eve_5flauncher_2fgateway_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::IPAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::IPAddress, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::eve_launcher::gateway::IPAddressDefaultTypeInternal, v4_),
  offsetof(::eve_launcher::gateway::IPAddressDefaultTypeInternal, v6_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::IPAddress, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::Event, timestamp_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::Event, uuid_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::Event, publisher_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::Event, launcher_event_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::Event, launcher_ip_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::DefaultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::gateway::DefaultResponse, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::eve_launcher::gateway::IPAddress)},
  { 8, -1, sizeof(::eve_launcher::gateway::Event)},
  { 18, -1, sizeof(::eve_launcher::gateway::DefaultResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::gateway::_IPAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::gateway::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::gateway::_DefaultResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_eve_5flauncher_2fgateway_2eproto = {
  {}, AddDescriptors_eve_5flauncher_2fgateway_2eproto, "eve_launcher/gateway.proto", schemas,
  file_default_instances, TableStruct_eve_5flauncher_2fgateway_2eproto::offsets,
  file_level_metadata_eve_5flauncher_2fgateway_2eproto, 3, file_level_enum_descriptors_eve_5flauncher_2fgateway_2eproto, file_level_service_descriptors_eve_5flauncher_2fgateway_2eproto,
};

const char descriptor_table_protodef_eve_5flauncher_2fgateway_2eproto[] =
  "\n\032eve_launcher/gateway.proto\022\024eve_launch"
  "er.gateway\032\033eve_launcher/launcher.proto\032"
  "\037google/protobuf/timestamp.proto\"2\n\tIPAd"
  "dress\022\014\n\002v4\030\001 \001(\007H\000\022\014\n\002v6\030\002 \001(\014H\000B\t\n\007ver"
  "sion\"\310\001\n\005Event\022-\n\ttimestamp\030\001 \001(\0132\032.goog"
  "le.protobuf.Timestamp\022\014\n\004uuid\030\002 \001(\014\022\021\n\tp"
  "ublisher\030\003 \001(\t\022+\n\016launcher_event\030\004 \001(\0132\023"
  ".eve_launcher.Event\022<\n\023launcher_ip_addre"
  "ss\030\005 \001(\0132\037.eve_launcher.gateway.IPAddres"
  "sJ\004\010\006\020\007\"\"\n\017DefaultResponse\022\017\n\007message\030\001 "
  "\001(\t2^\n\016GatewayService\022L\n\014PublishEvent\022\023."
  "eve_launcher.Event\032%.eve_launcher.gatewa"
  "y.DefaultResponse(\001BAZ\?github.com/ccpgam"
  "es/eve-proto-go/generated/eve_launcher/g"
  "atewayb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_eve_5flauncher_2fgateway_2eproto = {
  false, InitDefaults_eve_5flauncher_2fgateway_2eproto, 
  descriptor_table_protodef_eve_5flauncher_2fgateway_2eproto,
  "eve_launcher/gateway.proto", &assign_descriptors_table_eve_5flauncher_2fgateway_2eproto, 574,
};

void AddDescriptors_eve_5flauncher_2fgateway_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_eve_5flauncher_2flauncher_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_eve_5flauncher_2fgateway_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_eve_5flauncher_2fgateway_2eproto = []() { AddDescriptors_eve_5flauncher_2fgateway_2eproto(); return true; }();
namespace eve_launcher {
namespace gateway {

// ===================================================================

void IPAddress::InitAsDefaultInstance() {
  ::eve_launcher::gateway::_IPAddress_default_instance_.v4_ = 0u;
  ::eve_launcher::gateway::_IPAddress_default_instance_.v6_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class IPAddress::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IPAddress::kV4FieldNumber;
const int IPAddress::kV6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IPAddress::IPAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.gateway.IPAddress)
}
IPAddress::IPAddress(const IPAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_version();
  switch (from.version_case()) {
    case kV4: {
      set_v4(from.v4());
      break;
    }
    case kV6: {
      set_v6(from.v6());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.gateway.IPAddress)
}

void IPAddress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IPAddress_eve_5flauncher_2fgateway_2eproto.base);
  clear_has_version();
}

IPAddress::~IPAddress() {
  // @@protoc_insertion_point(destructor:eve_launcher.gateway.IPAddress)
  SharedDtor();
}

void IPAddress::SharedDtor() {
  if (has_version()) {
    clear_version();
  }
}

void IPAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IPAddress& IPAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IPAddress_eve_5flauncher_2fgateway_2eproto.base);
  return *internal_default_instance();
}


void IPAddress::clear_version() {
// @@protoc_insertion_point(one_of_clear_start:eve_launcher.gateway.IPAddress)
  switch (version_case()) {
    case kV4: {
      // No need to clear
      break;
    }
    case kV6: {
      version_.v6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VERSION_NOT_SET;
}


void IPAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.gateway.IPAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_version();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IPAddress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IPAddress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // fixed32 v4 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_v4(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // bytes v6 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_v6();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IPAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.gateway.IPAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 v4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          clear_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &version_.v4_)));
          set_has_v4();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes v6 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_v6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.gateway.IPAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.gateway.IPAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IPAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.gateway.IPAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 v4 = 1;
  if (has_v4()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->v4(), output);
  }

  // bytes v6 = 2;
  if (has_v6()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->v6(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.gateway.IPAddress)
}

::google::protobuf::uint8* IPAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.gateway.IPAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 v4 = 1;
  if (has_v4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->v4(), target);
  }

  // bytes v6 = 2;
  if (has_v6()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->v6(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.gateway.IPAddress)
  return target;
}

size_t IPAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.gateway.IPAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (version_case()) {
    // fixed32 v4 = 1;
    case kV4: {
      total_size += 1 + 4;
      break;
    }
    // bytes v6 = 2;
    case kV6: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->v6());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IPAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.gateway.IPAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const IPAddress* source =
      ::google::protobuf::DynamicCastToGenerated<IPAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.gateway.IPAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.gateway.IPAddress)
    MergeFrom(*source);
  }
}

void IPAddress::MergeFrom(const IPAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.gateway.IPAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.version_case()) {
    case kV4: {
      set_v4(from.v4());
      break;
    }
    case kV6: {
      set_v6(from.v6());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
}

void IPAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.gateway.IPAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IPAddress::CopyFrom(const IPAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.gateway.IPAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IPAddress::IsInitialized() const {
  return true;
}

void IPAddress::Swap(IPAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IPAddress::InternalSwap(IPAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(version_, other->version_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata IPAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2fgateway_2eproto);
  return ::file_level_metadata_eve_5flauncher_2fgateway_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::eve_launcher::gateway::_Event_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::eve_launcher::gateway::_Event_default_instance_._instance.get_mutable()->launcher_event_ = const_cast< ::eve_launcher::Event*>(
      ::eve_launcher::Event::internal_default_instance());
  ::eve_launcher::gateway::_Event_default_instance_._instance.get_mutable()->launcher_ip_address_ = const_cast< ::eve_launcher::gateway::IPAddress*>(
      ::eve_launcher::gateway::IPAddress::internal_default_instance());
}
class Event::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& timestamp(const Event* msg);
  static const ::eve_launcher::Event& launcher_event(const Event* msg);
  static const ::eve_launcher::gateway::IPAddress& launcher_ip_address(const Event* msg);
};

const ::google::protobuf::Timestamp&
Event::HasBitSetters::timestamp(const Event* msg) {
  return *msg->timestamp_;
}
const ::eve_launcher::Event&
Event::HasBitSetters::launcher_event(const Event* msg) {
  return *msg->launcher_event_;
}
const ::eve_launcher::gateway::IPAddress&
Event::HasBitSetters::launcher_ip_address(const Event* msg) {
  return *msg->launcher_ip_address_;
}
void Event::clear_timestamp() {
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
void Event::clear_launcher_event() {
  if (GetArenaNoVirtual() == nullptr && launcher_event_ != nullptr) {
    delete launcher_event_;
  }
  launcher_event_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kTimestampFieldNumber;
const int Event::kUuidFieldNumber;
const int Event::kPublisherFieldNumber;
const int Event::kLauncherEventFieldNumber;
const int Event::kLauncherIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.gateway.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  publisher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.publisher().size() > 0) {
    publisher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_);
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  if (from.has_launcher_event()) {
    launcher_event_ = new ::eve_launcher::Event(*from.launcher_event_);
  } else {
    launcher_event_ = nullptr;
  }
  if (from.has_launcher_ip_address()) {
    launcher_ip_address_ = new ::eve_launcher::gateway::IPAddress(*from.launcher_ip_address_);
  } else {
    launcher_ip_address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.gateway.Event)
}

void Event::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Event_eve_5flauncher_2fgateway_2eproto.base);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publisher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&launcher_ip_address_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(launcher_ip_address_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:eve_launcher.gateway.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publisher_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete launcher_event_;
  if (this != internal_default_instance()) delete launcher_ip_address_;
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Event_eve_5flauncher_2fgateway_2eproto.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.gateway.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publisher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && launcher_event_ != nullptr) {
    delete launcher_event_;
  }
  launcher_event_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && launcher_ip_address_ != nullptr) {
    delete launcher_ip_address_;
  }
  launcher_ip_address_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Event::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Event*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp timestamp = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_timestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes uuid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_uuid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string publisher = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.gateway.Event.publisher");
        object = msg->mutable_publisher();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.Event launcher_event = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::Event::_InternalParse;
        object = msg->mutable_launcher_event();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .eve_launcher.gateway.IPAddress launcher_ip_address = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::gateway::IPAddress::_InternalParse;
        object = msg->mutable_launcher_ip_address();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.gateway.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string publisher = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publisher()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publisher().data(), static_cast<int>(this->publisher().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.gateway.Event.publisher"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.Event launcher_event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_launcher_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.gateway.IPAddress launcher_ip_address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_launcher_ip_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.gateway.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.gateway.Event)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.gateway.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::timestamp(this), output);
  }

  // bytes uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->uuid(), output);
  }

  // string publisher = 3;
  if (this->publisher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher().data(), static_cast<int>(this->publisher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.gateway.Event.publisher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->publisher(), output);
  }

  // .eve_launcher.Event launcher_event = 4;
  if (this->has_launcher_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::launcher_event(this), output);
  }

  // .eve_launcher.gateway.IPAddress launcher_ip_address = 5;
  if (this->has_launcher_ip_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::launcher_ip_address(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.gateway.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.gateway.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::timestamp(this), target);
  }

  // bytes uuid = 2;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->uuid(), target);
  }

  // string publisher = 3;
  if (this->publisher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher().data(), static_cast<int>(this->publisher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.gateway.Event.publisher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->publisher(), target);
  }

  // .eve_launcher.Event launcher_event = 4;
  if (this->has_launcher_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::launcher_event(this), target);
  }

  // .eve_launcher.gateway.IPAddress launcher_ip_address = 5;
  if (this->has_launcher_ip_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::launcher_ip_address(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.gateway.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.gateway.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  // string publisher = 3;
  if (this->publisher().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publisher());
  }

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // .eve_launcher.Event launcher_event = 4;
  if (this->has_launcher_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *launcher_event_);
  }

  // .eve_launcher.gateway.IPAddress launcher_ip_address = 5;
  if (this->has_launcher_ip_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *launcher_ip_address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.gateway.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::DynamicCastToGenerated<Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.gateway.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.gateway.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.gateway.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.publisher().size() > 0) {

    publisher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_);
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.has_launcher_event()) {
    mutable_launcher_event()->::eve_launcher::Event::MergeFrom(from.launcher_event());
  }
  if (from.has_launcher_ip_address()) {
    mutable_launcher_ip_address()->::eve_launcher::gateway::IPAddress::MergeFrom(from.launcher_ip_address());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.gateway.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.gateway.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  publisher_.Swap(&other->publisher_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(launcher_event_, other->launcher_event_);
  swap(launcher_ip_address_, other->launcher_ip_address_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2fgateway_2eproto);
  return ::file_level_metadata_eve_5flauncher_2fgateway_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DefaultResponse::InitAsDefaultInstance() {
}
class DefaultResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DefaultResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DefaultResponse::DefaultResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.gateway.DefaultResponse)
}
DefaultResponse::DefaultResponse(const DefaultResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.gateway.DefaultResponse)
}

void DefaultResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DefaultResponse_eve_5flauncher_2fgateway_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DefaultResponse::~DefaultResponse() {
  // @@protoc_insertion_point(destructor:eve_launcher.gateway.DefaultResponse)
  SharedDtor();
}

void DefaultResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DefaultResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DefaultResponse& DefaultResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DefaultResponse_eve_5flauncher_2fgateway_2eproto.base);
  return *internal_default_instance();
}


void DefaultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.gateway.DefaultResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DefaultResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DefaultResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.gateway.DefaultResponse.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DefaultResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.gateway.DefaultResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.gateway.DefaultResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.gateway.DefaultResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.gateway.DefaultResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DefaultResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.gateway.DefaultResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.gateway.DefaultResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.gateway.DefaultResponse)
}

::google::protobuf::uint8* DefaultResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.gateway.DefaultResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.gateway.DefaultResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.gateway.DefaultResponse)
  return target;
}

size_t DefaultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.gateway.DefaultResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DefaultResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.gateway.DefaultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DefaultResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DefaultResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.gateway.DefaultResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.gateway.DefaultResponse)
    MergeFrom(*source);
  }
}

void DefaultResponse::MergeFrom(const DefaultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.gateway.DefaultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void DefaultResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.gateway.DefaultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DefaultResponse::CopyFrom(const DefaultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.gateway.DefaultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DefaultResponse::IsInitialized() const {
  return true;
}

void DefaultResponse::Swap(DefaultResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DefaultResponse::InternalSwap(DefaultResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DefaultResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2fgateway_2eproto);
  return ::file_level_metadata_eve_5flauncher_2fgateway_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gateway
}  // namespace eve_launcher
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::eve_launcher::gateway::IPAddress* Arena::CreateMaybeMessage< ::eve_launcher::gateway::IPAddress >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::gateway::IPAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::gateway::Event* Arena::CreateMaybeMessage< ::eve_launcher::gateway::Event >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::gateway::Event >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::gateway::DefaultResponse* Arena::CreateMaybeMessage< ::eve_launcher::gateway::DefaultResponse >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::gateway::DefaultResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
