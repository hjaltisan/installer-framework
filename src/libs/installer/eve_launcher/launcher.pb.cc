// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eve_launcher/launcher.proto

#include "eve_launcher/launcher.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Application_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientOptions_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IPAddress_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OS_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Settings_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Host_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2flauncher_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UsersOnServer_eve_5flauncher_2flauncher_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_eve_5flauncher_2fuser_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_eve_5flauncher_2fuser_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace eve_launcher {
class ClientOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientOptions> _instance;
} _ClientOptions_default_instance_;
class ApplicationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Application> _instance;
} _Application_default_instance_;
class IPAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IPAddress> _instance;
  ::google::protobuf::uint32 v4_;
  ::google::protobuf::internal::ArenaStringPtr v6_;
} _IPAddress_default_instance_;
class OSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OS> _instance;
} _OS_default_instance_;
class HostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Host> _instance;
} _Host_default_instance_;
class UsersOnServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsersOnServer> _instance;
} _UsersOnServer_default_instance_;
class SettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Settings> _instance;
} _Settings_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event> _instance;
} _Event_default_instance_;
class InstalledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Installed> _instance;
} _Installed_default_instance_;
class StartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Started> _instance;
  bool no_installer_provider_;
  ::google::protobuf::internal::ArenaStringPtr installer_provider_;
} _Started_default_instance_;
class UpdateStartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateStarted> _instance;
} _UpdateStarted_default_instance_;
class ShutdownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Shutdown> _instance;
} _Shutdown_default_instance_;
class ClientInitiallyLaunchedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientInitiallyLaunched> _instance;
} _ClientInitiallyLaunched_default_instance_;
class ClientLaunchedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientLaunched> _instance;
} _ClientLaunched_default_instance_;
class ClientCrashedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientCrashed> _instance;
} _ClientCrashed_default_instance_;
class ClientShutdownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientShutdown> _instance;
} _ClientShutdown_default_instance_;
class ReleaseWineLaunchedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReleaseWineLaunched> _instance;
} _ReleaseWineLaunched_default_instance_;
class DevelopmentWineLaunchedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DevelopmentWineLaunched> _instance;
} _DevelopmentWineLaunched_default_instance_;
class CustomWineLaunchedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomWineLaunched> _instance;
} _CustomWineLaunched_default_instance_;
class ClientUpdateStartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientUpdateStarted> _instance;
} _ClientUpdateStarted_default_instance_;
class ClientUpdateCompletedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientUpdateCompleted> _instance;
} _ClientUpdateCompleted_default_instance_;
class ClientUpdateFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientUpdateFailed> _instance;
} _ClientUpdateFailed_default_instance_;
class WebLoadedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebLoaded> _instance;
} _WebLoaded_default_instance_;
class LoginCancelledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginCancelled> _instance;
} _LoginCancelled_default_instance_;
class LoginFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginFailed> _instance;
} _LoginFailed_default_instance_;
class UserAddedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserAdded> _instance;
} _UserAdded_default_instance_;
class UsersRemovedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsersRemoved> _instance;
} _UsersRemoved_default_instance_;
class PlayButtonClickedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayButtonClicked> _instance;
} _PlayButtonClicked_default_instance_;
class LoginButtonClickedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginButtonClicked> _instance;
} _LoginButtonClicked_default_instance_;
class BitnessWarningShownDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BitnessWarningShown> _instance;
} _BitnessWarningShown_default_instance_;
class BitnessWarningClosedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BitnessWarningClosed> _instance;
} _BitnessWarningClosed_default_instance_;
class WebPageLoadedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebPageLoaded> _instance;
} _WebPageLoaded_default_instance_;
class AssignedToExperimentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignedToExperiment> _instance;
} _AssignedToExperiment_default_instance_;
class LoginFlowStartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginFlowStarted> _instance;
} _LoginFlowStarted_default_instance_;
class SystemBrowserOpenedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemBrowserOpened> _instance;
} _SystemBrowserOpened_default_instance_;
class FileUpdateFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileUpdateFailed> _instance;
} _FileUpdateFailed_default_instance_;
class DownloadInterruptedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadInterrupted> _instance;
} _DownloadInterrupted_default_instance_;
class LauncherUpdateDownloadedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LauncherUpdateDownloaded> _instance;
} _LauncherUpdateDownloaded_default_instance_;
class LauncherUpdateFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LauncherUpdateFailed> _instance;
} _LauncherUpdateFailed_default_instance_;
class UiSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UiSettings> _instance;
} _UiSettings_default_instance_;
class UserRememberToggledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRememberToggled> _instance;
} _UserRememberToggled_default_instance_;
class LauncherUpdateCancelledDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LauncherUpdateCancelled> _instance;
} _LauncherUpdateCancelled_default_instance_;
class LauncherUpdateAcceptedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LauncherUpdateAccepted> _instance;
} _LauncherUpdateAccepted_default_instance_;
class CertificateErrorOccurredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CertificateErrorOccurred> _instance;
} _CertificateErrorOccurred_default_instance_;
class UnpackingBundlesStartedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnpackingBundlesStarted> _instance;
} _UnpackingBundlesStarted_default_instance_;
class UnpackingBundlesFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnpackingBundlesFailed> _instance;
} _UnpackingBundlesFailed_default_instance_;
class UnpackingBundlesCompletedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnpackingBundlesCompleted> _instance;
} _UnpackingBundlesCompleted_default_instance_;
class CopierFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CopierFailed> _instance;
} _CopierFailed_default_instance_;
}  // namespace eve_launcher
static void InitDefaultsClientOptions_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientOptions_default_instance_;
    new (ptr) ::eve_launcher::ClientOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientOptions_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientOptions_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsApplication_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_Application_default_instance_;
    new (ptr) ::eve_launcher::Application();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::Application::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Application_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApplication_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsIPAddress_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_IPAddress_default_instance_;
    new (ptr) ::eve_launcher::IPAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::IPAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IPAddress_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIPAddress_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsOS_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_OS_default_instance_;
    new (ptr) ::eve_launcher::OS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::OS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OS_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOS_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsHost_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_Host_default_instance_;
    new (ptr) ::eve_launcher::Host();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::Host::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Host_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHost_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_OS_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsUsersOnServer_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UsersOnServer_default_instance_;
    new (ptr) ::eve_launcher::UsersOnServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UsersOnServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsersOnServer_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsersOnServer_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsSettings_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_Settings_default_instance_;
    new (ptr) ::eve_launcher::Settings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::Settings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Settings_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSettings_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsEvent_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_Event_default_instance_;
    new (ptr) ::eve_launcher::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Event_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEvent_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_Application_eve_5flauncher_2flauncher_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsInstalled_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_Installed_default_instance_;
    new (ptr) ::eve_launcher::Installed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::Installed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Installed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstalled_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsStarted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_Started_default_instance_;
    new (ptr) ::eve_launcher::Started();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::Started::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Started_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsStarted_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Host_eve_5flauncher_2flauncher_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Settings_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsUpdateStarted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UpdateStarted_default_instance_;
    new (ptr) ::eve_launcher::UpdateStarted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UpdateStarted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateStarted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateStarted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsShutdown_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_Shutdown_default_instance_;
    new (ptr) ::eve_launcher::Shutdown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::Shutdown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Shutdown_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShutdown_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_UsersOnServer_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsClientInitiallyLaunched_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientInitiallyLaunched_default_instance_;
    new (ptr) ::eve_launcher::ClientInitiallyLaunched();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientInitiallyLaunched::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientInitiallyLaunched_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientInitiallyLaunched_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_ClientOptions_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsClientLaunched_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientLaunched_default_instance_;
    new (ptr) ::eve_launcher::ClientLaunched();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientLaunched::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ClientLaunched_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsClientLaunched_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_ClientOptions_eve_5flauncher_2flauncher_2eproto.base,
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsClientCrashed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientCrashed_default_instance_;
    new (ptr) ::eve_launcher::ClientCrashed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientCrashed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientCrashed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientCrashed_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsClientShutdown_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientShutdown_default_instance_;
    new (ptr) ::eve_launcher::ClientShutdown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientShutdown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientShutdown_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientShutdown_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsReleaseWineLaunched_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ReleaseWineLaunched_default_instance_;
    new (ptr) ::eve_launcher::ReleaseWineLaunched();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ReleaseWineLaunched::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReleaseWineLaunched_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReleaseWineLaunched_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_OS_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsDevelopmentWineLaunched_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_DevelopmentWineLaunched_default_instance_;
    new (ptr) ::eve_launcher::DevelopmentWineLaunched();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::DevelopmentWineLaunched::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DevelopmentWineLaunched_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDevelopmentWineLaunched_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_OS_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsCustomWineLaunched_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_CustomWineLaunched_default_instance_;
    new (ptr) ::eve_launcher::CustomWineLaunched();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::CustomWineLaunched::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CustomWineLaunched_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCustomWineLaunched_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_OS_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsClientUpdateStarted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientUpdateStarted_default_instance_;
    new (ptr) ::eve_launcher::ClientUpdateStarted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientUpdateStarted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientUpdateStarted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientUpdateStarted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsClientUpdateCompleted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientUpdateCompleted_default_instance_;
    new (ptr) ::eve_launcher::ClientUpdateCompleted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientUpdateCompleted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientUpdateCompleted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientUpdateCompleted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsClientUpdateFailed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_ClientUpdateFailed_default_instance_;
    new (ptr) ::eve_launcher::ClientUpdateFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::ClientUpdateFailed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientUpdateFailed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientUpdateFailed_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsWebLoaded_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_WebLoaded_default_instance_;
    new (ptr) ::eve_launcher::WebLoaded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::WebLoaded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WebLoaded_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWebLoaded_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_UsersOnServer_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsLoginCancelled_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LoginCancelled_default_instance_;
    new (ptr) ::eve_launcher::LoginCancelled();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LoginCancelled::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginCancelled_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginCancelled_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsLoginFailed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LoginFailed_default_instance_;
    new (ptr) ::eve_launcher::LoginFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LoginFailed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginFailed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginFailed_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsUserAdded_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UserAdded_default_instance_;
    new (ptr) ::eve_launcher::UserAdded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UserAdded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserAdded_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserAdded_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsUsersRemoved_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UsersRemoved_default_instance_;
    new (ptr) ::eve_launcher::UsersRemoved();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UsersRemoved::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UsersRemoved_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsersRemoved_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsPlayButtonClicked_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_PlayButtonClicked_default_instance_;
    new (ptr) ::eve_launcher::PlayButtonClicked();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::PlayButtonClicked::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlayButtonClicked_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlayButtonClicked_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsLoginButtonClicked_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LoginButtonClicked_default_instance_;
    new (ptr) ::eve_launcher::LoginButtonClicked();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LoginButtonClicked::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginButtonClicked_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginButtonClicked_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsBitnessWarningShown_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_BitnessWarningShown_default_instance_;
    new (ptr) ::eve_launcher::BitnessWarningShown();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::BitnessWarningShown::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BitnessWarningShown_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBitnessWarningShown_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsBitnessWarningClosed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_BitnessWarningClosed_default_instance_;
    new (ptr) ::eve_launcher::BitnessWarningClosed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::BitnessWarningClosed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BitnessWarningClosed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBitnessWarningClosed_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsWebPageLoaded_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_WebPageLoaded_default_instance_;
    new (ptr) ::eve_launcher::WebPageLoaded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::WebPageLoaded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WebPageLoaded_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWebPageLoaded_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsAssignedToExperiment_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_AssignedToExperiment_default_instance_;
    new (ptr) ::eve_launcher::AssignedToExperiment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::AssignedToExperiment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AssignedToExperiment_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAssignedToExperiment_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsLoginFlowStarted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LoginFlowStarted_default_instance_;
    new (ptr) ::eve_launcher::LoginFlowStarted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LoginFlowStarted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginFlowStarted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginFlowStarted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsSystemBrowserOpened_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_SystemBrowserOpened_default_instance_;
    new (ptr) ::eve_launcher::SystemBrowserOpened();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::SystemBrowserOpened::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SystemBrowserOpened_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSystemBrowserOpened_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsFileUpdateFailed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_FileUpdateFailed_default_instance_;
    new (ptr) ::eve_launcher::FileUpdateFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::FileUpdateFailed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileUpdateFailed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileUpdateFailed_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsDownloadInterrupted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_DownloadInterrupted_default_instance_;
    new (ptr) ::eve_launcher::DownloadInterrupted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::DownloadInterrupted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DownloadInterrupted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDownloadInterrupted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsLauncherUpdateDownloaded_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LauncherUpdateDownloaded_default_instance_;
    new (ptr) ::eve_launcher::LauncherUpdateDownloaded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LauncherUpdateDownloaded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LauncherUpdateDownloaded_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLauncherUpdateDownloaded_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsLauncherUpdateFailed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LauncherUpdateFailed_default_instance_;
    new (ptr) ::eve_launcher::LauncherUpdateFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LauncherUpdateFailed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LauncherUpdateFailed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLauncherUpdateFailed_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsUiSettings_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UiSettings_default_instance_;
    new (ptr) ::eve_launcher::UiSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UiSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UiSettings_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUiSettings_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsUserRememberToggled_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UserRememberToggled_default_instance_;
    new (ptr) ::eve_launcher::UserRememberToggled();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UserRememberToggled::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserRememberToggled_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserRememberToggled_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_Identifier_eve_5flauncher_2fuser_2eproto.base,}};

static void InitDefaultsLauncherUpdateCancelled_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LauncherUpdateCancelled_default_instance_;
    new (ptr) ::eve_launcher::LauncherUpdateCancelled();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LauncherUpdateCancelled::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LauncherUpdateCancelled_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLauncherUpdateCancelled_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsLauncherUpdateAccepted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_LauncherUpdateAccepted_default_instance_;
    new (ptr) ::eve_launcher::LauncherUpdateAccepted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::LauncherUpdateAccepted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LauncherUpdateAccepted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLauncherUpdateAccepted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsCertificateErrorOccurred_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_CertificateErrorOccurred_default_instance_;
    new (ptr) ::eve_launcher::CertificateErrorOccurred();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::CertificateErrorOccurred::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CertificateErrorOccurred_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCertificateErrorOccurred_eve_5flauncher_2flauncher_2eproto}, {
      &scc_info_IPAddress_eve_5flauncher_2flauncher_2eproto.base,}};

static void InitDefaultsUnpackingBundlesStarted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UnpackingBundlesStarted_default_instance_;
    new (ptr) ::eve_launcher::UnpackingBundlesStarted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UnpackingBundlesStarted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnpackingBundlesStarted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnpackingBundlesStarted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsUnpackingBundlesFailed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UnpackingBundlesFailed_default_instance_;
    new (ptr) ::eve_launcher::UnpackingBundlesFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UnpackingBundlesFailed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnpackingBundlesFailed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnpackingBundlesFailed_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsUnpackingBundlesCompleted_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_UnpackingBundlesCompleted_default_instance_;
    new (ptr) ::eve_launcher::UnpackingBundlesCompleted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::UnpackingBundlesCompleted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnpackingBundlesCompleted_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnpackingBundlesCompleted_eve_5flauncher_2flauncher_2eproto}, {}};

static void InitDefaultsCopierFailed_eve_5flauncher_2flauncher_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_launcher::_CopierFailed_default_instance_;
    new (ptr) ::eve_launcher::CopierFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_launcher::CopierFailed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CopierFailed_eve_5flauncher_2flauncher_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCopierFailed_eve_5flauncher_2flauncher_2eproto}, {}};

void InitDefaults_eve_5flauncher_2flauncher_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientOptions_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Application_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IPAddress_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OS_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Host_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsersOnServer_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Settings_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Installed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Started_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateStarted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Shutdown_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientInitiallyLaunched_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientLaunched_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientCrashed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientShutdown_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReleaseWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DevelopmentWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CustomWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientUpdateStarted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientUpdateCompleted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WebLoaded_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginCancelled_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginFailed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserAdded_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsersRemoved_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayButtonClicked_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginButtonClicked_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BitnessWarningShown_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BitnessWarningClosed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WebPageLoaded_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssignedToExperiment_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginFlowStarted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SystemBrowserOpened_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadInterrupted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LauncherUpdateDownloaded_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LauncherUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UiSettings_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRememberToggled_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LauncherUpdateCancelled_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LauncherUpdateAccepted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CertificateErrorOccurred_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnpackingBundlesStarted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnpackingBundlesFailed_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnpackingBundlesCompleted_eve_5flauncher_2flauncher_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CopierFailed_eve_5flauncher_2flauncher_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_eve_5flauncher_2flauncher_2eproto[48];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[11];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_eve_5flauncher_2flauncher_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_eve_5flauncher_2flauncher_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientOptions, bitness_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Application, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Application, version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Application, build_tag_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Application, locale_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::IPAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::IPAddress, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::eve_launcher::IPAddressDefaultTypeInternal, v4_),
  offsetof(::eve_launcher::IPAddressDefaultTypeInternal, v6_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::IPAddress, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::OS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::OS, kind_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::OS, version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::OS, buildversion_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::OS, prettyproductname_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::OS, bitness_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::OS, processorarchitecture_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Host, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Host, md5_hash_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Host, mac_address_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Host, os_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UsersOnServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UsersOnServer, server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UsersOnServer, user_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, language_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, download_everything_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, run_clients_with_logging_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, run_clients_with_dx9_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, minimize_to_tray_on_close_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, ignore_certification_errors_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, use_system_configuration_for_proxy_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, enable_high_dpi_scaling_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Settings, enable_hardware_rendering_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Event, payload_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Event, md5_session_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Event, application_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Event, operatingsystemuuid_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Event, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Installed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Started, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Started, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Started, host_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Started, process_start_time_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Started, settings_),
  offsetof(::eve_launcher::StartedDefaultTypeInternal, no_installer_provider_),
  offsetof(::eve_launcher::StartedDefaultTypeInternal, installer_provider_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Started, started_by_updater_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Started, provider_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UpdateStarted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UpdateStarted, target_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Shutdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Shutdown, clients_running_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Shutdown, clients_started_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Shutdown, pinned_users_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::Shutdown, not_pinned_users_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientInitiallyLaunched, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientInitiallyLaunched, target_server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientInitiallyLaunched, client_options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientLaunched, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientLaunched, target_server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientLaunched, client_options_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientLaunched, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientCrashed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientCrashed, server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientCrashed, user_id_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientCrashed, exit_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientShutdown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientShutdown, server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientShutdown, user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ReleaseWineLaunched, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ReleaseWineLaunched, target_server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ReleaseWineLaunched, wine_build_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ReleaseWineLaunched, os_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ReleaseWineLaunched, directx_mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DevelopmentWineLaunched, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DevelopmentWineLaunched, target_server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DevelopmentWineLaunched, wine_branch_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DevelopmentWineLaunched, wine_build_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DevelopmentWineLaunched, os_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DevelopmentWineLaunched, directx_mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CustomWineLaunched, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CustomWineLaunched, target_server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CustomWineLaunched, os_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CustomWineLaunched, directx_mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateStarted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateStarted, target_server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateStarted, target_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateCompleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateCompleted, target_server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateCompleted, download_speed_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateCompleted, target_version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateCompleted, bytes_downloaded_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateFailed, error_code_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::ClientUpdateFailed, target_server_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebLoaded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebLoaded, users_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebLoaded, launcher_started_from_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginCancelled, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginFailed, server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginFailed, error_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserAdded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserAdded, user_id_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserAdded, server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserAdded, remember_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UsersRemoved, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UsersRemoved, user_ids_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UsersRemoved, server_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::PlayButtonClicked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::PlayButtonClicked, source_button_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::PlayButtonClicked, server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::PlayButtonClicked, user_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginButtonClicked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginButtonClicked, server_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::BitnessWarningShown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::BitnessWarningClosed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebPageLoaded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebPageLoaded, start_url_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebPageLoaded, finish_url_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebPageLoaded, load_duration_milliseconds_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::WebPageLoaded, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::AssignedToExperiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::AssignedToExperiment, name_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::AssignedToExperiment, group_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginFlowStarted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LoginFlowStarted, display_method_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::SystemBrowserOpened, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::SystemBrowserOpened, url_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::SystemBrowserOpened, medium_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::FileUpdateFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::FileUpdateFailed, error_code_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::FileUpdateFailed, rescheduled_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::FileUpdateFailed, url_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::FileUpdateFailed, download_type_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::FileUpdateFailed, download_speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DownloadInterrupted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DownloadInterrupted, download_speed_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DownloadInterrupted, target_version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::DownloadInterrupted, bytes_downloaded_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateDownloaded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateDownloaded, target_version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateDownloaded, download_speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateFailed, error_code_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateFailed, target_version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateFailed, download_speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UiSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UiSettings, settings_changed_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UiSettings, start_client_on_login_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UiSettings, startup_delay_seconds_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UiSettings, remember_accounts_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UiSettings, debug_logs_enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserRememberToggled, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserRememberToggled, user_id_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserRememberToggled, server_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UserRememberToggled, remember_enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateCancelled, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateCancelled, target_version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateCancelled, download_speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateAccepted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateAccepted, target_version_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateAccepted, automatic_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::LauncherUpdateAccepted, updater_started_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CertificateErrorOccurred, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CertificateErrorOccurred, url_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CertificateErrorOccurred, host_ip_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CertificateErrorOccurred, error_code_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CertificateErrorOccurred, user_prompted_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CertificateErrorOccurred, user_ignored_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesStarted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesStarted, bundle_count_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesStarted, file_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesFailed, file_name_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesFailed, stage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesCompleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesCompleted, bundle_count_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesCompleted, file_count_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::UnpackingBundlesCompleted, extracted_byte_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CopierFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CopierFailed, error_code_),
  PROTOBUF_FIELD_OFFSET(::eve_launcher::CopierFailed, file_name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::eve_launcher::ClientOptions)},
  { 6, -1, sizeof(::eve_launcher::Application)},
  { 14, -1, sizeof(::eve_launcher::IPAddress)},
  { 22, -1, sizeof(::eve_launcher::OS)},
  { 33, -1, sizeof(::eve_launcher::Host)},
  { 41, -1, sizeof(::eve_launcher::UsersOnServer)},
  { 48, -1, sizeof(::eve_launcher::Settings)},
  { 62, -1, sizeof(::eve_launcher::Event)},
  { 72, -1, sizeof(::eve_launcher::Installed)},
  { 77, -1, sizeof(::eve_launcher::Started)},
  { 89, -1, sizeof(::eve_launcher::UpdateStarted)},
  { 95, -1, sizeof(::eve_launcher::Shutdown)},
  { 104, -1, sizeof(::eve_launcher::ClientInitiallyLaunched)},
  { 111, -1, sizeof(::eve_launcher::ClientLaunched)},
  { 119, -1, sizeof(::eve_launcher::ClientCrashed)},
  { 127, -1, sizeof(::eve_launcher::ClientShutdown)},
  { 134, -1, sizeof(::eve_launcher::ReleaseWineLaunched)},
  { 143, -1, sizeof(::eve_launcher::DevelopmentWineLaunched)},
  { 153, -1, sizeof(::eve_launcher::CustomWineLaunched)},
  { 161, -1, sizeof(::eve_launcher::ClientUpdateStarted)},
  { 168, -1, sizeof(::eve_launcher::ClientUpdateCompleted)},
  { 177, -1, sizeof(::eve_launcher::ClientUpdateFailed)},
  { 184, -1, sizeof(::eve_launcher::WebLoaded)},
  { 191, -1, sizeof(::eve_launcher::LoginCancelled)},
  { 196, -1, sizeof(::eve_launcher::LoginFailed)},
  { 203, -1, sizeof(::eve_launcher::UserAdded)},
  { 211, -1, sizeof(::eve_launcher::UsersRemoved)},
  { 218, -1, sizeof(::eve_launcher::PlayButtonClicked)},
  { 226, -1, sizeof(::eve_launcher::LoginButtonClicked)},
  { 232, -1, sizeof(::eve_launcher::BitnessWarningShown)},
  { 237, -1, sizeof(::eve_launcher::BitnessWarningClosed)},
  { 242, -1, sizeof(::eve_launcher::WebPageLoaded)},
  { 251, -1, sizeof(::eve_launcher::AssignedToExperiment)},
  { 258, -1, sizeof(::eve_launcher::LoginFlowStarted)},
  { 264, -1, sizeof(::eve_launcher::SystemBrowserOpened)},
  { 271, -1, sizeof(::eve_launcher::FileUpdateFailed)},
  { 281, -1, sizeof(::eve_launcher::DownloadInterrupted)},
  { 289, -1, sizeof(::eve_launcher::LauncherUpdateDownloaded)},
  { 296, -1, sizeof(::eve_launcher::LauncherUpdateFailed)},
  { 304, -1, sizeof(::eve_launcher::UiSettings)},
  { 314, -1, sizeof(::eve_launcher::UserRememberToggled)},
  { 322, -1, sizeof(::eve_launcher::LauncherUpdateCancelled)},
  { 329, -1, sizeof(::eve_launcher::LauncherUpdateAccepted)},
  { 337, -1, sizeof(::eve_launcher::CertificateErrorOccurred)},
  { 347, -1, sizeof(::eve_launcher::UnpackingBundlesStarted)},
  { 354, -1, sizeof(::eve_launcher::UnpackingBundlesFailed)},
  { 361, -1, sizeof(::eve_launcher::UnpackingBundlesCompleted)},
  { 369, -1, sizeof(::eve_launcher::CopierFailed)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_Application_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_IPAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_OS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_Host_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UsersOnServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_Settings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_Installed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_Started_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UpdateStarted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_Shutdown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientInitiallyLaunched_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientLaunched_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientCrashed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientShutdown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ReleaseWineLaunched_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_DevelopmentWineLaunched_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_CustomWineLaunched_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientUpdateStarted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientUpdateCompleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_ClientUpdateFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_WebLoaded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LoginCancelled_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LoginFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UserAdded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UsersRemoved_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_PlayButtonClicked_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LoginButtonClicked_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_BitnessWarningShown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_BitnessWarningClosed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_WebPageLoaded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_AssignedToExperiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LoginFlowStarted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_SystemBrowserOpened_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_FileUpdateFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_DownloadInterrupted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LauncherUpdateDownloaded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LauncherUpdateFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UiSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UserRememberToggled_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LauncherUpdateCancelled_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_LauncherUpdateAccepted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_CertificateErrorOccurred_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UnpackingBundlesStarted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UnpackingBundlesFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_UnpackingBundlesCompleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_launcher::_CopierFailed_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_eve_5flauncher_2flauncher_2eproto = {
  {}, AddDescriptors_eve_5flauncher_2flauncher_2eproto, "eve_launcher/launcher.proto", schemas,
  file_default_instances, TableStruct_eve_5flauncher_2flauncher_2eproto::offsets,
  file_level_metadata_eve_5flauncher_2flauncher_2eproto, 48, file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto, file_level_service_descriptors_eve_5flauncher_2flauncher_2eproto,
};

const char descriptor_table_protodef_eve_5flauncher_2flauncher_2eproto[] =
  "\n\033eve_launcher/launcher.proto\022\014eve_launc"
  "her\032\033eve_launcher/graphics.proto\032\027eve_la"
  "uncher/user.proto\032\031google/protobuf/any.p"
  "roto\032\037google/protobuf/timestamp.proto\"7\n"
  "\rClientOptions\022&\n\007bitness\030\001 \001(\0162\025.eve_la"
  "uncher.Bitness\"\323\001\n\013Application\022\017\n\007versio"
  "n\030\001 \001(\t\0225\n\tbuild_tag\030\002 \001(\0162\".eve_launche"
  "r.Application.BuildTag\0220\n\006locale\030\003 \001(\0162 "
  ".eve_launcher.Application.Locale\"*\n\010Buil"
  "dTag\022\013\n\007RELEASE\020\000\022\010\n\004BETA\020\001\022\007\n\003DEV\020\002\"\036\n\006"
  "Locale\022\t\n\005WORLD\020\000\022\t\n\005CHINA\020\001\"2\n\tIPAddres"
  "s\022\014\n\002v4\030\001 \001(\007H\000\022\014\n\002v6\030\002 \001(\014H\000B\t\n\007version"
  "\"\350\001\n\002OS\022#\n\004kind\030\001 \001(\0162\025.eve_launcher.OS."
  "Kind\022\017\n\007version\030\002 \001(\t\022\024\n\014buildVersion\030\003 "
  "\001(\t\022\031\n\021prettyProductName\030\004 \001(\t\022&\n\007bitnes"
  "s\030\005 \001(\0162\025.eve_launcher.Bitness\022\035\n\025proces"
  "sorArchitecture\030\006 \001(\t\"4\n\004Kind\022\013\n\007WINDOWS"
  "\020\000\022\013\n\007UNKNOWN\020\001\022\t\n\005LINUX\020\002\022\007\n\003MAC\020\003\"Q\n\004H"
  "ost\022\020\n\010md5_hash\030\001 \001(\014\022\023\n\013mac_address\030\002 \001"
  "(\014\022\034\n\002os\030\004 \001(\0132\020.eve_launcher.OSJ\004\010\003\020\004\"P"
  "\n\rUsersOnServer\022\016\n\006server\030\001 \001(\t\022/\n\010user_"
  "ids\030\002 \003(\0132\035.eve_launcher.user.Identifier"
  "\"\261\002\n\010Settings\022\020\n\010language\030\001 \001(\t\022\033\n\023downl"
  "oad_everything\030\002 \001(\010\022 \n\030run_clients_with"
  "_logging\030\003 \001(\010\022\034\n\024run_clients_with_dx9\030\004"
  " \001(\010\022!\n\031minimize_to_tray_on_close\030\005 \001(\010\022"
  "#\n\033ignore_certification_errors\030\006 \001(\010\022*\n\""
  "use_system_configuration_for_proxy\030\007 \001(\010"
  "\022\037\n\027enable_high_dpi_scaling\030\010 \001(\010\022!\n\031ena"
  "ble_hardware_rendering\030\t \001(\010\"\305\001\n\005Event\022%"
  "\n\007payload\030\002 \001(\0132\024.google.protobuf.Any\022\023\n"
  "\013md5_session\030\003 \001(\014\022.\n\013application\030\004 \001(\0132"
  "\031.eve_launcher.Application\022\033\n\023operatingS"
  "ystemUuid\030\005 \001(\014\022-\n\ttimestamp\030\006 \001(\0132\032.goo"
  "gle.protobuf.TimestampJ\004\010\001\020\002\"\021\n\tInstalle"
  "dJ\004\010\001\020\002\"\200\002\n\007Started\022 \n\004host\030\002 \001(\0132\022.eve_"
  "launcher.Host\0226\n\022process_start_time\030\004 \001("
  "\0132\032.google.protobuf.Timestamp\022(\n\010setting"
  "s\030\005 \001(\0132\026.eve_launcher.Settings\022\037\n\025no_in"
  "staller_provider\030\006 \001(\010H\000\022\034\n\022installer_pr"
  "ovider\030\007 \001(\tH\000\022\032\n\022started_by_updater\030\010 \001"
  "(\010B\n\n\010providerJ\004\010\001\020\002J\004\010\003\020\004\"-\n\rUpdateStar"
  "ted\022\026\n\016target_version\030\002 \001(\tJ\004\010\001\020\002\"\254\001\n\010Sh"
  "utdown\022\027\n\017clients_running\030\002 \001(\005\022\027\n\017clien"
  "ts_started\030\003 \001(\005\0221\n\014pinned_users\030\004 \003(\0132\033"
  ".eve_launcher.UsersOnServer\0225\n\020not_pinne"
  "d_users\030\005 \003(\0132\033.eve_launcher.UsersOnServ"
  "erJ\004\010\001\020\002\"k\n\027ClientInitiallyLaunched\022\025\n\rt"
  "arget_server\030\002 \001(\t\0223\n\016client_options\030\003 \001"
  "(\0132\033.eve_launcher.ClientOptionsJ\004\010\001\020\002\"\222\001"
  "\n\016ClientLaunched\022\025\n\rtarget_server\030\002 \001(\t\022"
  "3\n\016client_options\030\003 \001(\0132\033.eve_launcher.C"
  "lientOptions\022.\n\007user_id\030\004 \001(\0132\035.eve_laun"
  "cher.user.IdentifierJ\004\010\001\020\002\"b\n\rClientCras"
  "hed\022\016\n\006server\030\001 \001(\t\022.\n\007user_id\030\002 \001(\0132\035.e"
  "ve_launcher.user.Identifier\022\021\n\texit_code"
  "\030\003 \001(\005\"P\n\016ClientShutdown\022\016\n\006server\030\001 \001(\t"
  "\022.\n\007user_id\030\002 \001(\0132\035.eve_launcher.user.Id"
  "entifier\"\236\001\n\023ReleaseWineLaunched\022\025\n\rtarg"
  "et_server\030\002 \001(\t\022\022\n\nwine_build\030\003 \001(\t\022\034\n\002o"
  "s\030\004 \001(\0132\020.eve_launcher.OS\0228\n\014directx_mod"
  "e\030\005 \001(\0162\".eve_launcher.graphics.DirectXM"
  "odeJ\004\010\001\020\002\"\267\001\n\027DevelopmentWineLaunched\022\025\n"
  "\rtarget_server\030\002 \001(\t\022\023\n\013wine_branch\030\003 \001("
  "\t\022\022\n\nwine_build\030\004 \001(\t\022\034\n\002os\030\005 \001(\0132\020.eve_"
  "launcher.OS\0228\n\014directx_mode\030\006 \001(\0162\".eve_"
  "launcher.graphics.DirectXModeJ\004\010\001\020\002\"\211\001\n\022"
  "CustomWineLaunched\022\025\n\rtarget_server\030\002 \001("
  "\t\022\034\n\002os\030\003 \001(\0132\020.eve_launcher.OS\0228\n\014direc"
  "tx_mode\030\004 \001(\0162\".eve_launcher.graphics.Di"
  "rectXModeJ\004\010\001\020\002\"J\n\023ClientUpdateStarted\022\025"
  "\n\rtarget_server\030\002 \001(\t\022\026\n\016target_version\030"
  "\003 \001(\tJ\004\010\001\020\002\"~\n\025ClientUpdateCompleted\022\025\n\r"
  "target_server\030\002 \001(\t\022\026\n\016download_speed\030\003 "
  "\001(\002\022\026\n\016target_version\030\004 \001(\t\022\030\n\020bytes_dow"
  "nloaded\030\005 \001(\004J\004\010\001\020\002\"E\n\022ClientUpdateFaile"
  "d\022\022\n\nerror_code\030\002 \001(\r\022\025\n\rtarget_server\030\003"
  " \001(\tJ\004\010\001\020\002\"\246\001\n\tWebLoaded\022*\n\005users\030\001 \003(\0132"
  "\033.eve_launcher.UsersOnServer\022\?\n\025launcher"
  "_started_from\030\002 \001(\0162 .eve_launcher.WebLo"
  "aded.Platform\",\n\010Platform\022\013\n\007UNKNOWN\020\000\022\010"
  "\n\004NONE\020\001\022\t\n\005STEAM\020\002\"\020\n\016LoginCancelled\"\232\001"
  "\n\013LoginFailed\022\016\n\006server\030\001 \001(\t\022<\n\nerror_t"
  "ype\030\002 \001(\0162(.eve_launcher.LoginFailed.Log"
  "inErrorType\"=\n\016LoginErrorType\022\013\n\007UNKNOWN"
  "\020\000\022\021\n\rNETWORK_ERROR\020\001\022\013\n\007TIMEOUT\020\002\"\331\001\n\tU"
  "serAdded\022.\n\007user_id\030\001 \001(\0132\035.eve_launcher"
  ".user.Identifier\022\016\n\006server\030\002 \001(\t\022;\n\rreme"
  "mber_type\030\003 \001(\0162$.eve_launcher.UserAdded"
  ".RememberType\"O\n\014RememberType\022\013\n\007UNKNOWN"
  "\020\000\022\010\n\004NONE\020\001\022\020\n\014SSO_REMEMBER\020\002\022\026\n\022UI_ALW"
  "AYS_REMEMBER\020\003\"O\n\014UsersRemoved\022/\n\010user_i"
  "ds\030\001 \003(\0132\035.eve_launcher.user.Identifier\022"
  "\016\n\006server\030\002 \001(\t\"\343\001\n\021PlayButtonClicked\022A\n"
  "\rsource_button\030\001 \001(\0162*.eve_launcher.Play"
  "ButtonClicked.PlayButton\022\016\n\006server\030\002 \001(\t"
  "\022/\n\010user_ids\030\003 \003(\0132\035.eve_launcher.user.I"
  "dentifier\"J\n\nPlayButton\022\013\n\007UNKNOWN\020\000\022\017\n\013"
  "SINGLE_USER\020\001\022\014\n\010PLAY_NOW\020\002\022\020\n\014LAUNCH_GR"
  "OUP\020\003\"$\n\022LoginButtonClicked\022\016\n\006server\030\001 "
  "\001(\t\"\025\n\023BitnessWarningShown\"\026\n\024BitnessWar"
  "ningClosed\"k\n\rWebPageLoaded\022\021\n\tstart_url"
  "\030\001 \001(\t\022\022\n\nfinish_url\030\002 \001(\t\022\"\n\032load_durat"
  "ion_milliseconds\030\003 \001(\r\022\017\n\007success\030\004 \001(\010\""
  "3\n\024AssignedToExperiment\022\014\n\004name\030\001 \001(\t\022\r\n"
  "\005group\030\002 \001(\t\"\235\001\n\020LoginFlowStarted\022D\n\016dis"
  "play_method\030\001 \001(\0162,.eve_launcher.LoginFl"
  "owStarted.DisplayMethod\"C\n\rDisplayMethod"
  "\022\013\n\007UNKNOWN\020\000\022\023\n\017EMBEDDED_WIDGET\020\001\022\020\n\014PO"
  "PUP_WINDOW\020\002\"2\n\023SystemBrowserOpened\022\013\n\003u"
  "rl\030\001 \001(\t\022\016\n\006medium\030\002 \001(\t\"\244\002\n\020FileUpdateF"
  "ailed\022\022\n\nerror_code\030\001 \001(\r\022\023\n\013rescheduled"
  "\030\002 \001(\010\022\013\n\003url\030\003 \001(\t\022B\n\rdownload_type\030\004 \001"
  "(\0162+.eve_launcher.FileUpdateFailed.Downl"
  "oadType\022\026\n\016download_speed\030\005 \001(\002\"~\n\014Downl"
  "oadType\022\013\n\007UNKNOWN\020\000\022\025\n\021LAUNCHER_BINARIE"
  "S\020\001\022\023\n\017CLIENT_BINARIES\020\002\022\023\n\017CLIENT_PREFE"
  "TCH\020\003\022\026\n\022CLIENT_FULLPAYLOAD\020\004\022\010\n\004WINE\020\005\""
  "_\n\023DownloadInterrupted\022\026\n\016download_speed"
  "\030\001 \001(\002\022\026\n\016target_version\030\002 \001(\t\022\030\n\020bytes_"
  "downloaded\030\003 \001(\004\"J\n\030LauncherUpdateDownlo"
  "aded\022\026\n\016target_version\030\001 \001(\t\022\026\n\016download"
  "_speed\030\002 \001(\002\"Z\n\024LauncherUpdateFailed\022\022\n\n"
  "error_code\030\001 \001(\r\022\026\n\016target_version\030\002 \001(\t"
  "\022\026\n\016download_speed\030\003 \001(\002\"\233\001\n\nUiSettings\022"
  "\030\n\020settings_changed\030\001 \001(\010\022\035\n\025start_clien"
  "t_on_login\030\002 \001(\010\022\035\n\025startup_delay_second"
  "s\030\003 \001(\r\022\031\n\021remember_accounts\030\004 \001(\010\022\032\n\022de"
  "bug_logs_enabled\030\005 \001(\010\"o\n\023UserRememberTo"
  "ggled\022.\n\007user_id\030\001 \001(\0132\035.eve_launcher.us"
  "er.Identifier\022\016\n\006server\030\002 \001(\t\022\030\n\020remembe"
  "r_enabled\030\003 \001(\010\"I\n\027LauncherUpdateCancell"
  "ed\022\026\n\016target_version\030\001 \001(\t\022\026\n\016download_s"
  "peed\030\002 \001(\002\"\\\n\026LauncherUpdateAccepted\022\026\n\016"
  "target_version\030\001 \001(\t\022\021\n\tautomatic\030\002 \001(\010\022"
  "\027\n\017updater_started\030\003 \001(\010\"\222\001\n\030Certificate"
  "ErrorOccurred\022\013\n\003url\030\001 \001(\t\022(\n\007host_ip\030\002 "
  "\001(\0132\027.eve_launcher.IPAddress\022\022\n\nerror_co"
  "de\030\003 \001(\005\022\025\n\ruser_prompted\030\004 \001(\010\022\024\n\014user_"
  "ignored\030\005 \001(\010\"C\n\027UnpackingBundlesStarted"
  "\022\024\n\014bundle_count\030\001 \001(\r\022\022\n\nfile_count\030\002 \001"
  "(\r\"\322\001\n\026UnpackingBundlesFailed\022\021\n\tfile_na"
  "me\030\001 \001(\t\022B\n\005stage\030\002 \001(\01623.eve_launcher.U"
  "npackingBundlesFailed.UnpackingStage\"a\n\016"
  "UnpackingStage\022\013\n\007UNKNOWN\020\000\022\020\n\014VERIFY_CH"
  "UNK\020\001\022\r\n\tFILE_READ\020\002\022\023\n\017SIZE_VALIDATION\020"
  "\003\022\014\n\010CHECKSUM\020\004\"b\n\031UnpackingBundlesCompl"
  "eted\022\024\n\014bundle_count\030\001 \001(\r\022\022\n\nfile_count"
  "\030\002 \001(\r\022\033\n\023extracted_byte_size\030\003 \001(\004\"5\n\014C"
  "opierFailed\022\022\n\nerror_code\030\001 \001(\r\022\021\n\tfile_"
  "name\030\002 \001(\t*>\n\007Bitness\022\023\n\017BITNESS_UNKNOWN"
  "\020\000\022\016\n\nBITNESS_32\020\001\022\016\n\nBITNESS_64\020\002B9Z7gi"
  "thub.com/ccpgames/eve-proto-go/generated"
  "/eve_launcherb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_eve_5flauncher_2flauncher_2eproto = {
  false, InitDefaults_eve_5flauncher_2flauncher_2eproto, 
  descriptor_table_protodef_eve_5flauncher_2flauncher_2eproto,
  "eve_launcher/launcher.proto", &assign_descriptors_table_eve_5flauncher_2flauncher_2eproto, 6141,
};

void AddDescriptors_eve_5flauncher_2flauncher_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[4] =
  {
    ::AddDescriptors_eve_5flauncher_2fgraphics_2eproto,
    ::AddDescriptors_eve_5flauncher_2fuser_2eproto,
    ::AddDescriptors_google_2fprotobuf_2fany_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_eve_5flauncher_2flauncher_2eproto, deps, 4);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_eve_5flauncher_2flauncher_2eproto = []() { AddDescriptors_eve_5flauncher_2flauncher_2eproto(); return true; }();
namespace eve_launcher {
const ::google::protobuf::EnumDescriptor* Application_BuildTag_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[0];
}
bool Application_BuildTag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Application_BuildTag Application::RELEASE;
const Application_BuildTag Application::BETA;
const Application_BuildTag Application::DEV;
const Application_BuildTag Application::BuildTag_MIN;
const Application_BuildTag Application::BuildTag_MAX;
const int Application::BuildTag_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Application_Locale_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[1];
}
bool Application_Locale_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Application_Locale Application::WORLD;
const Application_Locale Application::CHINA;
const Application_Locale Application::Locale_MIN;
const Application_Locale Application::Locale_MAX;
const int Application::Locale_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OS_Kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[2];
}
bool OS_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OS_Kind OS::WINDOWS;
const OS_Kind OS::UNKNOWN;
const OS_Kind OS::LINUX;
const OS_Kind OS::MAC;
const OS_Kind OS::Kind_MIN;
const OS_Kind OS::Kind_MAX;
const int OS::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WebLoaded_Platform_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[3];
}
bool WebLoaded_Platform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WebLoaded_Platform WebLoaded::UNKNOWN;
const WebLoaded_Platform WebLoaded::NONE;
const WebLoaded_Platform WebLoaded::STEAM;
const WebLoaded_Platform WebLoaded::Platform_MIN;
const WebLoaded_Platform WebLoaded::Platform_MAX;
const int WebLoaded::Platform_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LoginFailed_LoginErrorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[4];
}
bool LoginFailed_LoginErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoginFailed_LoginErrorType LoginFailed::UNKNOWN;
const LoginFailed_LoginErrorType LoginFailed::NETWORK_ERROR;
const LoginFailed_LoginErrorType LoginFailed::TIMEOUT;
const LoginFailed_LoginErrorType LoginFailed::LoginErrorType_MIN;
const LoginFailed_LoginErrorType LoginFailed::LoginErrorType_MAX;
const int LoginFailed::LoginErrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UserAdded_RememberType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[5];
}
bool UserAdded_RememberType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UserAdded_RememberType UserAdded::UNKNOWN;
const UserAdded_RememberType UserAdded::NONE;
const UserAdded_RememberType UserAdded::SSO_REMEMBER;
const UserAdded_RememberType UserAdded::UI_ALWAYS_REMEMBER;
const UserAdded_RememberType UserAdded::RememberType_MIN;
const UserAdded_RememberType UserAdded::RememberType_MAX;
const int UserAdded::RememberType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayButtonClicked_PlayButton_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[6];
}
bool PlayButtonClicked_PlayButton_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayButtonClicked_PlayButton PlayButtonClicked::UNKNOWN;
const PlayButtonClicked_PlayButton PlayButtonClicked::SINGLE_USER;
const PlayButtonClicked_PlayButton PlayButtonClicked::PLAY_NOW;
const PlayButtonClicked_PlayButton PlayButtonClicked::LAUNCH_GROUP;
const PlayButtonClicked_PlayButton PlayButtonClicked::PlayButton_MIN;
const PlayButtonClicked_PlayButton PlayButtonClicked::PlayButton_MAX;
const int PlayButtonClicked::PlayButton_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LoginFlowStarted_DisplayMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[7];
}
bool LoginFlowStarted_DisplayMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LoginFlowStarted_DisplayMethod LoginFlowStarted::UNKNOWN;
const LoginFlowStarted_DisplayMethod LoginFlowStarted::EMBEDDED_WIDGET;
const LoginFlowStarted_DisplayMethod LoginFlowStarted::POPUP_WINDOW;
const LoginFlowStarted_DisplayMethod LoginFlowStarted::DisplayMethod_MIN;
const LoginFlowStarted_DisplayMethod LoginFlowStarted::DisplayMethod_MAX;
const int LoginFlowStarted::DisplayMethod_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FileUpdateFailed_DownloadType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[8];
}
bool FileUpdateFailed_DownloadType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FileUpdateFailed_DownloadType FileUpdateFailed::UNKNOWN;
const FileUpdateFailed_DownloadType FileUpdateFailed::LAUNCHER_BINARIES;
const FileUpdateFailed_DownloadType FileUpdateFailed::CLIENT_BINARIES;
const FileUpdateFailed_DownloadType FileUpdateFailed::CLIENT_PREFETCH;
const FileUpdateFailed_DownloadType FileUpdateFailed::CLIENT_FULLPAYLOAD;
const FileUpdateFailed_DownloadType FileUpdateFailed::WINE;
const FileUpdateFailed_DownloadType FileUpdateFailed::DownloadType_MIN;
const FileUpdateFailed_DownloadType FileUpdateFailed::DownloadType_MAX;
const int FileUpdateFailed::DownloadType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnpackingBundlesFailed_UnpackingStage_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[9];
}
bool UnpackingBundlesFailed_UnpackingStage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnpackingBundlesFailed_UnpackingStage UnpackingBundlesFailed::UNKNOWN;
const UnpackingBundlesFailed_UnpackingStage UnpackingBundlesFailed::VERIFY_CHUNK;
const UnpackingBundlesFailed_UnpackingStage UnpackingBundlesFailed::FILE_READ;
const UnpackingBundlesFailed_UnpackingStage UnpackingBundlesFailed::SIZE_VALIDATION;
const UnpackingBundlesFailed_UnpackingStage UnpackingBundlesFailed::CHECKSUM;
const UnpackingBundlesFailed_UnpackingStage UnpackingBundlesFailed::UnpackingStage_MIN;
const UnpackingBundlesFailed_UnpackingStage UnpackingBundlesFailed::UnpackingStage_MAX;
const int UnpackingBundlesFailed::UnpackingStage_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bitness_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return file_level_enum_descriptors_eve_5flauncher_2flauncher_2eproto[10];
}
bool Bitness_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ClientOptions::InitAsDefaultInstance() {
}
class ClientOptions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientOptions::kBitnessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientOptions::ClientOptions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientOptions)
}
ClientOptions::ClientOptions(const ClientOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitness_ = from.bitness_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientOptions)
}

void ClientOptions::SharedCtor() {
  bitness_ = 0;
}

ClientOptions::~ClientOptions() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientOptions)
  SharedDtor();
}

void ClientOptions::SharedDtor() {
}

void ClientOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientOptions& ClientOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientOptions_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitness_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientOptions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientOptions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .eve_launcher.Bitness bitness = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_bitness(static_cast<::eve_launcher::Bitness>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_launcher.Bitness bitness = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bitness(static_cast< ::eve_launcher::Bitness >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientOptions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.Bitness bitness = 1;
  if (this->bitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->bitness(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientOptions)
}

::google::protobuf::uint8* ClientOptions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.Bitness bitness = 1;
  if (this->bitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->bitness(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientOptions)
  return target;
}

size_t ClientOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .eve_launcher.Bitness bitness = 1;
  if (this->bitness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bitness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientOptions* source =
      ::google::protobuf::DynamicCastToGenerated<ClientOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientOptions)
    MergeFrom(*source);
  }
}

void ClientOptions::MergeFrom(const ClientOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bitness() != 0) {
    set_bitness(from.bitness());
  }
}

void ClientOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientOptions::CopyFrom(const ClientOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientOptions::IsInitialized() const {
  return true;
}

void ClientOptions::Swap(ClientOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientOptions::InternalSwap(ClientOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bitness_, other->bitness_);
}

::google::protobuf::Metadata ClientOptions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Application::InitAsDefaultInstance() {
}
class Application::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Application::kVersionFieldNumber;
const int Application::kBuildTagFieldNumber;
const int Application::kLocaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Application::Application()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.Application)
}
Application::Application(const Application& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&build_tag_, &from.build_tag_,
    static_cast<size_t>(reinterpret_cast<char*>(&locale_) -
    reinterpret_cast<char*>(&build_tag_)) + sizeof(locale_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.Application)
}

void Application::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Application_eve_5flauncher_2flauncher_2eproto.base);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&build_tag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locale_) -
      reinterpret_cast<char*>(&build_tag_)) + sizeof(locale_));
}

Application::~Application() {
  // @@protoc_insertion_point(destructor:eve_launcher.Application)
  SharedDtor();
}

void Application::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Application::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Application& Application::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Application_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void Application::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.Application)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&build_tag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locale_) -
      reinterpret_cast<char*>(&build_tag_)) + sizeof(locale_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Application::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Application*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.Application.version");
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.Application.BuildTag build_tag = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_build_tag(static_cast<::eve_launcher::Application_BuildTag>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .eve_launcher.Application.Locale locale = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_locale(static_cast<::eve_launcher::Application_Locale>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Application::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.Application)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.Application.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.Application.BuildTag build_tag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_build_tag(static_cast< ::eve_launcher::Application_BuildTag >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.Application.Locale locale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_locale(static_cast< ::eve_launcher::Application_Locale >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.Application)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.Application)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Application::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.Application)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.Application.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // .eve_launcher.Application.BuildTag build_tag = 2;
  if (this->build_tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->build_tag(), output);
  }

  // .eve_launcher.Application.Locale locale = 3;
  if (this->locale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->locale(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.Application)
}

::google::protobuf::uint8* Application::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.Application)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.Application.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // .eve_launcher.Application.BuildTag build_tag = 2;
  if (this->build_tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->build_tag(), target);
  }

  // .eve_launcher.Application.Locale locale = 3;
  if (this->locale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->locale(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.Application)
  return target;
}

size_t Application::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.Application)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // .eve_launcher.Application.BuildTag build_tag = 2;
  if (this->build_tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->build_tag());
  }

  // .eve_launcher.Application.Locale locale = 3;
  if (this->locale() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->locale());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Application::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.Application)
  GOOGLE_DCHECK_NE(&from, this);
  const Application* source =
      ::google::protobuf::DynamicCastToGenerated<Application>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.Application)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.Application)
    MergeFrom(*source);
  }
}

void Application::MergeFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.Application)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.build_tag() != 0) {
    set_build_tag(from.build_tag());
  }
  if (from.locale() != 0) {
    set_locale(from.locale());
  }
}

void Application::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Application::CopyFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Application::IsInitialized() const {
  return true;
}

void Application::Swap(Application* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Application::InternalSwap(Application* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(build_tag_, other->build_tag_);
  swap(locale_, other->locale_);
}

::google::protobuf::Metadata Application::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void IPAddress::InitAsDefaultInstance() {
  ::eve_launcher::_IPAddress_default_instance_.v4_ = 0u;
  ::eve_launcher::_IPAddress_default_instance_.v6_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class IPAddress::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IPAddress::kV4FieldNumber;
const int IPAddress::kV6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IPAddress::IPAddress()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.IPAddress)
}
IPAddress::IPAddress(const IPAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_version();
  switch (from.version_case()) {
    case kV4: {
      set_v4(from.v4());
      break;
    }
    case kV6: {
      set_v6(from.v6());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.IPAddress)
}

void IPAddress::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IPAddress_eve_5flauncher_2flauncher_2eproto.base);
  clear_has_version();
}

IPAddress::~IPAddress() {
  // @@protoc_insertion_point(destructor:eve_launcher.IPAddress)
  SharedDtor();
}

void IPAddress::SharedDtor() {
  if (has_version()) {
    clear_version();
  }
}

void IPAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IPAddress& IPAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IPAddress_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void IPAddress::clear_version() {
// @@protoc_insertion_point(one_of_clear_start:eve_launcher.IPAddress)
  switch (version_case()) {
    case kV4: {
      // No need to clear
      break;
    }
    case kV6: {
      version_.v6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VERSION_NOT_SET;
}


void IPAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.IPAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_version();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IPAddress::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IPAddress*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // fixed32 v4 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_v4(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // bytes v6 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_v6();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IPAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.IPAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 v4 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          clear_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &version_.v4_)));
          set_has_v4();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes v6 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_v6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.IPAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.IPAddress)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IPAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.IPAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 v4 = 1;
  if (has_v4()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->v4(), output);
  }

  // bytes v6 = 2;
  if (has_v6()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->v6(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.IPAddress)
}

::google::protobuf::uint8* IPAddress::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.IPAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 v4 = 1;
  if (has_v4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->v4(), target);
  }

  // bytes v6 = 2;
  if (has_v6()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->v6(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.IPAddress)
  return target;
}

size_t IPAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.IPAddress)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (version_case()) {
    // fixed32 v4 = 1;
    case kV4: {
      total_size += 1 + 4;
      break;
    }
    // bytes v6 = 2;
    case kV6: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->v6());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IPAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.IPAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const IPAddress* source =
      ::google::protobuf::DynamicCastToGenerated<IPAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.IPAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.IPAddress)
    MergeFrom(*source);
  }
}

void IPAddress::MergeFrom(const IPAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.IPAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.version_case()) {
    case kV4: {
      set_v4(from.v4());
      break;
    }
    case kV6: {
      set_v6(from.v6());
      break;
    }
    case VERSION_NOT_SET: {
      break;
    }
  }
}

void IPAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.IPAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IPAddress::CopyFrom(const IPAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.IPAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IPAddress::IsInitialized() const {
  return true;
}

void IPAddress::Swap(IPAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IPAddress::InternalSwap(IPAddress* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(version_, other->version_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata IPAddress::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OS::InitAsDefaultInstance() {
}
class OS::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OS::kKindFieldNumber;
const int OS::kVersionFieldNumber;
const int OS::kBuildVersionFieldNumber;
const int OS::kPrettyProductNameFieldNumber;
const int OS::kBitnessFieldNumber;
const int OS::kProcessorArchitectureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OS::OS()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.OS)
}
OS::OS(const OS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  buildversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buildversion().size() > 0) {
    buildversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buildversion_);
  }
  prettyproductname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prettyproductname().size() > 0) {
    prettyproductname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prettyproductname_);
  }
  processorarchitecture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.processorarchitecture().size() > 0) {
    processorarchitecture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processorarchitecture_);
  }
  ::memcpy(&kind_, &from.kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&bitness_) -
    reinterpret_cast<char*>(&kind_)) + sizeof(bitness_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.OS)
}

void OS::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OS_eve_5flauncher_2flauncher_2eproto.base);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buildversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prettyproductname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processorarchitecture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bitness_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(bitness_));
}

OS::~OS() {
  // @@protoc_insertion_point(destructor:eve_launcher.OS)
  SharedDtor();
}

void OS::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buildversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prettyproductname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processorarchitecture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OS& OS::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OS_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void OS::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.OS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buildversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prettyproductname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processorarchitecture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bitness_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(bitness_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OS::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OS*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .eve_launcher.OS.Kind kind = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_kind(static_cast<::eve_launcher::OS_Kind>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.OS.version");
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string buildVersion = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.OS.buildVersion");
        object = msg->mutable_buildversion();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string prettyProductName = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.OS.prettyProductName");
        object = msg->mutable_prettyproductname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.Bitness bitness = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_bitness(static_cast<::eve_launcher::Bitness>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string processorArchitecture = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.OS.processorArchitecture");
        object = msg->mutable_processorarchitecture();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.OS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_launcher.OS.Kind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::eve_launcher::OS_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.OS.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buildVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buildversion().data(), static_cast<int>(this->buildversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.OS.buildVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prettyProductName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prettyproductname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prettyproductname().data(), static_cast<int>(this->prettyproductname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.OS.prettyProductName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.Bitness bitness = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bitness(static_cast< ::eve_launcher::Bitness >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string processorArchitecture = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_processorarchitecture()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->processorarchitecture().data(), static_cast<int>(this->processorarchitecture().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.OS.processorArchitecture"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.OS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.OS)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.OS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.OS.Kind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // string buildVersion = 3;
  if (this->buildversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buildversion().data(), static_cast<int>(this->buildversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.buildVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->buildversion(), output);
  }

  // string prettyProductName = 4;
  if (this->prettyproductname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prettyproductname().data(), static_cast<int>(this->prettyproductname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.prettyProductName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->prettyproductname(), output);
  }

  // .eve_launcher.Bitness bitness = 5;
  if (this->bitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->bitness(), output);
  }

  // string processorArchitecture = 6;
  if (this->processorarchitecture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processorarchitecture().data(), static_cast<int>(this->processorarchitecture().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.processorArchitecture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->processorarchitecture(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.OS)
}

::google::protobuf::uint8* OS::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.OS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.OS.Kind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // string buildVersion = 3;
  if (this->buildversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buildversion().data(), static_cast<int>(this->buildversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.buildVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->buildversion(), target);
  }

  // string prettyProductName = 4;
  if (this->prettyproductname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prettyproductname().data(), static_cast<int>(this->prettyproductname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.prettyProductName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->prettyproductname(), target);
  }

  // .eve_launcher.Bitness bitness = 5;
  if (this->bitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->bitness(), target);
  }

  // string processorArchitecture = 6;
  if (this->processorarchitecture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->processorarchitecture().data(), static_cast<int>(this->processorarchitecture().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.OS.processorArchitecture");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->processorarchitecture(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.OS)
  return target;
}

size_t OS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.OS)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string buildVersion = 3;
  if (this->buildversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buildversion());
  }

  // string prettyProductName = 4;
  if (this->prettyproductname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prettyproductname());
  }

  // string processorArchitecture = 6;
  if (this->processorarchitecture().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->processorarchitecture());
  }

  // .eve_launcher.OS.Kind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  // .eve_launcher.Bitness bitness = 5;
  if (this->bitness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bitness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.OS)
  GOOGLE_DCHECK_NE(&from, this);
  const OS* source =
      ::google::protobuf::DynamicCastToGenerated<OS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.OS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.OS)
    MergeFrom(*source);
  }
}

void OS::MergeFrom(const OS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.OS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.buildversion().size() > 0) {

    buildversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buildversion_);
  }
  if (from.prettyproductname().size() > 0) {

    prettyproductname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prettyproductname_);
  }
  if (from.processorarchitecture().size() > 0) {

    processorarchitecture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processorarchitecture_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.bitness() != 0) {
    set_bitness(from.bitness());
  }
}

void OS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.OS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OS::CopyFrom(const OS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.OS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OS::IsInitialized() const {
  return true;
}

void OS::Swap(OS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OS::InternalSwap(OS* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  buildversion_.Swap(&other->buildversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prettyproductname_.Swap(&other->prettyproductname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  processorarchitecture_.Swap(&other->processorarchitecture_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(kind_, other->kind_);
  swap(bitness_, other->bitness_);
}

::google::protobuf::Metadata OS::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Host::InitAsDefaultInstance() {
  ::eve_launcher::_Host_default_instance_._instance.get_mutable()->os_ = const_cast< ::eve_launcher::OS*>(
      ::eve_launcher::OS::internal_default_instance());
}
class Host::HasBitSetters {
 public:
  static const ::eve_launcher::OS& os(const Host* msg);
};

const ::eve_launcher::OS&
Host::HasBitSetters::os(const Host* msg) {
  return *msg->os_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Host::kMd5HashFieldNumber;
const int Host::kMacAddressFieldNumber;
const int Host::kOsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Host::Host()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.Host)
}
Host::Host(const Host& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  md5_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5_hash().size() > 0) {
    md5_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_hash_);
  }
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_address().size() > 0) {
    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.has_os()) {
    os_ = new ::eve_launcher::OS(*from.os_);
  } else {
    os_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.Host)
}

void Host::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Host_eve_5flauncher_2flauncher_2eproto.base);
  md5_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_ = nullptr;
}

Host::~Host() {
  // @@protoc_insertion_point(destructor:eve_launcher.Host)
  SharedDtor();
}

void Host::SharedDtor() {
  md5_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete os_;
}

void Host::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Host& Host::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Host_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void Host::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.Host)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  md5_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && os_ != nullptr) {
    delete os_;
  }
  os_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Host::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Host*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes md5_hash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_md5_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes mac_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mac_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.OS os = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::OS::_InternalParse;
        object = msg->mutable_os();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Host::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.Host)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes md5_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_md5_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mac_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.OS os = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_os()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.Host)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.Host)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Host::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.Host)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes md5_hash = 1;
  if (this->md5_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->md5_hash(), output);
  }

  // bytes mac_address = 2;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mac_address(), output);
  }

  // .eve_launcher.OS os = 4;
  if (this->has_os()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::os(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.Host)
}

::google::protobuf::uint8* Host::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.Host)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes md5_hash = 1;
  if (this->md5_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->md5_hash(), target);
  }

  // bytes mac_address = 2;
  if (this->mac_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->mac_address(), target);
  }

  // .eve_launcher.OS os = 4;
  if (this->has_os()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::os(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.Host)
  return target;
}

size_t Host::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.Host)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes md5_hash = 1;
  if (this->md5_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->md5_hash());
  }

  // bytes mac_address = 2;
  if (this->mac_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_address());
  }

  // .eve_launcher.OS os = 4;
  if (this->has_os()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *os_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Host::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.Host)
  GOOGLE_DCHECK_NE(&from, this);
  const Host* source =
      ::google::protobuf::DynamicCastToGenerated<Host>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.Host)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.Host)
    MergeFrom(*source);
  }
}

void Host::MergeFrom(const Host& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.Host)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.md5_hash().size() > 0) {

    md5_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_hash_);
  }
  if (from.mac_address().size() > 0) {

    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.has_os()) {
    mutable_os()->::eve_launcher::OS::MergeFrom(from.os());
  }
}

void Host::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.Host)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Host::CopyFrom(const Host& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.Host)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Host::IsInitialized() const {
  return true;
}

void Host::Swap(Host* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Host::InternalSwap(Host* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  md5_hash_.Swap(&other->md5_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mac_address_.Swap(&other->mac_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(os_, other->os_);
}

::google::protobuf::Metadata Host::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UsersOnServer::InitAsDefaultInstance() {
}
class UsersOnServer::HasBitSetters {
 public:
};

void UsersOnServer::clear_user_ids() {
  user_ids_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsersOnServer::kServerFieldNumber;
const int UsersOnServer::kUserIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsersOnServer::UsersOnServer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UsersOnServer)
}
UsersOnServer::UsersOnServer(const UsersOnServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      user_ids_(from.user_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UsersOnServer)
}

void UsersOnServer::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UsersOnServer_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UsersOnServer::~UsersOnServer() {
  // @@protoc_insertion_point(destructor:eve_launcher.UsersOnServer)
  SharedDtor();
}

void UsersOnServer::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UsersOnServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsersOnServer& UsersOnServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UsersOnServer_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UsersOnServer::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UsersOnServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_ids_.Clear();
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsersOnServer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UsersOnServer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.UsersOnServer.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .eve_launcher.user.Identifier user_ids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
          object = msg->add_user_ids();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsersOnServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UsersOnServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.UsersOnServer.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_launcher.user.Identifier user_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UsersOnServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UsersOnServer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsersOnServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UsersOnServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UsersOnServer.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server(), output);
  }

  // repeated .eve_launcher.user.Identifier user_ids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->user_ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UsersOnServer)
}

::google::protobuf::uint8* UsersOnServer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UsersOnServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UsersOnServer.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server(), target);
  }

  // repeated .eve_launcher.user.Identifier user_ids = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->user_ids(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UsersOnServer)
  return target;
}

size_t UsersOnServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UsersOnServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .eve_launcher.user.Identifier user_ids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->user_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_ids(static_cast<int>(i)));
    }
  }

  // string server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsersOnServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UsersOnServer)
  GOOGLE_DCHECK_NE(&from, this);
  const UsersOnServer* source =
      ::google::protobuf::DynamicCastToGenerated<UsersOnServer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UsersOnServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UsersOnServer)
    MergeFrom(*source);
  }
}

void UsersOnServer::MergeFrom(const UsersOnServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UsersOnServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_ids_.MergeFrom(from.user_ids_);
  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
}

void UsersOnServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UsersOnServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsersOnServer::CopyFrom(const UsersOnServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UsersOnServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsersOnServer::IsInitialized() const {
  return true;
}

void UsersOnServer::Swap(UsersOnServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsersOnServer::InternalSwap(UsersOnServer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&user_ids_)->InternalSwap(CastToBase(&other->user_ids_));
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UsersOnServer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Settings::InitAsDefaultInstance() {
}
class Settings::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Settings::kLanguageFieldNumber;
const int Settings::kDownloadEverythingFieldNumber;
const int Settings::kRunClientsWithLoggingFieldNumber;
const int Settings::kRunClientsWithDx9FieldNumber;
const int Settings::kMinimizeToTrayOnCloseFieldNumber;
const int Settings::kIgnoreCertificationErrorsFieldNumber;
const int Settings::kUseSystemConfigurationForProxyFieldNumber;
const int Settings::kEnableHighDpiScalingFieldNumber;
const int Settings::kEnableHardwareRenderingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Settings::Settings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.Settings)
}
Settings::Settings(const Settings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language().size() > 0) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  ::memcpy(&download_everything_, &from.download_everything_,
    static_cast<size_t>(reinterpret_cast<char*>(&enable_hardware_rendering_) -
    reinterpret_cast<char*>(&download_everything_)) + sizeof(enable_hardware_rendering_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.Settings)
}

void Settings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Settings_eve_5flauncher_2flauncher_2eproto.base);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&download_everything_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_hardware_rendering_) -
      reinterpret_cast<char*>(&download_everything_)) + sizeof(enable_hardware_rendering_));
}

Settings::~Settings() {
  // @@protoc_insertion_point(destructor:eve_launcher.Settings)
  SharedDtor();
}

void Settings::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Settings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Settings& Settings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Settings_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void Settings::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&download_everything_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_hardware_rendering_) -
      reinterpret_cast<char*>(&download_everything_)) + sizeof(enable_hardware_rendering_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Settings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Settings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string language = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.Settings.language");
        object = msg->mutable_language();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool download_everything = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_download_everything(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool run_clients_with_logging = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_run_clients_with_logging(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool run_clients_with_dx9 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_run_clients_with_dx9(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool minimize_to_tray_on_close = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_minimize_to_tray_on_close(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool ignore_certification_errors = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_ignore_certification_errors(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool use_system_configuration_for_proxy = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_use_system_configuration_for_proxy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool enable_high_dpi_scaling = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_enable_high_dpi_scaling(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool enable_hardware_rendering = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_enable_hardware_rendering(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Settings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.Settings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string language = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.Settings.language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool download_everything = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &download_everything_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool run_clients_with_logging = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &run_clients_with_logging_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool run_clients_with_dx9 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &run_clients_with_dx9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool minimize_to_tray_on_close = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &minimize_to_tray_on_close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ignore_certification_errors = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_certification_errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_system_configuration_for_proxy = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_system_configuration_for_proxy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_high_dpi_scaling = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_high_dpi_scaling_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_hardware_rendering = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_hardware_rendering_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.Settings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.Settings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Settings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language = 1;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.Settings.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->language(), output);
  }

  // bool download_everything = 2;
  if (this->download_everything() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->download_everything(), output);
  }

  // bool run_clients_with_logging = 3;
  if (this->run_clients_with_logging() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->run_clients_with_logging(), output);
  }

  // bool run_clients_with_dx9 = 4;
  if (this->run_clients_with_dx9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->run_clients_with_dx9(), output);
  }

  // bool minimize_to_tray_on_close = 5;
  if (this->minimize_to_tray_on_close() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->minimize_to_tray_on_close(), output);
  }

  // bool ignore_certification_errors = 6;
  if (this->ignore_certification_errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->ignore_certification_errors(), output);
  }

  // bool use_system_configuration_for_proxy = 7;
  if (this->use_system_configuration_for_proxy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->use_system_configuration_for_proxy(), output);
  }

  // bool enable_high_dpi_scaling = 8;
  if (this->enable_high_dpi_scaling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->enable_high_dpi_scaling(), output);
  }

  // bool enable_hardware_rendering = 9;
  if (this->enable_hardware_rendering() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->enable_hardware_rendering(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.Settings)
}

::google::protobuf::uint8* Settings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.Settings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language = 1;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.Settings.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->language(), target);
  }

  // bool download_everything = 2;
  if (this->download_everything() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->download_everything(), target);
  }

  // bool run_clients_with_logging = 3;
  if (this->run_clients_with_logging() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->run_clients_with_logging(), target);
  }

  // bool run_clients_with_dx9 = 4;
  if (this->run_clients_with_dx9() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->run_clients_with_dx9(), target);
  }

  // bool minimize_to_tray_on_close = 5;
  if (this->minimize_to_tray_on_close() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->minimize_to_tray_on_close(), target);
  }

  // bool ignore_certification_errors = 6;
  if (this->ignore_certification_errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->ignore_certification_errors(), target);
  }

  // bool use_system_configuration_for_proxy = 7;
  if (this->use_system_configuration_for_proxy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->use_system_configuration_for_proxy(), target);
  }

  // bool enable_high_dpi_scaling = 8;
  if (this->enable_high_dpi_scaling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->enable_high_dpi_scaling(), target);
  }

  // bool enable_hardware_rendering = 9;
  if (this->enable_hardware_rendering() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->enable_hardware_rendering(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.Settings)
  return target;
}

size_t Settings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.Settings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string language = 1;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // bool download_everything = 2;
  if (this->download_everything() != 0) {
    total_size += 1 + 1;
  }

  // bool run_clients_with_logging = 3;
  if (this->run_clients_with_logging() != 0) {
    total_size += 1 + 1;
  }

  // bool run_clients_with_dx9 = 4;
  if (this->run_clients_with_dx9() != 0) {
    total_size += 1 + 1;
  }

  // bool minimize_to_tray_on_close = 5;
  if (this->minimize_to_tray_on_close() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore_certification_errors = 6;
  if (this->ignore_certification_errors() != 0) {
    total_size += 1 + 1;
  }

  // bool use_system_configuration_for_proxy = 7;
  if (this->use_system_configuration_for_proxy() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_high_dpi_scaling = 8;
  if (this->enable_high_dpi_scaling() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_hardware_rendering = 9;
  if (this->enable_hardware_rendering() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Settings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.Settings)
  GOOGLE_DCHECK_NE(&from, this);
  const Settings* source =
      ::google::protobuf::DynamicCastToGenerated<Settings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.Settings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.Settings)
    MergeFrom(*source);
  }
}

void Settings::MergeFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.Settings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.download_everything() != 0) {
    set_download_everything(from.download_everything());
  }
  if (from.run_clients_with_logging() != 0) {
    set_run_clients_with_logging(from.run_clients_with_logging());
  }
  if (from.run_clients_with_dx9() != 0) {
    set_run_clients_with_dx9(from.run_clients_with_dx9());
  }
  if (from.minimize_to_tray_on_close() != 0) {
    set_minimize_to_tray_on_close(from.minimize_to_tray_on_close());
  }
  if (from.ignore_certification_errors() != 0) {
    set_ignore_certification_errors(from.ignore_certification_errors());
  }
  if (from.use_system_configuration_for_proxy() != 0) {
    set_use_system_configuration_for_proxy(from.use_system_configuration_for_proxy());
  }
  if (from.enable_high_dpi_scaling() != 0) {
    set_enable_high_dpi_scaling(from.enable_high_dpi_scaling());
  }
  if (from.enable_hardware_rendering() != 0) {
    set_enable_hardware_rendering(from.enable_hardware_rendering());
  }
}

void Settings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Settings::CopyFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Settings::IsInitialized() const {
  return true;
}

void Settings::Swap(Settings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Settings::InternalSwap(Settings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(download_everything_, other->download_everything_);
  swap(run_clients_with_logging_, other->run_clients_with_logging_);
  swap(run_clients_with_dx9_, other->run_clients_with_dx9_);
  swap(minimize_to_tray_on_close_, other->minimize_to_tray_on_close_);
  swap(ignore_certification_errors_, other->ignore_certification_errors_);
  swap(use_system_configuration_for_proxy_, other->use_system_configuration_for_proxy_);
  swap(enable_high_dpi_scaling_, other->enable_high_dpi_scaling_);
  swap(enable_hardware_rendering_, other->enable_hardware_rendering_);
}

::google::protobuf::Metadata Settings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::eve_launcher::_Event_default_instance_._instance.get_mutable()->payload_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::eve_launcher::_Event_default_instance_._instance.get_mutable()->application_ = const_cast< ::eve_launcher::Application*>(
      ::eve_launcher::Application::internal_default_instance());
  ::eve_launcher::_Event_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class Event::HasBitSetters {
 public:
  static const ::google::protobuf::Any& payload(const Event* msg);
  static const ::eve_launcher::Application& application(const Event* msg);
  static const ::google::protobuf::Timestamp& timestamp(const Event* msg);
};

const ::google::protobuf::Any&
Event::HasBitSetters::payload(const Event* msg) {
  return *msg->payload_;
}
const ::eve_launcher::Application&
Event::HasBitSetters::application(const Event* msg) {
  return *msg->application_;
}
const ::google::protobuf::Timestamp&
Event::HasBitSetters::timestamp(const Event* msg) {
  return *msg->timestamp_;
}
void Event::clear_payload() {
  if (GetArenaNoVirtual() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
}
void Event::clear_timestamp() {
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kPayloadFieldNumber;
const int Event::kMd5SessionFieldNumber;
const int Event::kApplicationFieldNumber;
const int Event::kOperatingSystemUuidFieldNumber;
const int Event::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  md5_session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5_session().size() > 0) {
    md5_session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_session_);
  }
  operatingsystemuuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operatingsystemuuid().size() > 0) {
    operatingsystemuuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operatingsystemuuid_);
  }
  if (from.has_payload()) {
    payload_ = new ::google::protobuf::Any(*from.payload_);
  } else {
    payload_ = nullptr;
  }
  if (from.has_application()) {
    application_ = new ::eve_launcher::Application(*from.application_);
  } else {
    application_ = nullptr;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.Event)
}

void Event::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Event_eve_5flauncher_2flauncher_2eproto.base);
  md5_session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operatingsystemuuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&payload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&payload_)) + sizeof(timestamp_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:eve_launcher.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  md5_session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operatingsystemuuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payload_;
  if (this != internal_default_instance()) delete application_;
  if (this != internal_default_instance()) delete timestamp_;
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Event_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  md5_session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operatingsystemuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Event::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Event*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any payload = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Any::_InternalParse;
        object = msg->mutable_payload();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes md5_session = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_md5_session();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.Application application = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::Application::_InternalParse;
        object = msg->mutable_application();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes operatingSystemUuid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_operatingsystemuuid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Timestamp timestamp = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_timestamp();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes md5_session = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_md5_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.Application application = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_application()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes operatingSystemUuid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_operatingsystemuuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.Event)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any payload = 2;
  if (this->has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::payload(this), output);
  }

  // bytes md5_session = 3;
  if (this->md5_session().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->md5_session(), output);
  }

  // .eve_launcher.Application application = 4;
  if (this->has_application()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::application(this), output);
  }

  // bytes operatingSystemUuid = 5;
  if (this->operatingsystemuuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->operatingsystemuuid(), output);
  }

  // .google.protobuf.Timestamp timestamp = 6;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::timestamp(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any payload = 2;
  if (this->has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::payload(this), target);
  }

  // bytes md5_session = 3;
  if (this->md5_session().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->md5_session(), target);
  }

  // .eve_launcher.Application application = 4;
  if (this->has_application()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::application(this), target);
  }

  // bytes operatingSystemUuid = 5;
  if (this->operatingsystemuuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->operatingsystemuuid(), target);
  }

  // .google.protobuf.Timestamp timestamp = 6;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::timestamp(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes md5_session = 3;
  if (this->md5_session().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->md5_session());
  }

  // bytes operatingSystemUuid = 5;
  if (this->operatingsystemuuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->operatingsystemuuid());
  }

  // .google.protobuf.Any payload = 2;
  if (this->has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  // .eve_launcher.Application application = 4;
  if (this->has_application()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *application_);
  }

  // .google.protobuf.Timestamp timestamp = 6;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::DynamicCastToGenerated<Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.md5_session().size() > 0) {

    md5_session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_session_);
  }
  if (from.operatingsystemuuid().size() > 0) {

    operatingsystemuuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operatingsystemuuid_);
  }
  if (from.has_payload()) {
    mutable_payload()->::google::protobuf::Any::MergeFrom(from.payload());
  }
  if (from.has_application()) {
    mutable_application()->::eve_launcher::Application::MergeFrom(from.application());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  md5_session_.Swap(&other->md5_session_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operatingsystemuuid_.Swap(&other->operatingsystemuuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(payload_, other->payload_);
  swap(application_, other->application_);
  swap(timestamp_, other->timestamp_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Installed::InitAsDefaultInstance() {
}
class Installed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Installed::Installed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.Installed)
}
Installed::Installed(const Installed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:eve_launcher.Installed)
}

void Installed::SharedCtor() {
}

Installed::~Installed() {
  // @@protoc_insertion_point(destructor:eve_launcher.Installed)
  SharedDtor();
}

void Installed::SharedDtor() {
}

void Installed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Installed& Installed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Installed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void Installed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.Installed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Installed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Installed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Installed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.Installed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.Installed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.Installed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Installed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.Installed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.Installed)
}

::google::protobuf::uint8* Installed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.Installed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.Installed)
  return target;
}

size_t Installed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.Installed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Installed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.Installed)
  GOOGLE_DCHECK_NE(&from, this);
  const Installed* source =
      ::google::protobuf::DynamicCastToGenerated<Installed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.Installed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.Installed)
    MergeFrom(*source);
  }
}

void Installed::MergeFrom(const Installed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.Installed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Installed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.Installed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Installed::CopyFrom(const Installed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.Installed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Installed::IsInitialized() const {
  return true;
}

void Installed::Swap(Installed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Installed::InternalSwap(Installed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Installed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Started::InitAsDefaultInstance() {
  ::eve_launcher::_Started_default_instance_._instance.get_mutable()->host_ = const_cast< ::eve_launcher::Host*>(
      ::eve_launcher::Host::internal_default_instance());
  ::eve_launcher::_Started_default_instance_._instance.get_mutable()->process_start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::eve_launcher::_Started_default_instance_._instance.get_mutable()->settings_ = const_cast< ::eve_launcher::Settings*>(
      ::eve_launcher::Settings::internal_default_instance());
  ::eve_launcher::_Started_default_instance_.no_installer_provider_ = false;
  ::eve_launcher::_Started_default_instance_.installer_provider_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class Started::HasBitSetters {
 public:
  static const ::eve_launcher::Host& host(const Started* msg);
  static const ::google::protobuf::Timestamp& process_start_time(const Started* msg);
  static const ::eve_launcher::Settings& settings(const Started* msg);
};

const ::eve_launcher::Host&
Started::HasBitSetters::host(const Started* msg) {
  return *msg->host_;
}
const ::google::protobuf::Timestamp&
Started::HasBitSetters::process_start_time(const Started* msg) {
  return *msg->process_start_time_;
}
const ::eve_launcher::Settings&
Started::HasBitSetters::settings(const Started* msg) {
  return *msg->settings_;
}
void Started::clear_process_start_time() {
  if (GetArenaNoVirtual() == nullptr && process_start_time_ != nullptr) {
    delete process_start_time_;
  }
  process_start_time_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Started::kHostFieldNumber;
const int Started::kProcessStartTimeFieldNumber;
const int Started::kSettingsFieldNumber;
const int Started::kNoInstallerProviderFieldNumber;
const int Started::kInstallerProviderFieldNumber;
const int Started::kStartedByUpdaterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Started::Started()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.Started)
}
Started::Started(const Started& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_host()) {
    host_ = new ::eve_launcher::Host(*from.host_);
  } else {
    host_ = nullptr;
  }
  if (from.has_process_start_time()) {
    process_start_time_ = new ::google::protobuf::Timestamp(*from.process_start_time_);
  } else {
    process_start_time_ = nullptr;
  }
  if (from.has_settings()) {
    settings_ = new ::eve_launcher::Settings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  started_by_updater_ = from.started_by_updater_;
  clear_has_provider();
  switch (from.provider_case()) {
    case kNoInstallerProvider: {
      set_no_installer_provider(from.no_installer_provider());
      break;
    }
    case kInstallerProvider: {
      set_installer_provider(from.installer_provider());
      break;
    }
    case PROVIDER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.Started)
}

void Started::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Started_eve_5flauncher_2flauncher_2eproto.base);
  ::memset(&host_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&started_by_updater_) -
      reinterpret_cast<char*>(&host_)) + sizeof(started_by_updater_));
  clear_has_provider();
}

Started::~Started() {
  // @@protoc_insertion_point(destructor:eve_launcher.Started)
  SharedDtor();
}

void Started::SharedDtor() {
  if (this != internal_default_instance()) delete host_;
  if (this != internal_default_instance()) delete process_start_time_;
  if (this != internal_default_instance()) delete settings_;
  if (has_provider()) {
    clear_provider();
  }
}

void Started::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Started& Started::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Started_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void Started::clear_provider() {
// @@protoc_insertion_point(one_of_clear_start:eve_launcher.Started)
  switch (provider_case()) {
    case kNoInstallerProvider: {
      // No need to clear
      break;
    }
    case kInstallerProvider: {
      provider_.installer_provider_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PROVIDER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROVIDER_NOT_SET;
}


void Started::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.Started)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && host_ != nullptr) {
    delete host_;
  }
  host_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && process_start_time_ != nullptr) {
    delete process_start_time_;
  }
  process_start_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && settings_ != nullptr) {
    delete settings_;
  }
  settings_ = nullptr;
  started_by_updater_ = false;
  clear_provider();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Started::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Started*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .eve_launcher.Host host = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::Host::_InternalParse;
        object = msg->mutable_host();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp process_start_time = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_process_start_time();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .eve_launcher.Settings settings = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::Settings::_InternalParse;
        object = msg->mutable_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool no_installer_provider = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_no_installer_provider(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string installer_provider = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.Started.installer_provider");
        object = msg->mutable_installer_provider();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool started_by_updater = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_started_by_updater(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Started::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.Started)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_launcher.Host host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp process_start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.Settings settings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool no_installer_provider = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          clear_provider();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &provider_.no_installer_provider_)));
          set_has_no_installer_provider();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string installer_provider = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_installer_provider()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->installer_provider().data(), static_cast<int>(this->installer_provider().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.Started.installer_provider"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool started_by_updater = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &started_by_updater_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.Started)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.Started)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Started::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.Started)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.Host host = 2;
  if (this->has_host()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::host(this), output);
  }

  // .google.protobuf.Timestamp process_start_time = 4;
  if (this->has_process_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::process_start_time(this), output);
  }

  // .eve_launcher.Settings settings = 5;
  if (this->has_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::settings(this), output);
  }

  // bool no_installer_provider = 6;
  if (has_no_installer_provider()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->no_installer_provider(), output);
  }

  // string installer_provider = 7;
  if (has_installer_provider()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->installer_provider().data(), static_cast<int>(this->installer_provider().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.Started.installer_provider");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->installer_provider(), output);
  }

  // bool started_by_updater = 8;
  if (this->started_by_updater() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->started_by_updater(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.Started)
}

::google::protobuf::uint8* Started::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.Started)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.Host host = 2;
  if (this->has_host()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::host(this), target);
  }

  // .google.protobuf.Timestamp process_start_time = 4;
  if (this->has_process_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::process_start_time(this), target);
  }

  // .eve_launcher.Settings settings = 5;
  if (this->has_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::settings(this), target);
  }

  // bool no_installer_provider = 6;
  if (has_no_installer_provider()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->no_installer_provider(), target);
  }

  // string installer_provider = 7;
  if (has_installer_provider()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->installer_provider().data(), static_cast<int>(this->installer_provider().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.Started.installer_provider");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->installer_provider(), target);
  }

  // bool started_by_updater = 8;
  if (this->started_by_updater() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->started_by_updater(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.Started)
  return target;
}

size_t Started::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.Started)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .eve_launcher.Host host = 2;
  if (this->has_host()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_);
  }

  // .google.protobuf.Timestamp process_start_time = 4;
  if (this->has_process_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *process_start_time_);
  }

  // .eve_launcher.Settings settings = 5;
  if (this->has_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *settings_);
  }

  // bool started_by_updater = 8;
  if (this->started_by_updater() != 0) {
    total_size += 1 + 1;
  }

  switch (provider_case()) {
    // bool no_installer_provider = 6;
    case kNoInstallerProvider: {
      total_size += 1 + 1;
      break;
    }
    // string installer_provider = 7;
    case kInstallerProvider: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->installer_provider());
      break;
    }
    case PROVIDER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Started::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.Started)
  GOOGLE_DCHECK_NE(&from, this);
  const Started* source =
      ::google::protobuf::DynamicCastToGenerated<Started>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.Started)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.Started)
    MergeFrom(*source);
  }
}

void Started::MergeFrom(const Started& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.Started)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_host()) {
    mutable_host()->::eve_launcher::Host::MergeFrom(from.host());
  }
  if (from.has_process_start_time()) {
    mutable_process_start_time()->::google::protobuf::Timestamp::MergeFrom(from.process_start_time());
  }
  if (from.has_settings()) {
    mutable_settings()->::eve_launcher::Settings::MergeFrom(from.settings());
  }
  if (from.started_by_updater() != 0) {
    set_started_by_updater(from.started_by_updater());
  }
  switch (from.provider_case()) {
    case kNoInstallerProvider: {
      set_no_installer_provider(from.no_installer_provider());
      break;
    }
    case kInstallerProvider: {
      set_installer_provider(from.installer_provider());
      break;
    }
    case PROVIDER_NOT_SET: {
      break;
    }
  }
}

void Started::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.Started)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Started::CopyFrom(const Started& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.Started)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Started::IsInitialized() const {
  return true;
}

void Started::Swap(Started* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Started::InternalSwap(Started* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(host_, other->host_);
  swap(process_start_time_, other->process_start_time_);
  swap(settings_, other->settings_);
  swap(started_by_updater_, other->started_by_updater_);
  swap(provider_, other->provider_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Started::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateStarted::InitAsDefaultInstance() {
}
class UpdateStarted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateStarted::kTargetVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateStarted::UpdateStarted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UpdateStarted)
}
UpdateStarted::UpdateStarted(const UpdateStarted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UpdateStarted)
}

void UpdateStarted::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateStarted_eve_5flauncher_2flauncher_2eproto.base);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateStarted::~UpdateStarted() {
  // @@protoc_insertion_point(destructor:eve_launcher.UpdateStarted)
  SharedDtor();
}

void UpdateStarted::SharedDtor() {
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateStarted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateStarted& UpdateStarted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateStarted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UpdateStarted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UpdateStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateStarted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateStarted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.UpdateStarted.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateStarted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UpdateStarted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.UpdateStarted.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UpdateStarted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UpdateStarted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateStarted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UpdateStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UpdateStarted.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UpdateStarted)
}

::google::protobuf::uint8* UpdateStarted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UpdateStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UpdateStarted.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UpdateStarted)
  return target;
}

size_t UpdateStarted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UpdateStarted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateStarted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UpdateStarted)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateStarted* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateStarted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UpdateStarted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UpdateStarted)
    MergeFrom(*source);
  }
}

void UpdateStarted::MergeFrom(const UpdateStarted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UpdateStarted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
}

void UpdateStarted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UpdateStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateStarted::CopyFrom(const UpdateStarted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UpdateStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateStarted::IsInitialized() const {
  return true;
}

void UpdateStarted::Swap(UpdateStarted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateStarted::InternalSwap(UpdateStarted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UpdateStarted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Shutdown::InitAsDefaultInstance() {
}
class Shutdown::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shutdown::kClientsRunningFieldNumber;
const int Shutdown::kClientsStartedFieldNumber;
const int Shutdown::kPinnedUsersFieldNumber;
const int Shutdown::kNotPinnedUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shutdown::Shutdown()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.Shutdown)
}
Shutdown::Shutdown(const Shutdown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      pinned_users_(from.pinned_users_),
      not_pinned_users_(from.not_pinned_users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&clients_running_, &from.clients_running_,
    static_cast<size_t>(reinterpret_cast<char*>(&clients_started_) -
    reinterpret_cast<char*>(&clients_running_)) + sizeof(clients_started_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.Shutdown)
}

void Shutdown::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Shutdown_eve_5flauncher_2flauncher_2eproto.base);
  ::memset(&clients_running_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clients_started_) -
      reinterpret_cast<char*>(&clients_running_)) + sizeof(clients_started_));
}

Shutdown::~Shutdown() {
  // @@protoc_insertion_point(destructor:eve_launcher.Shutdown)
  SharedDtor();
}

void Shutdown::SharedDtor() {
}

void Shutdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Shutdown& Shutdown::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Shutdown_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void Shutdown::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.Shutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pinned_users_.Clear();
  not_pinned_users_.Clear();
  ::memset(&clients_running_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clients_started_) -
      reinterpret_cast<char*>(&clients_running_)) + sizeof(clients_started_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Shutdown::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Shutdown*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 clients_running = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_clients_running(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 clients_started = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_clients_started(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .eve_launcher.UsersOnServer pinned_users = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::eve_launcher::UsersOnServer::_InternalParse;
          object = msg->add_pinned_users();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .eve_launcher.UsersOnServer not_pinned_users = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::eve_launcher::UsersOnServer::_InternalParse;
          object = msg->add_not_pinned_users();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Shutdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.Shutdown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 clients_running = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clients_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 clients_started = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clients_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_launcher.UsersOnServer pinned_users = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pinned_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_launcher.UsersOnServer not_pinned_users = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_not_pinned_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.Shutdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.Shutdown)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Shutdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.Shutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clients_running = 2;
  if (this->clients_running() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clients_running(), output);
  }

  // int32 clients_started = 3;
  if (this->clients_started() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->clients_started(), output);
  }

  // repeated .eve_launcher.UsersOnServer pinned_users = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pinned_users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->pinned_users(static_cast<int>(i)),
      output);
  }

  // repeated .eve_launcher.UsersOnServer not_pinned_users = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->not_pinned_users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->not_pinned_users(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.Shutdown)
}

::google::protobuf::uint8* Shutdown::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.Shutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clients_running = 2;
  if (this->clients_running() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clients_running(), target);
  }

  // int32 clients_started = 3;
  if (this->clients_started() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->clients_started(), target);
  }

  // repeated .eve_launcher.UsersOnServer pinned_users = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pinned_users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->pinned_users(static_cast<int>(i)), target);
  }

  // repeated .eve_launcher.UsersOnServer not_pinned_users = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->not_pinned_users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->not_pinned_users(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.Shutdown)
  return target;
}

size_t Shutdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.Shutdown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .eve_launcher.UsersOnServer pinned_users = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->pinned_users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pinned_users(static_cast<int>(i)));
    }
  }

  // repeated .eve_launcher.UsersOnServer not_pinned_users = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->not_pinned_users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->not_pinned_users(static_cast<int>(i)));
    }
  }

  // int32 clients_running = 2;
  if (this->clients_running() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clients_running());
  }

  // int32 clients_started = 3;
  if (this->clients_started() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clients_started());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Shutdown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.Shutdown)
  GOOGLE_DCHECK_NE(&from, this);
  const Shutdown* source =
      ::google::protobuf::DynamicCastToGenerated<Shutdown>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.Shutdown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.Shutdown)
    MergeFrom(*source);
  }
}

void Shutdown::MergeFrom(const Shutdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.Shutdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pinned_users_.MergeFrom(from.pinned_users_);
  not_pinned_users_.MergeFrom(from.not_pinned_users_);
  if (from.clients_running() != 0) {
    set_clients_running(from.clients_running());
  }
  if (from.clients_started() != 0) {
    set_clients_started(from.clients_started());
  }
}

void Shutdown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.Shutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shutdown::CopyFrom(const Shutdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.Shutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shutdown::IsInitialized() const {
  return true;
}

void Shutdown::Swap(Shutdown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shutdown::InternalSwap(Shutdown* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&pinned_users_)->InternalSwap(CastToBase(&other->pinned_users_));
  CastToBase(&not_pinned_users_)->InternalSwap(CastToBase(&other->not_pinned_users_));
  swap(clients_running_, other->clients_running_);
  swap(clients_started_, other->clients_started_);
}

::google::protobuf::Metadata Shutdown::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientInitiallyLaunched::InitAsDefaultInstance() {
  ::eve_launcher::_ClientInitiallyLaunched_default_instance_._instance.get_mutable()->client_options_ = const_cast< ::eve_launcher::ClientOptions*>(
      ::eve_launcher::ClientOptions::internal_default_instance());
}
class ClientInitiallyLaunched::HasBitSetters {
 public:
  static const ::eve_launcher::ClientOptions& client_options(const ClientInitiallyLaunched* msg);
};

const ::eve_launcher::ClientOptions&
ClientInitiallyLaunched::HasBitSetters::client_options(const ClientInitiallyLaunched* msg) {
  return *msg->client_options_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientInitiallyLaunched::kTargetServerFieldNumber;
const int ClientInitiallyLaunched::kClientOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientInitiallyLaunched::ClientInitiallyLaunched()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientInitiallyLaunched)
}
ClientInitiallyLaunched::ClientInitiallyLaunched(const ClientInitiallyLaunched& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.has_client_options()) {
    client_options_ = new ::eve_launcher::ClientOptions(*from.client_options_);
  } else {
    client_options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientInitiallyLaunched)
}

void ClientInitiallyLaunched::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientInitiallyLaunched_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_options_ = nullptr;
}

ClientInitiallyLaunched::~ClientInitiallyLaunched() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientInitiallyLaunched)
  SharedDtor();
}

void ClientInitiallyLaunched::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_options_;
}

void ClientInitiallyLaunched::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientInitiallyLaunched& ClientInitiallyLaunched::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientInitiallyLaunched_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientInitiallyLaunched::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientInitiallyLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && client_options_ != nullptr) {
    delete client_options_;
  }
  client_options_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientInitiallyLaunched::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientInitiallyLaunched*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientInitiallyLaunched.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.ClientOptions client_options = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::ClientOptions::_InternalParse;
        object = msg->mutable_client_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientInitiallyLaunched::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientInitiallyLaunched)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientInitiallyLaunched.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.ClientOptions client_options = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientInitiallyLaunched)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientInitiallyLaunched)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientInitiallyLaunched::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientInitiallyLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientInitiallyLaunched.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_server(), output);
  }

  // .eve_launcher.ClientOptions client_options = 3;
  if (this->has_client_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::client_options(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientInitiallyLaunched)
}

::google::protobuf::uint8* ClientInitiallyLaunched::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientInitiallyLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientInitiallyLaunched.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_server(), target);
  }

  // .eve_launcher.ClientOptions client_options = 3;
  if (this->has_client_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::client_options(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientInitiallyLaunched)
  return target;
}

size_t ClientInitiallyLaunched::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientInitiallyLaunched)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // .eve_launcher.ClientOptions client_options = 3;
  if (this->has_client_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientInitiallyLaunched::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientInitiallyLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientInitiallyLaunched* source =
      ::google::protobuf::DynamicCastToGenerated<ClientInitiallyLaunched>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientInitiallyLaunched)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientInitiallyLaunched)
    MergeFrom(*source);
  }
}

void ClientInitiallyLaunched::MergeFrom(const ClientInitiallyLaunched& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientInitiallyLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.has_client_options()) {
    mutable_client_options()->::eve_launcher::ClientOptions::MergeFrom(from.client_options());
  }
}

void ClientInitiallyLaunched::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientInitiallyLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientInitiallyLaunched::CopyFrom(const ClientInitiallyLaunched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientInitiallyLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientInitiallyLaunched::IsInitialized() const {
  return true;
}

void ClientInitiallyLaunched::Swap(ClientInitiallyLaunched* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientInitiallyLaunched::InternalSwap(ClientInitiallyLaunched* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_options_, other->client_options_);
}

::google::protobuf::Metadata ClientInitiallyLaunched::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientLaunched::InitAsDefaultInstance() {
  ::eve_launcher::_ClientLaunched_default_instance_._instance.get_mutable()->client_options_ = const_cast< ::eve_launcher::ClientOptions*>(
      ::eve_launcher::ClientOptions::internal_default_instance());
  ::eve_launcher::_ClientLaunched_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::eve_launcher::user::Identifier*>(
      ::eve_launcher::user::Identifier::internal_default_instance());
}
class ClientLaunched::HasBitSetters {
 public:
  static const ::eve_launcher::ClientOptions& client_options(const ClientLaunched* msg);
  static const ::eve_launcher::user::Identifier& user_id(const ClientLaunched* msg);
};

const ::eve_launcher::ClientOptions&
ClientLaunched::HasBitSetters::client_options(const ClientLaunched* msg) {
  return *msg->client_options_;
}
const ::eve_launcher::user::Identifier&
ClientLaunched::HasBitSetters::user_id(const ClientLaunched* msg) {
  return *msg->user_id_;
}
void ClientLaunched::clear_user_id() {
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLaunched::kTargetServerFieldNumber;
const int ClientLaunched::kClientOptionsFieldNumber;
const int ClientLaunched::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLaunched::ClientLaunched()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientLaunched)
}
ClientLaunched::ClientLaunched(const ClientLaunched& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.has_client_options()) {
    client_options_ = new ::eve_launcher::ClientOptions(*from.client_options_);
  } else {
    client_options_ = nullptr;
  }
  if (from.has_user_id()) {
    user_id_ = new ::eve_launcher::user::Identifier(*from.user_id_);
  } else {
    user_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientLaunched)
}

void ClientLaunched::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientLaunched_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&client_options_)) + sizeof(user_id_));
}

ClientLaunched::~ClientLaunched() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientLaunched)
  SharedDtor();
}

void ClientLaunched::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_options_;
  if (this != internal_default_instance()) delete user_id_;
}

void ClientLaunched::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientLaunched& ClientLaunched::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientLaunched_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientLaunched::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && client_options_ != nullptr) {
    delete client_options_;
  }
  client_options_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientLaunched::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientLaunched*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientLaunched.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.ClientOptions client_options = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::ClientOptions::_InternalParse;
        object = msg->mutable_client_options();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .eve_launcher.user.Identifier user_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
        object = msg->mutable_user_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientLaunched::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientLaunched)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientLaunched.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.ClientOptions client_options = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.user.Identifier user_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientLaunched)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientLaunched)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientLaunched::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientLaunched.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_server(), output);
  }

  // .eve_launcher.ClientOptions client_options = 3;
  if (this->has_client_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::client_options(this), output);
  }

  // .eve_launcher.user.Identifier user_id = 4;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::user_id(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientLaunched)
}

::google::protobuf::uint8* ClientLaunched::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientLaunched.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_server(), target);
  }

  // .eve_launcher.ClientOptions client_options = 3;
  if (this->has_client_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::client_options(this), target);
  }

  // .eve_launcher.user.Identifier user_id = 4;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::user_id(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientLaunched)
  return target;
}

size_t ClientLaunched::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientLaunched)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // .eve_launcher.ClientOptions client_options = 3;
  if (this->has_client_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_options_);
  }

  // .eve_launcher.user.Identifier user_id = 4;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientLaunched::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLaunched* source =
      ::google::protobuf::DynamicCastToGenerated<ClientLaunched>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientLaunched)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientLaunched)
    MergeFrom(*source);
  }
}

void ClientLaunched::MergeFrom(const ClientLaunched& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.has_client_options()) {
    mutable_client_options()->::eve_launcher::ClientOptions::MergeFrom(from.client_options());
  }
  if (from.has_user_id()) {
    mutable_user_id()->::eve_launcher::user::Identifier::MergeFrom(from.user_id());
  }
}

void ClientLaunched::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLaunched::CopyFrom(const ClientLaunched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLaunched::IsInitialized() const {
  return true;
}

void ClientLaunched::Swap(ClientLaunched* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLaunched::InternalSwap(ClientLaunched* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(client_options_, other->client_options_);
  swap(user_id_, other->user_id_);
}

::google::protobuf::Metadata ClientLaunched::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientCrashed::InitAsDefaultInstance() {
  ::eve_launcher::_ClientCrashed_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::eve_launcher::user::Identifier*>(
      ::eve_launcher::user::Identifier::internal_default_instance());
}
class ClientCrashed::HasBitSetters {
 public:
  static const ::eve_launcher::user::Identifier& user_id(const ClientCrashed* msg);
};

const ::eve_launcher::user::Identifier&
ClientCrashed::HasBitSetters::user_id(const ClientCrashed* msg) {
  return *msg->user_id_;
}
void ClientCrashed::clear_user_id() {
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCrashed::kServerFieldNumber;
const int ClientCrashed::kUserIdFieldNumber;
const int ClientCrashed::kExitCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCrashed::ClientCrashed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientCrashed)
}
ClientCrashed::ClientCrashed(const ClientCrashed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    user_id_ = new ::eve_launcher::user::Identifier(*from.user_id_);
  } else {
    user_id_ = nullptr;
  }
  exit_code_ = from.exit_code_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientCrashed)
}

void ClientCrashed::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientCrashed_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exit_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(exit_code_));
}

ClientCrashed::~ClientCrashed() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientCrashed)
  SharedDtor();
}

void ClientCrashed::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_id_;
}

void ClientCrashed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientCrashed& ClientCrashed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientCrashed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientCrashed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientCrashed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
  exit_code_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientCrashed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientCrashed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientCrashed.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.user.Identifier user_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
        object = msg->mutable_user_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 exit_code = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_exit_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientCrashed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientCrashed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientCrashed.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.user.Identifier user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exit_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exit_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientCrashed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientCrashed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientCrashed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientCrashed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientCrashed.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server(), output);
  }

  // .eve_launcher.user.Identifier user_id = 2;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::user_id(this), output);
  }

  // int32 exit_code = 3;
  if (this->exit_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exit_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientCrashed)
}

::google::protobuf::uint8* ClientCrashed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientCrashed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientCrashed.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server(), target);
  }

  // .eve_launcher.user.Identifier user_id = 2;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::user_id(this), target);
  }

  // int32 exit_code = 3;
  if (this->exit_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exit_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientCrashed)
  return target;
}

size_t ClientCrashed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientCrashed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // .eve_launcher.user.Identifier user_id = 2;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // int32 exit_code = 3;
  if (this->exit_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exit_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientCrashed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientCrashed)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCrashed* source =
      ::google::protobuf::DynamicCastToGenerated<ClientCrashed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientCrashed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientCrashed)
    MergeFrom(*source);
  }
}

void ClientCrashed::MergeFrom(const ClientCrashed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientCrashed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    mutable_user_id()->::eve_launcher::user::Identifier::MergeFrom(from.user_id());
  }
  if (from.exit_code() != 0) {
    set_exit_code(from.exit_code());
  }
}

void ClientCrashed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientCrashed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCrashed::CopyFrom(const ClientCrashed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientCrashed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCrashed::IsInitialized() const {
  return true;
}

void ClientCrashed::Swap(ClientCrashed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCrashed::InternalSwap(ClientCrashed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  swap(exit_code_, other->exit_code_);
}

::google::protobuf::Metadata ClientCrashed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientShutdown::InitAsDefaultInstance() {
  ::eve_launcher::_ClientShutdown_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::eve_launcher::user::Identifier*>(
      ::eve_launcher::user::Identifier::internal_default_instance());
}
class ClientShutdown::HasBitSetters {
 public:
  static const ::eve_launcher::user::Identifier& user_id(const ClientShutdown* msg);
};

const ::eve_launcher::user::Identifier&
ClientShutdown::HasBitSetters::user_id(const ClientShutdown* msg) {
  return *msg->user_id_;
}
void ClientShutdown::clear_user_id() {
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientShutdown::kServerFieldNumber;
const int ClientShutdown::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientShutdown::ClientShutdown()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientShutdown)
}
ClientShutdown::ClientShutdown(const ClientShutdown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    user_id_ = new ::eve_launcher::user::Identifier(*from.user_id_);
  } else {
    user_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientShutdown)
}

void ClientShutdown::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientShutdown_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = nullptr;
}

ClientShutdown::~ClientShutdown() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientShutdown)
  SharedDtor();
}

void ClientShutdown::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_id_;
}

void ClientShutdown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientShutdown& ClientShutdown::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientShutdown_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientShutdown::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientShutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientShutdown::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientShutdown*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientShutdown.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.user.Identifier user_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
        object = msg->mutable_user_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientShutdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientShutdown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientShutdown.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.user.Identifier user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientShutdown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientShutdown)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientShutdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientShutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientShutdown.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server(), output);
  }

  // .eve_launcher.user.Identifier user_id = 2;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::user_id(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientShutdown)
}

::google::protobuf::uint8* ClientShutdown::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientShutdown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientShutdown.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server(), target);
  }

  // .eve_launcher.user.Identifier user_id = 2;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::user_id(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientShutdown)
  return target;
}

size_t ClientShutdown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientShutdown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // .eve_launcher.user.Identifier user_id = 2;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientShutdown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientShutdown)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientShutdown* source =
      ::google::protobuf::DynamicCastToGenerated<ClientShutdown>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientShutdown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientShutdown)
    MergeFrom(*source);
  }
}

void ClientShutdown::MergeFrom(const ClientShutdown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientShutdown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    mutable_user_id()->::eve_launcher::user::Identifier::MergeFrom(from.user_id());
  }
}

void ClientShutdown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientShutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientShutdown::CopyFrom(const ClientShutdown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientShutdown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientShutdown::IsInitialized() const {
  return true;
}

void ClientShutdown::Swap(ClientShutdown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientShutdown::InternalSwap(ClientShutdown* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
}

::google::protobuf::Metadata ClientShutdown::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReleaseWineLaunched::InitAsDefaultInstance() {
  ::eve_launcher::_ReleaseWineLaunched_default_instance_._instance.get_mutable()->os_ = const_cast< ::eve_launcher::OS*>(
      ::eve_launcher::OS::internal_default_instance());
}
class ReleaseWineLaunched::HasBitSetters {
 public:
  static const ::eve_launcher::OS& os(const ReleaseWineLaunched* msg);
};

const ::eve_launcher::OS&
ReleaseWineLaunched::HasBitSetters::os(const ReleaseWineLaunched* msg) {
  return *msg->os_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReleaseWineLaunched::kTargetServerFieldNumber;
const int ReleaseWineLaunched::kWineBuildFieldNumber;
const int ReleaseWineLaunched::kOsFieldNumber;
const int ReleaseWineLaunched::kDirectxModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReleaseWineLaunched::ReleaseWineLaunched()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ReleaseWineLaunched)
}
ReleaseWineLaunched::ReleaseWineLaunched(const ReleaseWineLaunched& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  wine_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wine_build().size() > 0) {
    wine_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wine_build_);
  }
  if (from.has_os()) {
    os_ = new ::eve_launcher::OS(*from.os_);
  } else {
    os_ = nullptr;
  }
  directx_mode_ = from.directx_mode_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ReleaseWineLaunched)
}

void ReleaseWineLaunched::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReleaseWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&os_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&directx_mode_) -
      reinterpret_cast<char*>(&os_)) + sizeof(directx_mode_));
}

ReleaseWineLaunched::~ReleaseWineLaunched() {
  // @@protoc_insertion_point(destructor:eve_launcher.ReleaseWineLaunched)
  SharedDtor();
}

void ReleaseWineLaunched::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete os_;
}

void ReleaseWineLaunched::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReleaseWineLaunched& ReleaseWineLaunched::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReleaseWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ReleaseWineLaunched::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ReleaseWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && os_ != nullptr) {
    delete os_;
  }
  os_ = nullptr;
  directx_mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReleaseWineLaunched::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReleaseWineLaunched*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ReleaseWineLaunched.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string wine_build = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ReleaseWineLaunched.wine_build");
        object = msg->mutable_wine_build();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.OS os = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::OS::_InternalParse;
        object = msg->mutable_os();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .eve_launcher.graphics.DirectXMode directx_mode = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_directx_mode(static_cast<::eve_launcher::graphics::DirectXMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReleaseWineLaunched::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ReleaseWineLaunched)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ReleaseWineLaunched.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wine_build = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wine_build()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wine_build().data(), static_cast<int>(this->wine_build().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ReleaseWineLaunched.wine_build"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.OS os = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_os()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.graphics.DirectXMode directx_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_directx_mode(static_cast< ::eve_launcher::graphics::DirectXMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ReleaseWineLaunched)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ReleaseWineLaunched)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReleaseWineLaunched::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ReleaseWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ReleaseWineLaunched.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_server(), output);
  }

  // string wine_build = 3;
  if (this->wine_build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wine_build().data(), static_cast<int>(this->wine_build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ReleaseWineLaunched.wine_build");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->wine_build(), output);
  }

  // .eve_launcher.OS os = 4;
  if (this->has_os()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::os(this), output);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 5;
  if (this->directx_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->directx_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ReleaseWineLaunched)
}

::google::protobuf::uint8* ReleaseWineLaunched::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ReleaseWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ReleaseWineLaunched.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_server(), target);
  }

  // string wine_build = 3;
  if (this->wine_build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wine_build().data(), static_cast<int>(this->wine_build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ReleaseWineLaunched.wine_build");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->wine_build(), target);
  }

  // .eve_launcher.OS os = 4;
  if (this->has_os()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::os(this), target);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 5;
  if (this->directx_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->directx_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ReleaseWineLaunched)
  return target;
}

size_t ReleaseWineLaunched::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ReleaseWineLaunched)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // string wine_build = 3;
  if (this->wine_build().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wine_build());
  }

  // .eve_launcher.OS os = 4;
  if (this->has_os()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *os_);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 5;
  if (this->directx_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->directx_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReleaseWineLaunched::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ReleaseWineLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  const ReleaseWineLaunched* source =
      ::google::protobuf::DynamicCastToGenerated<ReleaseWineLaunched>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ReleaseWineLaunched)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ReleaseWineLaunched)
    MergeFrom(*source);
  }
}

void ReleaseWineLaunched::MergeFrom(const ReleaseWineLaunched& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ReleaseWineLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.wine_build().size() > 0) {

    wine_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wine_build_);
  }
  if (from.has_os()) {
    mutable_os()->::eve_launcher::OS::MergeFrom(from.os());
  }
  if (from.directx_mode() != 0) {
    set_directx_mode(from.directx_mode());
  }
}

void ReleaseWineLaunched::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ReleaseWineLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleaseWineLaunched::CopyFrom(const ReleaseWineLaunched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ReleaseWineLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleaseWineLaunched::IsInitialized() const {
  return true;
}

void ReleaseWineLaunched::Swap(ReleaseWineLaunched* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReleaseWineLaunched::InternalSwap(ReleaseWineLaunched* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wine_build_.Swap(&other->wine_build_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(os_, other->os_);
  swap(directx_mode_, other->directx_mode_);
}

::google::protobuf::Metadata ReleaseWineLaunched::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DevelopmentWineLaunched::InitAsDefaultInstance() {
  ::eve_launcher::_DevelopmentWineLaunched_default_instance_._instance.get_mutable()->os_ = const_cast< ::eve_launcher::OS*>(
      ::eve_launcher::OS::internal_default_instance());
}
class DevelopmentWineLaunched::HasBitSetters {
 public:
  static const ::eve_launcher::OS& os(const DevelopmentWineLaunched* msg);
};

const ::eve_launcher::OS&
DevelopmentWineLaunched::HasBitSetters::os(const DevelopmentWineLaunched* msg) {
  return *msg->os_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DevelopmentWineLaunched::kTargetServerFieldNumber;
const int DevelopmentWineLaunched::kWineBranchFieldNumber;
const int DevelopmentWineLaunched::kWineBuildFieldNumber;
const int DevelopmentWineLaunched::kOsFieldNumber;
const int DevelopmentWineLaunched::kDirectxModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DevelopmentWineLaunched::DevelopmentWineLaunched()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.DevelopmentWineLaunched)
}
DevelopmentWineLaunched::DevelopmentWineLaunched(const DevelopmentWineLaunched& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  wine_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wine_branch().size() > 0) {
    wine_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wine_branch_);
  }
  wine_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.wine_build().size() > 0) {
    wine_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wine_build_);
  }
  if (from.has_os()) {
    os_ = new ::eve_launcher::OS(*from.os_);
  } else {
    os_ = nullptr;
  }
  directx_mode_ = from.directx_mode_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.DevelopmentWineLaunched)
}

void DevelopmentWineLaunched::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DevelopmentWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_branch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&os_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&directx_mode_) -
      reinterpret_cast<char*>(&os_)) + sizeof(directx_mode_));
}

DevelopmentWineLaunched::~DevelopmentWineLaunched() {
  // @@protoc_insertion_point(destructor:eve_launcher.DevelopmentWineLaunched)
  SharedDtor();
}

void DevelopmentWineLaunched::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_branch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete os_;
}

void DevelopmentWineLaunched::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DevelopmentWineLaunched& DevelopmentWineLaunched::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DevelopmentWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void DevelopmentWineLaunched::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.DevelopmentWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_branch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wine_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && os_ != nullptr) {
    delete os_;
  }
  os_ = nullptr;
  directx_mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DevelopmentWineLaunched::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DevelopmentWineLaunched*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.DevelopmentWineLaunched.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string wine_branch = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.DevelopmentWineLaunched.wine_branch");
        object = msg->mutable_wine_branch();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string wine_build = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.DevelopmentWineLaunched.wine_build");
        object = msg->mutable_wine_build();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.OS os = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::OS::_InternalParse;
        object = msg->mutable_os();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .eve_launcher.graphics.DirectXMode directx_mode = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_directx_mode(static_cast<::eve_launcher::graphics::DirectXMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DevelopmentWineLaunched::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.DevelopmentWineLaunched)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.DevelopmentWineLaunched.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wine_branch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wine_branch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wine_branch().data(), static_cast<int>(this->wine_branch().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.DevelopmentWineLaunched.wine_branch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string wine_build = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wine_build()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->wine_build().data(), static_cast<int>(this->wine_build().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.DevelopmentWineLaunched.wine_build"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.OS os = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_os()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.graphics.DirectXMode directx_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_directx_mode(static_cast< ::eve_launcher::graphics::DirectXMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.DevelopmentWineLaunched)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.DevelopmentWineLaunched)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DevelopmentWineLaunched::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.DevelopmentWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DevelopmentWineLaunched.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_server(), output);
  }

  // string wine_branch = 3;
  if (this->wine_branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wine_branch().data(), static_cast<int>(this->wine_branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DevelopmentWineLaunched.wine_branch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->wine_branch(), output);
  }

  // string wine_build = 4;
  if (this->wine_build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wine_build().data(), static_cast<int>(this->wine_build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DevelopmentWineLaunched.wine_build");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->wine_build(), output);
  }

  // .eve_launcher.OS os = 5;
  if (this->has_os()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::os(this), output);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 6;
  if (this->directx_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->directx_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.DevelopmentWineLaunched)
}

::google::protobuf::uint8* DevelopmentWineLaunched::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.DevelopmentWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DevelopmentWineLaunched.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_server(), target);
  }

  // string wine_branch = 3;
  if (this->wine_branch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wine_branch().data(), static_cast<int>(this->wine_branch().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DevelopmentWineLaunched.wine_branch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->wine_branch(), target);
  }

  // string wine_build = 4;
  if (this->wine_build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->wine_build().data(), static_cast<int>(this->wine_build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DevelopmentWineLaunched.wine_build");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->wine_build(), target);
  }

  // .eve_launcher.OS os = 5;
  if (this->has_os()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::os(this), target);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 6;
  if (this->directx_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->directx_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.DevelopmentWineLaunched)
  return target;
}

size_t DevelopmentWineLaunched::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.DevelopmentWineLaunched)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // string wine_branch = 3;
  if (this->wine_branch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wine_branch());
  }

  // string wine_build = 4;
  if (this->wine_build().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wine_build());
  }

  // .eve_launcher.OS os = 5;
  if (this->has_os()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *os_);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 6;
  if (this->directx_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->directx_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DevelopmentWineLaunched::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.DevelopmentWineLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  const DevelopmentWineLaunched* source =
      ::google::protobuf::DynamicCastToGenerated<DevelopmentWineLaunched>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.DevelopmentWineLaunched)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.DevelopmentWineLaunched)
    MergeFrom(*source);
  }
}

void DevelopmentWineLaunched::MergeFrom(const DevelopmentWineLaunched& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.DevelopmentWineLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.wine_branch().size() > 0) {

    wine_branch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wine_branch_);
  }
  if (from.wine_build().size() > 0) {

    wine_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wine_build_);
  }
  if (from.has_os()) {
    mutable_os()->::eve_launcher::OS::MergeFrom(from.os());
  }
  if (from.directx_mode() != 0) {
    set_directx_mode(from.directx_mode());
  }
}

void DevelopmentWineLaunched::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.DevelopmentWineLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DevelopmentWineLaunched::CopyFrom(const DevelopmentWineLaunched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.DevelopmentWineLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DevelopmentWineLaunched::IsInitialized() const {
  return true;
}

void DevelopmentWineLaunched::Swap(DevelopmentWineLaunched* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DevelopmentWineLaunched::InternalSwap(DevelopmentWineLaunched* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wine_branch_.Swap(&other->wine_branch_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  wine_build_.Swap(&other->wine_build_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(os_, other->os_);
  swap(directx_mode_, other->directx_mode_);
}

::google::protobuf::Metadata DevelopmentWineLaunched::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CustomWineLaunched::InitAsDefaultInstance() {
  ::eve_launcher::_CustomWineLaunched_default_instance_._instance.get_mutable()->os_ = const_cast< ::eve_launcher::OS*>(
      ::eve_launcher::OS::internal_default_instance());
}
class CustomWineLaunched::HasBitSetters {
 public:
  static const ::eve_launcher::OS& os(const CustomWineLaunched* msg);
};

const ::eve_launcher::OS&
CustomWineLaunched::HasBitSetters::os(const CustomWineLaunched* msg) {
  return *msg->os_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomWineLaunched::kTargetServerFieldNumber;
const int CustomWineLaunched::kOsFieldNumber;
const int CustomWineLaunched::kDirectxModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomWineLaunched::CustomWineLaunched()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.CustomWineLaunched)
}
CustomWineLaunched::CustomWineLaunched(const CustomWineLaunched& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.has_os()) {
    os_ = new ::eve_launcher::OS(*from.os_);
  } else {
    os_ = nullptr;
  }
  directx_mode_ = from.directx_mode_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.CustomWineLaunched)
}

void CustomWineLaunched::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CustomWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&os_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&directx_mode_) -
      reinterpret_cast<char*>(&os_)) + sizeof(directx_mode_));
}

CustomWineLaunched::~CustomWineLaunched() {
  // @@protoc_insertion_point(destructor:eve_launcher.CustomWineLaunched)
  SharedDtor();
}

void CustomWineLaunched::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete os_;
}

void CustomWineLaunched::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CustomWineLaunched& CustomWineLaunched::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CustomWineLaunched_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void CustomWineLaunched::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.CustomWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && os_ != nullptr) {
    delete os_;
  }
  os_ = nullptr;
  directx_mode_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CustomWineLaunched::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CustomWineLaunched*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.CustomWineLaunched.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.OS os = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::OS::_InternalParse;
        object = msg->mutable_os();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .eve_launcher.graphics.DirectXMode directx_mode = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_directx_mode(static_cast<::eve_launcher::graphics::DirectXMode>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CustomWineLaunched::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.CustomWineLaunched)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.CustomWineLaunched.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.OS os = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_os()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.graphics.DirectXMode directx_mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_directx_mode(static_cast< ::eve_launcher::graphics::DirectXMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.CustomWineLaunched)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.CustomWineLaunched)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CustomWineLaunched::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.CustomWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.CustomWineLaunched.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_server(), output);
  }

  // .eve_launcher.OS os = 3;
  if (this->has_os()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::os(this), output);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 4;
  if (this->directx_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->directx_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.CustomWineLaunched)
}

::google::protobuf::uint8* CustomWineLaunched::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.CustomWineLaunched)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.CustomWineLaunched.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_server(), target);
  }

  // .eve_launcher.OS os = 3;
  if (this->has_os()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::os(this), target);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 4;
  if (this->directx_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->directx_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.CustomWineLaunched)
  return target;
}

size_t CustomWineLaunched::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.CustomWineLaunched)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // .eve_launcher.OS os = 3;
  if (this->has_os()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *os_);
  }

  // .eve_launcher.graphics.DirectXMode directx_mode = 4;
  if (this->directx_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->directx_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomWineLaunched::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.CustomWineLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomWineLaunched* source =
      ::google::protobuf::DynamicCastToGenerated<CustomWineLaunched>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.CustomWineLaunched)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.CustomWineLaunched)
    MergeFrom(*source);
  }
}

void CustomWineLaunched::MergeFrom(const CustomWineLaunched& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.CustomWineLaunched)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.has_os()) {
    mutable_os()->::eve_launcher::OS::MergeFrom(from.os());
  }
  if (from.directx_mode() != 0) {
    set_directx_mode(from.directx_mode());
  }
}

void CustomWineLaunched::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.CustomWineLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomWineLaunched::CopyFrom(const CustomWineLaunched& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.CustomWineLaunched)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomWineLaunched::IsInitialized() const {
  return true;
}

void CustomWineLaunched::Swap(CustomWineLaunched* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomWineLaunched::InternalSwap(CustomWineLaunched* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(os_, other->os_);
  swap(directx_mode_, other->directx_mode_);
}

::google::protobuf::Metadata CustomWineLaunched::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientUpdateStarted::InitAsDefaultInstance() {
}
class ClientUpdateStarted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientUpdateStarted::kTargetServerFieldNumber;
const int ClientUpdateStarted::kTargetVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientUpdateStarted::ClientUpdateStarted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientUpdateStarted)
}
ClientUpdateStarted::ClientUpdateStarted(const ClientUpdateStarted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientUpdateStarted)
}

void ClientUpdateStarted::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientUpdateStarted_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClientUpdateStarted::~ClientUpdateStarted() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientUpdateStarted)
  SharedDtor();
}

void ClientUpdateStarted::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientUpdateStarted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientUpdateStarted& ClientUpdateStarted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientUpdateStarted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientUpdateStarted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientUpdateStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientUpdateStarted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientUpdateStarted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientUpdateStarted.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string target_version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientUpdateStarted.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientUpdateStarted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientUpdateStarted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientUpdateStarted.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientUpdateStarted.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientUpdateStarted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientUpdateStarted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientUpdateStarted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientUpdateStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateStarted.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_server(), output);
  }

  // string target_version = 3;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateStarted.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientUpdateStarted)
}

::google::protobuf::uint8* ClientUpdateStarted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientUpdateStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateStarted.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_server(), target);
  }

  // string target_version = 3;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateStarted.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientUpdateStarted)
  return target;
}

size_t ClientUpdateStarted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientUpdateStarted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // string target_version = 3;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientUpdateStarted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientUpdateStarted)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientUpdateStarted* source =
      ::google::protobuf::DynamicCastToGenerated<ClientUpdateStarted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientUpdateStarted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientUpdateStarted)
    MergeFrom(*source);
  }
}

void ClientUpdateStarted::MergeFrom(const ClientUpdateStarted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientUpdateStarted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
}

void ClientUpdateStarted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientUpdateStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientUpdateStarted::CopyFrom(const ClientUpdateStarted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientUpdateStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientUpdateStarted::IsInitialized() const {
  return true;
}

void ClientUpdateStarted::Swap(ClientUpdateStarted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientUpdateStarted::InternalSwap(ClientUpdateStarted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ClientUpdateStarted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientUpdateCompleted::InitAsDefaultInstance() {
}
class ClientUpdateCompleted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientUpdateCompleted::kTargetServerFieldNumber;
const int ClientUpdateCompleted::kDownloadSpeedFieldNumber;
const int ClientUpdateCompleted::kTargetVersionFieldNumber;
const int ClientUpdateCompleted::kBytesDownloadedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientUpdateCompleted::ClientUpdateCompleted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientUpdateCompleted)
}
ClientUpdateCompleted::ClientUpdateCompleted(const ClientUpdateCompleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  ::memcpy(&bytes_downloaded_, &from.bytes_downloaded_,
    static_cast<size_t>(reinterpret_cast<char*>(&download_speed_) -
    reinterpret_cast<char*>(&bytes_downloaded_)) + sizeof(download_speed_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientUpdateCompleted)
}

void ClientUpdateCompleted::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientUpdateCompleted_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bytes_downloaded_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&bytes_downloaded_)) + sizeof(download_speed_));
}

ClientUpdateCompleted::~ClientUpdateCompleted() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientUpdateCompleted)
  SharedDtor();
}

void ClientUpdateCompleted::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientUpdateCompleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientUpdateCompleted& ClientUpdateCompleted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientUpdateCompleted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientUpdateCompleted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientUpdateCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bytes_downloaded_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&bytes_downloaded_)) + sizeof(download_speed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientUpdateCompleted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientUpdateCompleted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientUpdateCompleted.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float download_speed = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_download_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // string target_version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientUpdateCompleted.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint64 bytes_downloaded = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_bytes_downloaded(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientUpdateCompleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientUpdateCompleted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientUpdateCompleted.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float download_speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &download_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientUpdateCompleted.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes_downloaded = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientUpdateCompleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientUpdateCompleted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientUpdateCompleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientUpdateCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateCompleted.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_server(), output);
  }

  // float download_speed = 3;
  if (this->download_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->download_speed(), output);
  }

  // string target_version = 4;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateCompleted.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->target_version(), output);
  }

  // uint64 bytes_downloaded = 5;
  if (this->bytes_downloaded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bytes_downloaded(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientUpdateCompleted)
}

::google::protobuf::uint8* ClientUpdateCompleted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientUpdateCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateCompleted.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_server(), target);
  }

  // float download_speed = 3;
  if (this->download_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->download_speed(), target);
  }

  // string target_version = 4;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateCompleted.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->target_version(), target);
  }

  // uint64 bytes_downloaded = 5;
  if (this->bytes_downloaded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bytes_downloaded(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientUpdateCompleted)
  return target;
}

size_t ClientUpdateCompleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientUpdateCompleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 2;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // string target_version = 4;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  // uint64 bytes_downloaded = 5;
  if (this->bytes_downloaded() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes_downloaded());
  }

  // float download_speed = 3;
  if (this->download_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientUpdateCompleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientUpdateCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientUpdateCompleted* source =
      ::google::protobuf::DynamicCastToGenerated<ClientUpdateCompleted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientUpdateCompleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientUpdateCompleted)
    MergeFrom(*source);
  }
}

void ClientUpdateCompleted::MergeFrom(const ClientUpdateCompleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientUpdateCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  if (from.bytes_downloaded() != 0) {
    set_bytes_downloaded(from.bytes_downloaded());
  }
  if (from.download_speed() != 0) {
    set_download_speed(from.download_speed());
  }
}

void ClientUpdateCompleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientUpdateCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientUpdateCompleted::CopyFrom(const ClientUpdateCompleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientUpdateCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientUpdateCompleted::IsInitialized() const {
  return true;
}

void ClientUpdateCompleted::Swap(ClientUpdateCompleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientUpdateCompleted::InternalSwap(ClientUpdateCompleted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bytes_downloaded_, other->bytes_downloaded_);
  swap(download_speed_, other->download_speed_);
}

::google::protobuf::Metadata ClientUpdateCompleted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientUpdateFailed::InitAsDefaultInstance() {
}
class ClientUpdateFailed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientUpdateFailed::kErrorCodeFieldNumber;
const int ClientUpdateFailed::kTargetServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientUpdateFailed::ClientUpdateFailed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.ClientUpdateFailed)
}
ClientUpdateFailed::ClientUpdateFailed(const ClientUpdateFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_server().size() > 0) {
    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.ClientUpdateFailed)
}

void ClientUpdateFailed::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  target_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

ClientUpdateFailed::~ClientUpdateFailed() {
  // @@protoc_insertion_point(destructor:eve_launcher.ClientUpdateFailed)
  SharedDtor();
}

void ClientUpdateFailed::SharedDtor() {
  target_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientUpdateFailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientUpdateFailed& ClientUpdateFailed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void ClientUpdateFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.ClientUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientUpdateFailed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientUpdateFailed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_error_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string target_server = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.ClientUpdateFailed.target_server");
        object = msg->mutable_target_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientUpdateFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.ClientUpdateFailed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_server = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_server().data(), static_cast<int>(this->target_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.ClientUpdateFailed.target_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.ClientUpdateFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.ClientUpdateFailed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientUpdateFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.ClientUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  // string target_server = 3;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateFailed.target_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target_server(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.ClientUpdateFailed)
}

::google::protobuf::uint8* ClientUpdateFailed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.ClientUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  // string target_server = 3;
  if (this->target_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_server().data(), static_cast<int>(this->target_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.ClientUpdateFailed.target_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target_server(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.ClientUpdateFailed)
  return target;
}

size_t ClientUpdateFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.ClientUpdateFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_server = 3;
  if (this->target_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_server());
  }

  // uint32 error_code = 2;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientUpdateFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.ClientUpdateFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientUpdateFailed* source =
      ::google::protobuf::DynamicCastToGenerated<ClientUpdateFailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.ClientUpdateFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.ClientUpdateFailed)
    MergeFrom(*source);
  }
}

void ClientUpdateFailed::MergeFrom(const ClientUpdateFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.ClientUpdateFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_server().size() > 0) {

    target_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_server_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void ClientUpdateFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.ClientUpdateFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientUpdateFailed::CopyFrom(const ClientUpdateFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.ClientUpdateFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientUpdateFailed::IsInitialized() const {
  return true;
}

void ClientUpdateFailed::Swap(ClientUpdateFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientUpdateFailed::InternalSwap(ClientUpdateFailed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_server_.Swap(&other->target_server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
}

::google::protobuf::Metadata ClientUpdateFailed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WebLoaded::InitAsDefaultInstance() {
}
class WebLoaded::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebLoaded::kUsersFieldNumber;
const int WebLoaded::kLauncherStartedFromFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebLoaded::WebLoaded()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.WebLoaded)
}
WebLoaded::WebLoaded(const WebLoaded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      users_(from.users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  launcher_started_from_ = from.launcher_started_from_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.WebLoaded)
}

void WebLoaded::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WebLoaded_eve_5flauncher_2flauncher_2eproto.base);
  launcher_started_from_ = 0;
}

WebLoaded::~WebLoaded() {
  // @@protoc_insertion_point(destructor:eve_launcher.WebLoaded)
  SharedDtor();
}

void WebLoaded::SharedDtor() {
}

void WebLoaded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WebLoaded& WebLoaded::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WebLoaded_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void WebLoaded::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.WebLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  launcher_started_from_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WebLoaded::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WebLoaded*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .eve_launcher.UsersOnServer users = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::eve_launcher::UsersOnServer::_InternalParse;
          object = msg->add_users();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .eve_launcher.WebLoaded.Platform launcher_started_from = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_launcher_started_from(static_cast<::eve_launcher::WebLoaded_Platform>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WebLoaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.WebLoaded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .eve_launcher.UsersOnServer users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.WebLoaded.Platform launcher_started_from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_launcher_started_from(static_cast< ::eve_launcher::WebLoaded_Platform >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.WebLoaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.WebLoaded)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WebLoaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.WebLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .eve_launcher.UsersOnServer users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->users(static_cast<int>(i)),
      output);
  }

  // .eve_launcher.WebLoaded.Platform launcher_started_from = 2;
  if (this->launcher_started_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->launcher_started_from(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.WebLoaded)
}

::google::protobuf::uint8* WebLoaded::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.WebLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .eve_launcher.UsersOnServer users = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->users(static_cast<int>(i)), target);
  }

  // .eve_launcher.WebLoaded.Platform launcher_started_from = 2;
  if (this->launcher_started_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->launcher_started_from(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.WebLoaded)
  return target;
}

size_t WebLoaded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.WebLoaded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .eve_launcher.UsersOnServer users = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // .eve_launcher.WebLoaded.Platform launcher_started_from = 2;
  if (this->launcher_started_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->launcher_started_from());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WebLoaded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.WebLoaded)
  GOOGLE_DCHECK_NE(&from, this);
  const WebLoaded* source =
      ::google::protobuf::DynamicCastToGenerated<WebLoaded>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.WebLoaded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.WebLoaded)
    MergeFrom(*source);
  }
}

void WebLoaded::MergeFrom(const WebLoaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.WebLoaded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.launcher_started_from() != 0) {
    set_launcher_started_from(from.launcher_started_from());
  }
}

void WebLoaded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.WebLoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebLoaded::CopyFrom(const WebLoaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.WebLoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebLoaded::IsInitialized() const {
  return true;
}

void WebLoaded::Swap(WebLoaded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WebLoaded::InternalSwap(WebLoaded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  swap(launcher_started_from_, other->launcher_started_from_);
}

::google::protobuf::Metadata WebLoaded::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginCancelled::InitAsDefaultInstance() {
}
class LoginCancelled::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginCancelled::LoginCancelled()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LoginCancelled)
}
LoginCancelled::LoginCancelled(const LoginCancelled& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LoginCancelled)
}

void LoginCancelled::SharedCtor() {
}

LoginCancelled::~LoginCancelled() {
  // @@protoc_insertion_point(destructor:eve_launcher.LoginCancelled)
  SharedDtor();
}

void LoginCancelled::SharedDtor() {
}

void LoginCancelled::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginCancelled& LoginCancelled::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginCancelled_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LoginCancelled::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LoginCancelled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginCancelled::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginCancelled*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginCancelled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LoginCancelled)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LoginCancelled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LoginCancelled)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginCancelled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LoginCancelled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LoginCancelled)
}

::google::protobuf::uint8* LoginCancelled::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LoginCancelled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LoginCancelled)
  return target;
}

size_t LoginCancelled::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LoginCancelled)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginCancelled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LoginCancelled)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginCancelled* source =
      ::google::protobuf::DynamicCastToGenerated<LoginCancelled>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LoginCancelled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LoginCancelled)
    MergeFrom(*source);
  }
}

void LoginCancelled::MergeFrom(const LoginCancelled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LoginCancelled)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LoginCancelled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LoginCancelled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginCancelled::CopyFrom(const LoginCancelled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LoginCancelled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginCancelled::IsInitialized() const {
  return true;
}

void LoginCancelled::Swap(LoginCancelled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginCancelled::InternalSwap(LoginCancelled* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginCancelled::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginFailed::InitAsDefaultInstance() {
}
class LoginFailed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginFailed::kServerFieldNumber;
const int LoginFailed::kErrorTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginFailed::LoginFailed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LoginFailed)
}
LoginFailed::LoginFailed(const LoginFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  error_type_ = from.error_type_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LoginFailed)
}

void LoginFailed::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginFailed_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_type_ = 0;
}

LoginFailed::~LoginFailed() {
  // @@protoc_insertion_point(destructor:eve_launcher.LoginFailed)
  SharedDtor();
}

void LoginFailed::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginFailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginFailed& LoginFailed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginFailed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LoginFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LoginFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginFailed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginFailed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.LoginFailed.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.LoginFailed.LoginErrorType error_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_error_type(static_cast<::eve_launcher::LoginFailed_LoginErrorType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LoginFailed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.LoginFailed.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.LoginFailed.LoginErrorType error_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_type(static_cast< ::eve_launcher::LoginFailed_LoginErrorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LoginFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LoginFailed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LoginFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LoginFailed.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server(), output);
  }

  // .eve_launcher.LoginFailed.LoginErrorType error_type = 2;
  if (this->error_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LoginFailed)
}

::google::protobuf::uint8* LoginFailed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LoginFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LoginFailed.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server(), target);
  }

  // .eve_launcher.LoginFailed.LoginErrorType error_type = 2;
  if (this->error_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LoginFailed)
  return target;
}

size_t LoginFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LoginFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // .eve_launcher.LoginFailed.LoginErrorType error_type = 2;
  if (this->error_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LoginFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginFailed* source =
      ::google::protobuf::DynamicCastToGenerated<LoginFailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LoginFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LoginFailed)
    MergeFrom(*source);
  }
}

void LoginFailed::MergeFrom(const LoginFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LoginFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.error_type() != 0) {
    set_error_type(from.error_type());
  }
}

void LoginFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LoginFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginFailed::CopyFrom(const LoginFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LoginFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginFailed::IsInitialized() const {
  return true;
}

void LoginFailed::Swap(LoginFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginFailed::InternalSwap(LoginFailed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_type_, other->error_type_);
}

::google::protobuf::Metadata LoginFailed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserAdded::InitAsDefaultInstance() {
  ::eve_launcher::_UserAdded_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::eve_launcher::user::Identifier*>(
      ::eve_launcher::user::Identifier::internal_default_instance());
}
class UserAdded::HasBitSetters {
 public:
  static const ::eve_launcher::user::Identifier& user_id(const UserAdded* msg);
};

const ::eve_launcher::user::Identifier&
UserAdded::HasBitSetters::user_id(const UserAdded* msg) {
  return *msg->user_id_;
}
void UserAdded::clear_user_id() {
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserAdded::kUserIdFieldNumber;
const int UserAdded::kServerFieldNumber;
const int UserAdded::kRememberTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserAdded::UserAdded()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UserAdded)
}
UserAdded::UserAdded(const UserAdded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    user_id_ = new ::eve_launcher::user::Identifier(*from.user_id_);
  } else {
    user_id_ = nullptr;
  }
  remember_type_ = from.remember_type_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UserAdded)
}

void UserAdded::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserAdded_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remember_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(remember_type_));
}

UserAdded::~UserAdded() {
  // @@protoc_insertion_point(destructor:eve_launcher.UserAdded)
  SharedDtor();
}

void UserAdded::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_id_;
}

void UserAdded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserAdded& UserAdded::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserAdded_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UserAdded::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UserAdded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
  remember_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserAdded::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserAdded*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .eve_launcher.user.Identifier user_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
        object = msg->mutable_user_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.UserAdded.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.UserAdded.RememberType remember_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_remember_type(static_cast<::eve_launcher::UserAdded_RememberType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserAdded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UserAdded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_launcher.user.Identifier user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.UserAdded.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.UserAdded.RememberType remember_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_remember_type(static_cast< ::eve_launcher::UserAdded_RememberType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UserAdded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UserAdded)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserAdded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UserAdded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.user.Identifier user_id = 1;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::user_id(this), output);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UserAdded.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server(), output);
  }

  // .eve_launcher.UserAdded.RememberType remember_type = 3;
  if (this->remember_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->remember_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UserAdded)
}

::google::protobuf::uint8* UserAdded::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UserAdded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.user.Identifier user_id = 1;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::user_id(this), target);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UserAdded.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server(), target);
  }

  // .eve_launcher.UserAdded.RememberType remember_type = 3;
  if (this->remember_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->remember_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UserAdded)
  return target;
}

size_t UserAdded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UserAdded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 2;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // .eve_launcher.user.Identifier user_id = 1;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // .eve_launcher.UserAdded.RememberType remember_type = 3;
  if (this->remember_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->remember_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserAdded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UserAdded)
  GOOGLE_DCHECK_NE(&from, this);
  const UserAdded* source =
      ::google::protobuf::DynamicCastToGenerated<UserAdded>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UserAdded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UserAdded)
    MergeFrom(*source);
  }
}

void UserAdded::MergeFrom(const UserAdded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UserAdded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    mutable_user_id()->::eve_launcher::user::Identifier::MergeFrom(from.user_id());
  }
  if (from.remember_type() != 0) {
    set_remember_type(from.remember_type());
  }
}

void UserAdded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UserAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserAdded::CopyFrom(const UserAdded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UserAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserAdded::IsInitialized() const {
  return true;
}

void UserAdded::Swap(UserAdded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserAdded::InternalSwap(UserAdded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  swap(remember_type_, other->remember_type_);
}

::google::protobuf::Metadata UserAdded::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UsersRemoved::InitAsDefaultInstance() {
}
class UsersRemoved::HasBitSetters {
 public:
};

void UsersRemoved::clear_user_ids() {
  user_ids_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsersRemoved::kUserIdsFieldNumber;
const int UsersRemoved::kServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsersRemoved::UsersRemoved()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UsersRemoved)
}
UsersRemoved::UsersRemoved(const UsersRemoved& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      user_ids_(from.user_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UsersRemoved)
}

void UsersRemoved::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UsersRemoved_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UsersRemoved::~UsersRemoved() {
  // @@protoc_insertion_point(destructor:eve_launcher.UsersRemoved)
  SharedDtor();
}

void UsersRemoved::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UsersRemoved::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UsersRemoved& UsersRemoved::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UsersRemoved_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UsersRemoved::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UsersRemoved)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_ids_.Clear();
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UsersRemoved::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UsersRemoved*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .eve_launcher.user.Identifier user_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
          object = msg->add_user_ids();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.UsersRemoved.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UsersRemoved::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UsersRemoved)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .eve_launcher.user.Identifier user_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.UsersRemoved.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UsersRemoved)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UsersRemoved)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UsersRemoved::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UsersRemoved)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .eve_launcher.user.Identifier user_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->user_ids(static_cast<int>(i)),
      output);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UsersRemoved.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UsersRemoved)
}

::google::protobuf::uint8* UsersRemoved::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UsersRemoved)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .eve_launcher.user.Identifier user_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->user_ids(static_cast<int>(i)), target);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UsersRemoved.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UsersRemoved)
  return target;
}

size_t UsersRemoved::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UsersRemoved)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .eve_launcher.user.Identifier user_ids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->user_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_ids(static_cast<int>(i)));
    }
  }

  // string server = 2;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsersRemoved::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UsersRemoved)
  GOOGLE_DCHECK_NE(&from, this);
  const UsersRemoved* source =
      ::google::protobuf::DynamicCastToGenerated<UsersRemoved>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UsersRemoved)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UsersRemoved)
    MergeFrom(*source);
  }
}

void UsersRemoved::MergeFrom(const UsersRemoved& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UsersRemoved)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_ids_.MergeFrom(from.user_ids_);
  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
}

void UsersRemoved::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UsersRemoved)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsersRemoved::CopyFrom(const UsersRemoved& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UsersRemoved)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsersRemoved::IsInitialized() const {
  return true;
}

void UsersRemoved::Swap(UsersRemoved* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsersRemoved::InternalSwap(UsersRemoved* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&user_ids_)->InternalSwap(CastToBase(&other->user_ids_));
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata UsersRemoved::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlayButtonClicked::InitAsDefaultInstance() {
}
class PlayButtonClicked::HasBitSetters {
 public:
};

void PlayButtonClicked::clear_user_ids() {
  user_ids_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayButtonClicked::kSourceButtonFieldNumber;
const int PlayButtonClicked::kServerFieldNumber;
const int PlayButtonClicked::kUserIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayButtonClicked::PlayButtonClicked()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.PlayButtonClicked)
}
PlayButtonClicked::PlayButtonClicked(const PlayButtonClicked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      user_ids_(from.user_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  source_button_ = from.source_button_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.PlayButtonClicked)
}

void PlayButtonClicked::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlayButtonClicked_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_button_ = 0;
}

PlayButtonClicked::~PlayButtonClicked() {
  // @@protoc_insertion_point(destructor:eve_launcher.PlayButtonClicked)
  SharedDtor();
}

void PlayButtonClicked::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayButtonClicked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayButtonClicked& PlayButtonClicked::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlayButtonClicked_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void PlayButtonClicked::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.PlayButtonClicked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_ids_.Clear();
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_button_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlayButtonClicked::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlayButtonClicked*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .eve_launcher.PlayButtonClicked.PlayButton source_button = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_source_button(static_cast<::eve_launcher::PlayButtonClicked_PlayButton>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.PlayButtonClicked.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .eve_launcher.user.Identifier user_ids = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
          object = msg->add_user_ids();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlayButtonClicked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.PlayButtonClicked)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_launcher.PlayButtonClicked.PlayButton source_button = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_source_button(static_cast< ::eve_launcher::PlayButtonClicked_PlayButton >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.PlayButtonClicked.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_launcher.user.Identifier user_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.PlayButtonClicked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.PlayButtonClicked)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlayButtonClicked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.PlayButtonClicked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.PlayButtonClicked.PlayButton source_button = 1;
  if (this->source_button() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->source_button(), output);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.PlayButtonClicked.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server(), output);
  }

  // repeated .eve_launcher.user.Identifier user_ids = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->user_ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.PlayButtonClicked)
}

::google::protobuf::uint8* PlayButtonClicked::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.PlayButtonClicked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.PlayButtonClicked.PlayButton source_button = 1;
  if (this->source_button() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->source_button(), target);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.PlayButtonClicked.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server(), target);
  }

  // repeated .eve_launcher.user.Identifier user_ids = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->user_ids(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.PlayButtonClicked)
  return target;
}

size_t PlayButtonClicked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.PlayButtonClicked)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .eve_launcher.user.Identifier user_ids = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->user_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_ids(static_cast<int>(i)));
    }
  }

  // string server = 2;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // .eve_launcher.PlayButtonClicked.PlayButton source_button = 1;
  if (this->source_button() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_button());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayButtonClicked::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.PlayButtonClicked)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayButtonClicked* source =
      ::google::protobuf::DynamicCastToGenerated<PlayButtonClicked>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.PlayButtonClicked)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.PlayButtonClicked)
    MergeFrom(*source);
  }
}

void PlayButtonClicked::MergeFrom(const PlayButtonClicked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.PlayButtonClicked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_ids_.MergeFrom(from.user_ids_);
  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.source_button() != 0) {
    set_source_button(from.source_button());
  }
}

void PlayButtonClicked::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.PlayButtonClicked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayButtonClicked::CopyFrom(const PlayButtonClicked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.PlayButtonClicked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayButtonClicked::IsInitialized() const {
  return true;
}

void PlayButtonClicked::Swap(PlayButtonClicked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayButtonClicked::InternalSwap(PlayButtonClicked* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&user_ids_)->InternalSwap(CastToBase(&other->user_ids_));
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_button_, other->source_button_);
}

::google::protobuf::Metadata PlayButtonClicked::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginButtonClicked::InitAsDefaultInstance() {
}
class LoginButtonClicked::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginButtonClicked::kServerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginButtonClicked::LoginButtonClicked()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LoginButtonClicked)
}
LoginButtonClicked::LoginButtonClicked(const LoginButtonClicked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LoginButtonClicked)
}

void LoginButtonClicked::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginButtonClicked_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginButtonClicked::~LoginButtonClicked() {
  // @@protoc_insertion_point(destructor:eve_launcher.LoginButtonClicked)
  SharedDtor();
}

void LoginButtonClicked::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginButtonClicked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginButtonClicked& LoginButtonClicked::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginButtonClicked_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LoginButtonClicked::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LoginButtonClicked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginButtonClicked::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginButtonClicked*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string server = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.LoginButtonClicked.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginButtonClicked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LoginButtonClicked)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.LoginButtonClicked.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LoginButtonClicked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LoginButtonClicked)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginButtonClicked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LoginButtonClicked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LoginButtonClicked.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LoginButtonClicked)
}

::google::protobuf::uint8* LoginButtonClicked::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LoginButtonClicked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LoginButtonClicked.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LoginButtonClicked)
  return target;
}

size_t LoginButtonClicked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LoginButtonClicked)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginButtonClicked::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LoginButtonClicked)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginButtonClicked* source =
      ::google::protobuf::DynamicCastToGenerated<LoginButtonClicked>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LoginButtonClicked)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LoginButtonClicked)
    MergeFrom(*source);
  }
}

void LoginButtonClicked::MergeFrom(const LoginButtonClicked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LoginButtonClicked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
}

void LoginButtonClicked::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LoginButtonClicked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginButtonClicked::CopyFrom(const LoginButtonClicked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LoginButtonClicked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginButtonClicked::IsInitialized() const {
  return true;
}

void LoginButtonClicked::Swap(LoginButtonClicked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginButtonClicked::InternalSwap(LoginButtonClicked* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LoginButtonClicked::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BitnessWarningShown::InitAsDefaultInstance() {
}
class BitnessWarningShown::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BitnessWarningShown::BitnessWarningShown()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.BitnessWarningShown)
}
BitnessWarningShown::BitnessWarningShown(const BitnessWarningShown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:eve_launcher.BitnessWarningShown)
}

void BitnessWarningShown::SharedCtor() {
}

BitnessWarningShown::~BitnessWarningShown() {
  // @@protoc_insertion_point(destructor:eve_launcher.BitnessWarningShown)
  SharedDtor();
}

void BitnessWarningShown::SharedDtor() {
}

void BitnessWarningShown::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BitnessWarningShown& BitnessWarningShown::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BitnessWarningShown_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void BitnessWarningShown::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.BitnessWarningShown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BitnessWarningShown::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BitnessWarningShown*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BitnessWarningShown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.BitnessWarningShown)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.BitnessWarningShown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.BitnessWarningShown)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BitnessWarningShown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.BitnessWarningShown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.BitnessWarningShown)
}

::google::protobuf::uint8* BitnessWarningShown::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.BitnessWarningShown)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.BitnessWarningShown)
  return target;
}

size_t BitnessWarningShown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.BitnessWarningShown)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BitnessWarningShown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.BitnessWarningShown)
  GOOGLE_DCHECK_NE(&from, this);
  const BitnessWarningShown* source =
      ::google::protobuf::DynamicCastToGenerated<BitnessWarningShown>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.BitnessWarningShown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.BitnessWarningShown)
    MergeFrom(*source);
  }
}

void BitnessWarningShown::MergeFrom(const BitnessWarningShown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.BitnessWarningShown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BitnessWarningShown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.BitnessWarningShown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BitnessWarningShown::CopyFrom(const BitnessWarningShown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.BitnessWarningShown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitnessWarningShown::IsInitialized() const {
  return true;
}

void BitnessWarningShown::Swap(BitnessWarningShown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BitnessWarningShown::InternalSwap(BitnessWarningShown* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BitnessWarningShown::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BitnessWarningClosed::InitAsDefaultInstance() {
}
class BitnessWarningClosed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BitnessWarningClosed::BitnessWarningClosed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.BitnessWarningClosed)
}
BitnessWarningClosed::BitnessWarningClosed(const BitnessWarningClosed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:eve_launcher.BitnessWarningClosed)
}

void BitnessWarningClosed::SharedCtor() {
}

BitnessWarningClosed::~BitnessWarningClosed() {
  // @@protoc_insertion_point(destructor:eve_launcher.BitnessWarningClosed)
  SharedDtor();
}

void BitnessWarningClosed::SharedDtor() {
}

void BitnessWarningClosed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BitnessWarningClosed& BitnessWarningClosed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BitnessWarningClosed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void BitnessWarningClosed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.BitnessWarningClosed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BitnessWarningClosed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BitnessWarningClosed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BitnessWarningClosed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.BitnessWarningClosed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.BitnessWarningClosed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.BitnessWarningClosed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BitnessWarningClosed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.BitnessWarningClosed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.BitnessWarningClosed)
}

::google::protobuf::uint8* BitnessWarningClosed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.BitnessWarningClosed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.BitnessWarningClosed)
  return target;
}

size_t BitnessWarningClosed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.BitnessWarningClosed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BitnessWarningClosed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.BitnessWarningClosed)
  GOOGLE_DCHECK_NE(&from, this);
  const BitnessWarningClosed* source =
      ::google::protobuf::DynamicCastToGenerated<BitnessWarningClosed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.BitnessWarningClosed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.BitnessWarningClosed)
    MergeFrom(*source);
  }
}

void BitnessWarningClosed::MergeFrom(const BitnessWarningClosed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.BitnessWarningClosed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BitnessWarningClosed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.BitnessWarningClosed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BitnessWarningClosed::CopyFrom(const BitnessWarningClosed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.BitnessWarningClosed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitnessWarningClosed::IsInitialized() const {
  return true;
}

void BitnessWarningClosed::Swap(BitnessWarningClosed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BitnessWarningClosed::InternalSwap(BitnessWarningClosed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BitnessWarningClosed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WebPageLoaded::InitAsDefaultInstance() {
}
class WebPageLoaded::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebPageLoaded::kStartUrlFieldNumber;
const int WebPageLoaded::kFinishUrlFieldNumber;
const int WebPageLoaded::kLoadDurationMillisecondsFieldNumber;
const int WebPageLoaded::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebPageLoaded::WebPageLoaded()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.WebPageLoaded)
}
WebPageLoaded::WebPageLoaded(const WebPageLoaded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_url().size() > 0) {
    start_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_url_);
  }
  finish_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.finish_url().size() > 0) {
    finish_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.finish_url_);
  }
  ::memcpy(&load_duration_milliseconds_, &from.load_duration_milliseconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&load_duration_milliseconds_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.WebPageLoaded)
}

void WebPageLoaded::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_WebPageLoaded_eve_5flauncher_2flauncher_2eproto.base);
  start_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finish_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&load_duration_milliseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&load_duration_milliseconds_)) + sizeof(success_));
}

WebPageLoaded::~WebPageLoaded() {
  // @@protoc_insertion_point(destructor:eve_launcher.WebPageLoaded)
  SharedDtor();
}

void WebPageLoaded::SharedDtor() {
  start_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finish_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WebPageLoaded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WebPageLoaded& WebPageLoaded::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WebPageLoaded_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void WebPageLoaded::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.WebPageLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finish_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&load_duration_milliseconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&load_duration_milliseconds_)) + sizeof(success_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WebPageLoaded::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WebPageLoaded*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string start_url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.WebPageLoaded.start_url");
        object = msg->mutable_start_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string finish_url = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.WebPageLoaded.finish_url");
        object = msg->mutable_finish_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 load_duration_milliseconds = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_load_duration_milliseconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool success = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WebPageLoaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.WebPageLoaded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string start_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_url().data(), static_cast<int>(this->start_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.WebPageLoaded.start_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string finish_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_finish_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->finish_url().data(), static_cast<int>(this->finish_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.WebPageLoaded.finish_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 load_duration_milliseconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &load_duration_milliseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool success = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.WebPageLoaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.WebPageLoaded)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WebPageLoaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.WebPageLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_url = 1;
  if (this->start_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_url().data(), static_cast<int>(this->start_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.WebPageLoaded.start_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->start_url(), output);
  }

  // string finish_url = 2;
  if (this->finish_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->finish_url().data(), static_cast<int>(this->finish_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.WebPageLoaded.finish_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->finish_url(), output);
  }

  // uint32 load_duration_milliseconds = 3;
  if (this->load_duration_milliseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->load_duration_milliseconds(), output);
  }

  // bool success = 4;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.WebPageLoaded)
}

::google::protobuf::uint8* WebPageLoaded::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.WebPageLoaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_url = 1;
  if (this->start_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_url().data(), static_cast<int>(this->start_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.WebPageLoaded.start_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->start_url(), target);
  }

  // string finish_url = 2;
  if (this->finish_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->finish_url().data(), static_cast<int>(this->finish_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.WebPageLoaded.finish_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->finish_url(), target);
  }

  // uint32 load_duration_milliseconds = 3;
  if (this->load_duration_milliseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->load_duration_milliseconds(), target);
  }

  // bool success = 4;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.WebPageLoaded)
  return target;
}

size_t WebPageLoaded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.WebPageLoaded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string start_url = 1;
  if (this->start_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_url());
  }

  // string finish_url = 2;
  if (this->finish_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->finish_url());
  }

  // uint32 load_duration_milliseconds = 3;
  if (this->load_duration_milliseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->load_duration_milliseconds());
  }

  // bool success = 4;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WebPageLoaded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.WebPageLoaded)
  GOOGLE_DCHECK_NE(&from, this);
  const WebPageLoaded* source =
      ::google::protobuf::DynamicCastToGenerated<WebPageLoaded>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.WebPageLoaded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.WebPageLoaded)
    MergeFrom(*source);
  }
}

void WebPageLoaded::MergeFrom(const WebPageLoaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.WebPageLoaded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_url().size() > 0) {

    start_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_url_);
  }
  if (from.finish_url().size() > 0) {

    finish_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.finish_url_);
  }
  if (from.load_duration_milliseconds() != 0) {
    set_load_duration_milliseconds(from.load_duration_milliseconds());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void WebPageLoaded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.WebPageLoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebPageLoaded::CopyFrom(const WebPageLoaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.WebPageLoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebPageLoaded::IsInitialized() const {
  return true;
}

void WebPageLoaded::Swap(WebPageLoaded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WebPageLoaded::InternalSwap(WebPageLoaded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  start_url_.Swap(&other->start_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  finish_url_.Swap(&other->finish_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(load_duration_milliseconds_, other->load_duration_milliseconds_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata WebPageLoaded::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void AssignedToExperiment::InitAsDefaultInstance() {
}
class AssignedToExperiment::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssignedToExperiment::kNameFieldNumber;
const int AssignedToExperiment::kGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssignedToExperiment::AssignedToExperiment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.AssignedToExperiment)
}
AssignedToExperiment::AssignedToExperiment(const AssignedToExperiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.AssignedToExperiment)
}

void AssignedToExperiment::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_AssignedToExperiment_eve_5flauncher_2flauncher_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AssignedToExperiment::~AssignedToExperiment() {
  // @@protoc_insertion_point(destructor:eve_launcher.AssignedToExperiment)
  SharedDtor();
}

void AssignedToExperiment::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AssignedToExperiment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssignedToExperiment& AssignedToExperiment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_AssignedToExperiment_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void AssignedToExperiment::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.AssignedToExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AssignedToExperiment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<AssignedToExperiment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.AssignedToExperiment.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string group = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.AssignedToExperiment.group");
        object = msg->mutable_group();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AssignedToExperiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.AssignedToExperiment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.AssignedToExperiment.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), static_cast<int>(this->group().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.AssignedToExperiment.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.AssignedToExperiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.AssignedToExperiment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AssignedToExperiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.AssignedToExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.AssignedToExperiment.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string group = 2;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), static_cast<int>(this->group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.AssignedToExperiment.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->group(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.AssignedToExperiment)
}

::google::protobuf::uint8* AssignedToExperiment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.AssignedToExperiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.AssignedToExperiment.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string group = 2;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), static_cast<int>(this->group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.AssignedToExperiment.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->group(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.AssignedToExperiment)
  return target;
}

size_t AssignedToExperiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.AssignedToExperiment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string group = 2;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignedToExperiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.AssignedToExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignedToExperiment* source =
      ::google::protobuf::DynamicCastToGenerated<AssignedToExperiment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.AssignedToExperiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.AssignedToExperiment)
    MergeFrom(*source);
  }
}

void AssignedToExperiment::MergeFrom(const AssignedToExperiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.AssignedToExperiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
}

void AssignedToExperiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.AssignedToExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignedToExperiment::CopyFrom(const AssignedToExperiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.AssignedToExperiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignedToExperiment::IsInitialized() const {
  return true;
}

void AssignedToExperiment::Swap(AssignedToExperiment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssignedToExperiment::InternalSwap(AssignedToExperiment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  group_.Swap(&other->group_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata AssignedToExperiment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginFlowStarted::InitAsDefaultInstance() {
}
class LoginFlowStarted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginFlowStarted::kDisplayMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginFlowStarted::LoginFlowStarted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LoginFlowStarted)
}
LoginFlowStarted::LoginFlowStarted(const LoginFlowStarted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  display_method_ = from.display_method_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LoginFlowStarted)
}

void LoginFlowStarted::SharedCtor() {
  display_method_ = 0;
}

LoginFlowStarted::~LoginFlowStarted() {
  // @@protoc_insertion_point(destructor:eve_launcher.LoginFlowStarted)
  SharedDtor();
}

void LoginFlowStarted::SharedDtor() {
}

void LoginFlowStarted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginFlowStarted& LoginFlowStarted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginFlowStarted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LoginFlowStarted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LoginFlowStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  display_method_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginFlowStarted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginFlowStarted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .eve_launcher.LoginFlowStarted.DisplayMethod display_method = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_display_method(static_cast<::eve_launcher::LoginFlowStarted_DisplayMethod>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginFlowStarted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LoginFlowStarted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_launcher.LoginFlowStarted.DisplayMethod display_method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_display_method(static_cast< ::eve_launcher::LoginFlowStarted_DisplayMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LoginFlowStarted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LoginFlowStarted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginFlowStarted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LoginFlowStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.LoginFlowStarted.DisplayMethod display_method = 1;
  if (this->display_method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->display_method(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LoginFlowStarted)
}

::google::protobuf::uint8* LoginFlowStarted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LoginFlowStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.LoginFlowStarted.DisplayMethod display_method = 1;
  if (this->display_method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->display_method(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LoginFlowStarted)
  return target;
}

size_t LoginFlowStarted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LoginFlowStarted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .eve_launcher.LoginFlowStarted.DisplayMethod display_method = 1;
  if (this->display_method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->display_method());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginFlowStarted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LoginFlowStarted)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginFlowStarted* source =
      ::google::protobuf::DynamicCastToGenerated<LoginFlowStarted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LoginFlowStarted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LoginFlowStarted)
    MergeFrom(*source);
  }
}

void LoginFlowStarted::MergeFrom(const LoginFlowStarted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LoginFlowStarted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.display_method() != 0) {
    set_display_method(from.display_method());
  }
}

void LoginFlowStarted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LoginFlowStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginFlowStarted::CopyFrom(const LoginFlowStarted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LoginFlowStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginFlowStarted::IsInitialized() const {
  return true;
}

void LoginFlowStarted::Swap(LoginFlowStarted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginFlowStarted::InternalSwap(LoginFlowStarted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(display_method_, other->display_method_);
}

::google::protobuf::Metadata LoginFlowStarted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SystemBrowserOpened::InitAsDefaultInstance() {
}
class SystemBrowserOpened::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemBrowserOpened::kUrlFieldNumber;
const int SystemBrowserOpened::kMediumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemBrowserOpened::SystemBrowserOpened()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.SystemBrowserOpened)
}
SystemBrowserOpened::SystemBrowserOpened(const SystemBrowserOpened& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  medium_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.medium().size() > 0) {
    medium_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.medium_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_launcher.SystemBrowserOpened)
}

void SystemBrowserOpened::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SystemBrowserOpened_eve_5flauncher_2flauncher_2eproto.base);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  medium_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SystemBrowserOpened::~SystemBrowserOpened() {
  // @@protoc_insertion_point(destructor:eve_launcher.SystemBrowserOpened)
  SharedDtor();
}

void SystemBrowserOpened::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  medium_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemBrowserOpened::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SystemBrowserOpened& SystemBrowserOpened::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SystemBrowserOpened_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void SystemBrowserOpened::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.SystemBrowserOpened)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  medium_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SystemBrowserOpened::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SystemBrowserOpened*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.SystemBrowserOpened.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string medium = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.SystemBrowserOpened.medium");
        object = msg->mutable_medium();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SystemBrowserOpened::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.SystemBrowserOpened)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.SystemBrowserOpened.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string medium = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_medium()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->medium().data(), static_cast<int>(this->medium().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.SystemBrowserOpened.medium"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.SystemBrowserOpened)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.SystemBrowserOpened)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SystemBrowserOpened::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.SystemBrowserOpened)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.SystemBrowserOpened.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // string medium = 2;
  if (this->medium().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->medium().data(), static_cast<int>(this->medium().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.SystemBrowserOpened.medium");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->medium(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.SystemBrowserOpened)
}

::google::protobuf::uint8* SystemBrowserOpened::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.SystemBrowserOpened)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.SystemBrowserOpened.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // string medium = 2;
  if (this->medium().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->medium().data(), static_cast<int>(this->medium().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.SystemBrowserOpened.medium");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->medium(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.SystemBrowserOpened)
  return target;
}

size_t SystemBrowserOpened::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.SystemBrowserOpened)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string medium = 2;
  if (this->medium().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->medium());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemBrowserOpened::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.SystemBrowserOpened)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemBrowserOpened* source =
      ::google::protobuf::DynamicCastToGenerated<SystemBrowserOpened>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.SystemBrowserOpened)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.SystemBrowserOpened)
    MergeFrom(*source);
  }
}

void SystemBrowserOpened::MergeFrom(const SystemBrowserOpened& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.SystemBrowserOpened)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.medium().size() > 0) {

    medium_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.medium_);
  }
}

void SystemBrowserOpened::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.SystemBrowserOpened)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemBrowserOpened::CopyFrom(const SystemBrowserOpened& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.SystemBrowserOpened)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemBrowserOpened::IsInitialized() const {
  return true;
}

void SystemBrowserOpened::Swap(SystemBrowserOpened* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemBrowserOpened::InternalSwap(SystemBrowserOpened* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  medium_.Swap(&other->medium_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SystemBrowserOpened::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void FileUpdateFailed::InitAsDefaultInstance() {
}
class FileUpdateFailed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileUpdateFailed::kErrorCodeFieldNumber;
const int FileUpdateFailed::kRescheduledFieldNumber;
const int FileUpdateFailed::kUrlFieldNumber;
const int FileUpdateFailed::kDownloadTypeFieldNumber;
const int FileUpdateFailed::kDownloadSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileUpdateFailed::FileUpdateFailed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.FileUpdateFailed)
}
FileUpdateFailed::FileUpdateFailed(const FileUpdateFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&download_speed_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(download_speed_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.FileUpdateFailed)
}

void FileUpdateFailed::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FileUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(download_speed_));
}

FileUpdateFailed::~FileUpdateFailed() {
  // @@protoc_insertion_point(destructor:eve_launcher.FileUpdateFailed)
  SharedDtor();
}

void FileUpdateFailed::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileUpdateFailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileUpdateFailed& FileUpdateFailed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FileUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void FileUpdateFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.FileUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(download_speed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FileUpdateFailed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FileUpdateFailed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool rescheduled = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_rescheduled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string url = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.FileUpdateFailed.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.FileUpdateFailed.DownloadType download_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_download_type(static_cast<::eve_launcher::FileUpdateFailed_DownloadType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float download_speed = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_download_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FileUpdateFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.FileUpdateFailed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool rescheduled = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rescheduled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.FileUpdateFailed.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.FileUpdateFailed.DownloadType download_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_download_type(static_cast< ::eve_launcher::FileUpdateFailed_DownloadType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float download_speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &download_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.FileUpdateFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.FileUpdateFailed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FileUpdateFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.FileUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  // bool rescheduled = 2;
  if (this->rescheduled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->rescheduled(), output);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.FileUpdateFailed.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // .eve_launcher.FileUpdateFailed.DownloadType download_type = 4;
  if (this->download_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->download_type(), output);
  }

  // float download_speed = 5;
  if (this->download_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->download_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.FileUpdateFailed)
}

::google::protobuf::uint8* FileUpdateFailed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.FileUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  // bool rescheduled = 2;
  if (this->rescheduled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->rescheduled(), target);
  }

  // string url = 3;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.FileUpdateFailed.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // .eve_launcher.FileUpdateFailed.DownloadType download_type = 4;
  if (this->download_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->download_type(), target);
  }

  // float download_speed = 5;
  if (this->download_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->download_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.FileUpdateFailed)
  return target;
}

size_t FileUpdateFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.FileUpdateFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 3;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());
  }

  // bool rescheduled = 2;
  if (this->rescheduled() != 0) {
    total_size += 1 + 1;
  }

  // .eve_launcher.FileUpdateFailed.DownloadType download_type = 4;
  if (this->download_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->download_type());
  }

  // float download_speed = 5;
  if (this->download_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileUpdateFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.FileUpdateFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const FileUpdateFailed* source =
      ::google::protobuf::DynamicCastToGenerated<FileUpdateFailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.FileUpdateFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.FileUpdateFailed)
    MergeFrom(*source);
  }
}

void FileUpdateFailed::MergeFrom(const FileUpdateFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.FileUpdateFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.rescheduled() != 0) {
    set_rescheduled(from.rescheduled());
  }
  if (from.download_type() != 0) {
    set_download_type(from.download_type());
  }
  if (from.download_speed() != 0) {
    set_download_speed(from.download_speed());
  }
}

void FileUpdateFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.FileUpdateFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileUpdateFailed::CopyFrom(const FileUpdateFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.FileUpdateFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileUpdateFailed::IsInitialized() const {
  return true;
}

void FileUpdateFailed::Swap(FileUpdateFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileUpdateFailed::InternalSwap(FileUpdateFailed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  swap(rescheduled_, other->rescheduled_);
  swap(download_type_, other->download_type_);
  swap(download_speed_, other->download_speed_);
}

::google::protobuf::Metadata FileUpdateFailed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DownloadInterrupted::InitAsDefaultInstance() {
}
class DownloadInterrupted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadInterrupted::kDownloadSpeedFieldNumber;
const int DownloadInterrupted::kTargetVersionFieldNumber;
const int DownloadInterrupted::kBytesDownloadedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadInterrupted::DownloadInterrupted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.DownloadInterrupted)
}
DownloadInterrupted::DownloadInterrupted(const DownloadInterrupted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  ::memcpy(&bytes_downloaded_, &from.bytes_downloaded_,
    static_cast<size_t>(reinterpret_cast<char*>(&download_speed_) -
    reinterpret_cast<char*>(&bytes_downloaded_)) + sizeof(download_speed_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.DownloadInterrupted)
}

void DownloadInterrupted::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DownloadInterrupted_eve_5flauncher_2flauncher_2eproto.base);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bytes_downloaded_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&bytes_downloaded_)) + sizeof(download_speed_));
}

DownloadInterrupted::~DownloadInterrupted() {
  // @@protoc_insertion_point(destructor:eve_launcher.DownloadInterrupted)
  SharedDtor();
}

void DownloadInterrupted::SharedDtor() {
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadInterrupted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DownloadInterrupted& DownloadInterrupted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DownloadInterrupted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void DownloadInterrupted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.DownloadInterrupted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bytes_downloaded_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&bytes_downloaded_)) + sizeof(download_speed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DownloadInterrupted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DownloadInterrupted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float download_speed = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_download_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // string target_version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.DownloadInterrupted.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint64 bytes_downloaded = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_bytes_downloaded(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DownloadInterrupted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.DownloadInterrupted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float download_speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &download_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.DownloadInterrupted.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes_downloaded = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.DownloadInterrupted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.DownloadInterrupted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DownloadInterrupted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.DownloadInterrupted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float download_speed = 1;
  if (this->download_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->download_speed(), output);
  }

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DownloadInterrupted.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_version(), output);
  }

  // uint64 bytes_downloaded = 3;
  if (this->bytes_downloaded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bytes_downloaded(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.DownloadInterrupted)
}

::google::protobuf::uint8* DownloadInterrupted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.DownloadInterrupted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float download_speed = 1;
  if (this->download_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->download_speed(), target);
  }

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.DownloadInterrupted.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_version(), target);
  }

  // uint64 bytes_downloaded = 3;
  if (this->bytes_downloaded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bytes_downloaded(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.DownloadInterrupted)
  return target;
}

size_t DownloadInterrupted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.DownloadInterrupted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  // uint64 bytes_downloaded = 3;
  if (this->bytes_downloaded() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes_downloaded());
  }

  // float download_speed = 1;
  if (this->download_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadInterrupted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.DownloadInterrupted)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadInterrupted* source =
      ::google::protobuf::DynamicCastToGenerated<DownloadInterrupted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.DownloadInterrupted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.DownloadInterrupted)
    MergeFrom(*source);
  }
}

void DownloadInterrupted::MergeFrom(const DownloadInterrupted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.DownloadInterrupted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  if (from.bytes_downloaded() != 0) {
    set_bytes_downloaded(from.bytes_downloaded());
  }
  if (from.download_speed() != 0) {
    set_download_speed(from.download_speed());
  }
}

void DownloadInterrupted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.DownloadInterrupted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadInterrupted::CopyFrom(const DownloadInterrupted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.DownloadInterrupted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadInterrupted::IsInitialized() const {
  return true;
}

void DownloadInterrupted::Swap(DownloadInterrupted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadInterrupted::InternalSwap(DownloadInterrupted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bytes_downloaded_, other->bytes_downloaded_);
  swap(download_speed_, other->download_speed_);
}

::google::protobuf::Metadata DownloadInterrupted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LauncherUpdateDownloaded::InitAsDefaultInstance() {
}
class LauncherUpdateDownloaded::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LauncherUpdateDownloaded::kTargetVersionFieldNumber;
const int LauncherUpdateDownloaded::kDownloadSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LauncherUpdateDownloaded::LauncherUpdateDownloaded()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LauncherUpdateDownloaded)
}
LauncherUpdateDownloaded::LauncherUpdateDownloaded(const LauncherUpdateDownloaded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  download_speed_ = from.download_speed_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LauncherUpdateDownloaded)
}

void LauncherUpdateDownloaded::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LauncherUpdateDownloaded_eve_5flauncher_2flauncher_2eproto.base);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_speed_ = 0;
}

LauncherUpdateDownloaded::~LauncherUpdateDownloaded() {
  // @@protoc_insertion_point(destructor:eve_launcher.LauncherUpdateDownloaded)
  SharedDtor();
}

void LauncherUpdateDownloaded::SharedDtor() {
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LauncherUpdateDownloaded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LauncherUpdateDownloaded& LauncherUpdateDownloaded::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LauncherUpdateDownloaded_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LauncherUpdateDownloaded::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LauncherUpdateDownloaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_speed_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LauncherUpdateDownloaded::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LauncherUpdateDownloaded*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.LauncherUpdateDownloaded.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float download_speed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_download_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LauncherUpdateDownloaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LauncherUpdateDownloaded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.LauncherUpdateDownloaded.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float download_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &download_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LauncherUpdateDownloaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LauncherUpdateDownloaded)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LauncherUpdateDownloaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LauncherUpdateDownloaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateDownloaded.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_version(), output);
  }

  // float download_speed = 2;
  if (this->download_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->download_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LauncherUpdateDownloaded)
}

::google::protobuf::uint8* LauncherUpdateDownloaded::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LauncherUpdateDownloaded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateDownloaded.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target_version(), target);
  }

  // float download_speed = 2;
  if (this->download_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->download_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LauncherUpdateDownloaded)
  return target;
}

size_t LauncherUpdateDownloaded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LauncherUpdateDownloaded)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  // float download_speed = 2;
  if (this->download_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LauncherUpdateDownloaded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LauncherUpdateDownloaded)
  GOOGLE_DCHECK_NE(&from, this);
  const LauncherUpdateDownloaded* source =
      ::google::protobuf::DynamicCastToGenerated<LauncherUpdateDownloaded>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LauncherUpdateDownloaded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LauncherUpdateDownloaded)
    MergeFrom(*source);
  }
}

void LauncherUpdateDownloaded::MergeFrom(const LauncherUpdateDownloaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LauncherUpdateDownloaded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  if (from.download_speed() != 0) {
    set_download_speed(from.download_speed());
  }
}

void LauncherUpdateDownloaded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LauncherUpdateDownloaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LauncherUpdateDownloaded::CopyFrom(const LauncherUpdateDownloaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LauncherUpdateDownloaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LauncherUpdateDownloaded::IsInitialized() const {
  return true;
}

void LauncherUpdateDownloaded::Swap(LauncherUpdateDownloaded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LauncherUpdateDownloaded::InternalSwap(LauncherUpdateDownloaded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(download_speed_, other->download_speed_);
}

::google::protobuf::Metadata LauncherUpdateDownloaded::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LauncherUpdateFailed::InitAsDefaultInstance() {
}
class LauncherUpdateFailed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LauncherUpdateFailed::kErrorCodeFieldNumber;
const int LauncherUpdateFailed::kTargetVersionFieldNumber;
const int LauncherUpdateFailed::kDownloadSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LauncherUpdateFailed::LauncherUpdateFailed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LauncherUpdateFailed)
}
LauncherUpdateFailed::LauncherUpdateFailed(const LauncherUpdateFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&download_speed_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(download_speed_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LauncherUpdateFailed)
}

void LauncherUpdateFailed::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LauncherUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(download_speed_));
}

LauncherUpdateFailed::~LauncherUpdateFailed() {
  // @@protoc_insertion_point(destructor:eve_launcher.LauncherUpdateFailed)
  SharedDtor();
}

void LauncherUpdateFailed::SharedDtor() {
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LauncherUpdateFailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LauncherUpdateFailed& LauncherUpdateFailed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LauncherUpdateFailed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LauncherUpdateFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LauncherUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_speed_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(download_speed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LauncherUpdateFailed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LauncherUpdateFailed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string target_version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.LauncherUpdateFailed.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float download_speed = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_download_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LauncherUpdateFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LauncherUpdateFailed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.LauncherUpdateFailed.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float download_speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &download_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LauncherUpdateFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LauncherUpdateFailed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LauncherUpdateFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LauncherUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateFailed.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target_version(), output);
  }

  // float download_speed = 3;
  if (this->download_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->download_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LauncherUpdateFailed)
}

::google::protobuf::uint8* LauncherUpdateFailed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LauncherUpdateFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateFailed.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target_version(), target);
  }

  // float download_speed = 3;
  if (this->download_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->download_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LauncherUpdateFailed)
  return target;
}

size_t LauncherUpdateFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LauncherUpdateFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_version = 2;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());
  }

  // float download_speed = 3;
  if (this->download_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LauncherUpdateFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LauncherUpdateFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const LauncherUpdateFailed* source =
      ::google::protobuf::DynamicCastToGenerated<LauncherUpdateFailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LauncherUpdateFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LauncherUpdateFailed)
    MergeFrom(*source);
  }
}

void LauncherUpdateFailed::MergeFrom(const LauncherUpdateFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LauncherUpdateFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.download_speed() != 0) {
    set_download_speed(from.download_speed());
  }
}

void LauncherUpdateFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LauncherUpdateFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LauncherUpdateFailed::CopyFrom(const LauncherUpdateFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LauncherUpdateFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LauncherUpdateFailed::IsInitialized() const {
  return true;
}

void LauncherUpdateFailed::Swap(LauncherUpdateFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LauncherUpdateFailed::InternalSwap(LauncherUpdateFailed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
  swap(download_speed_, other->download_speed_);
}

::google::protobuf::Metadata LauncherUpdateFailed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UiSettings::InitAsDefaultInstance() {
}
class UiSettings::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UiSettings::kSettingsChangedFieldNumber;
const int UiSettings::kStartClientOnLoginFieldNumber;
const int UiSettings::kStartupDelaySecondsFieldNumber;
const int UiSettings::kRememberAccountsFieldNumber;
const int UiSettings::kDebugLogsEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UiSettings::UiSettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UiSettings)
}
UiSettings::UiSettings(const UiSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&startup_delay_seconds_, &from.startup_delay_seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&debug_logs_enabled_) -
    reinterpret_cast<char*>(&startup_delay_seconds_)) + sizeof(debug_logs_enabled_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UiSettings)
}

void UiSettings::SharedCtor() {
  ::memset(&startup_delay_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&debug_logs_enabled_) -
      reinterpret_cast<char*>(&startup_delay_seconds_)) + sizeof(debug_logs_enabled_));
}

UiSettings::~UiSettings() {
  // @@protoc_insertion_point(destructor:eve_launcher.UiSettings)
  SharedDtor();
}

void UiSettings::SharedDtor() {
}

void UiSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UiSettings& UiSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UiSettings_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UiSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UiSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&startup_delay_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&debug_logs_enabled_) -
      reinterpret_cast<char*>(&startup_delay_seconds_)) + sizeof(debug_logs_enabled_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UiSettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UiSettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool settings_changed = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_settings_changed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool start_client_on_login = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_start_client_on_login(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 startup_delay_seconds = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_startup_delay_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool remember_accounts = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_remember_accounts(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool debug_logs_enabled = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_debug_logs_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UiSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UiSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool settings_changed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &settings_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool start_client_on_login = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &start_client_on_login_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 startup_delay_seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startup_delay_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool remember_accounts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remember_accounts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool debug_logs_enabled = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debug_logs_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UiSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UiSettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UiSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UiSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool settings_changed = 1;
  if (this->settings_changed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->settings_changed(), output);
  }

  // bool start_client_on_login = 2;
  if (this->start_client_on_login() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->start_client_on_login(), output);
  }

  // uint32 startup_delay_seconds = 3;
  if (this->startup_delay_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->startup_delay_seconds(), output);
  }

  // bool remember_accounts = 4;
  if (this->remember_accounts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->remember_accounts(), output);
  }

  // bool debug_logs_enabled = 5;
  if (this->debug_logs_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->debug_logs_enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UiSettings)
}

::google::protobuf::uint8* UiSettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UiSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool settings_changed = 1;
  if (this->settings_changed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->settings_changed(), target);
  }

  // bool start_client_on_login = 2;
  if (this->start_client_on_login() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->start_client_on_login(), target);
  }

  // uint32 startup_delay_seconds = 3;
  if (this->startup_delay_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->startup_delay_seconds(), target);
  }

  // bool remember_accounts = 4;
  if (this->remember_accounts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->remember_accounts(), target);
  }

  // bool debug_logs_enabled = 5;
  if (this->debug_logs_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->debug_logs_enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UiSettings)
  return target;
}

size_t UiSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UiSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 startup_delay_seconds = 3;
  if (this->startup_delay_seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startup_delay_seconds());
  }

  // bool settings_changed = 1;
  if (this->settings_changed() != 0) {
    total_size += 1 + 1;
  }

  // bool start_client_on_login = 2;
  if (this->start_client_on_login() != 0) {
    total_size += 1 + 1;
  }

  // bool remember_accounts = 4;
  if (this->remember_accounts() != 0) {
    total_size += 1 + 1;
  }

  // bool debug_logs_enabled = 5;
  if (this->debug_logs_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UiSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UiSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const UiSettings* source =
      ::google::protobuf::DynamicCastToGenerated<UiSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UiSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UiSettings)
    MergeFrom(*source);
  }
}

void UiSettings::MergeFrom(const UiSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UiSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.startup_delay_seconds() != 0) {
    set_startup_delay_seconds(from.startup_delay_seconds());
  }
  if (from.settings_changed() != 0) {
    set_settings_changed(from.settings_changed());
  }
  if (from.start_client_on_login() != 0) {
    set_start_client_on_login(from.start_client_on_login());
  }
  if (from.remember_accounts() != 0) {
    set_remember_accounts(from.remember_accounts());
  }
  if (from.debug_logs_enabled() != 0) {
    set_debug_logs_enabled(from.debug_logs_enabled());
  }
}

void UiSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UiSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UiSettings::CopyFrom(const UiSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UiSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UiSettings::IsInitialized() const {
  return true;
}

void UiSettings::Swap(UiSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UiSettings::InternalSwap(UiSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(startup_delay_seconds_, other->startup_delay_seconds_);
  swap(settings_changed_, other->settings_changed_);
  swap(start_client_on_login_, other->start_client_on_login_);
  swap(remember_accounts_, other->remember_accounts_);
  swap(debug_logs_enabled_, other->debug_logs_enabled_);
}

::google::protobuf::Metadata UiSettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UserRememberToggled::InitAsDefaultInstance() {
  ::eve_launcher::_UserRememberToggled_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::eve_launcher::user::Identifier*>(
      ::eve_launcher::user::Identifier::internal_default_instance());
}
class UserRememberToggled::HasBitSetters {
 public:
  static const ::eve_launcher::user::Identifier& user_id(const UserRememberToggled* msg);
};

const ::eve_launcher::user::Identifier&
UserRememberToggled::HasBitSetters::user_id(const UserRememberToggled* msg) {
  return *msg->user_id_;
}
void UserRememberToggled::clear_user_id() {
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRememberToggled::kUserIdFieldNumber;
const int UserRememberToggled::kServerFieldNumber;
const int UserRememberToggled::kRememberEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRememberToggled::UserRememberToggled()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UserRememberToggled)
}
UserRememberToggled::UserRememberToggled(const UserRememberToggled& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    user_id_ = new ::eve_launcher::user::Identifier(*from.user_id_);
  } else {
    user_id_ = nullptr;
  }
  remember_enabled_ = from.remember_enabled_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UserRememberToggled)
}

void UserRememberToggled::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UserRememberToggled_eve_5flauncher_2flauncher_2eproto.base);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remember_enabled_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(remember_enabled_));
}

UserRememberToggled::~UserRememberToggled() {
  // @@protoc_insertion_point(destructor:eve_launcher.UserRememberToggled)
  SharedDtor();
}

void UserRememberToggled::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_id_;
}

void UserRememberToggled::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserRememberToggled& UserRememberToggled::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UserRememberToggled_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UserRememberToggled::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UserRememberToggled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && user_id_ != nullptr) {
    delete user_id_;
  }
  user_id_ = nullptr;
  remember_enabled_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UserRememberToggled::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UserRememberToggled*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .eve_launcher.user.Identifier user_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::user::Identifier::_InternalParse;
        object = msg->mutable_user_id();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string server = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.UserRememberToggled.server");
        object = msg->mutable_server();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool remember_enabled = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_remember_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UserRememberToggled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UserRememberToggled)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_launcher.user.Identifier user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.UserRememberToggled.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool remember_enabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remember_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UserRememberToggled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UserRememberToggled)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UserRememberToggled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UserRememberToggled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.user.Identifier user_id = 1;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::user_id(this), output);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UserRememberToggled.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->server(), output);
  }

  // bool remember_enabled = 3;
  if (this->remember_enabled() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->remember_enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UserRememberToggled)
}

::google::protobuf::uint8* UserRememberToggled::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UserRememberToggled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_launcher.user.Identifier user_id = 1;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::user_id(this), target);
  }

  // string server = 2;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UserRememberToggled.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->server(), target);
  }

  // bool remember_enabled = 3;
  if (this->remember_enabled() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->remember_enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UserRememberToggled)
  return target;
}

size_t UserRememberToggled::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UserRememberToggled)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server = 2;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // .eve_launcher.user.Identifier user_id = 1;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // bool remember_enabled = 3;
  if (this->remember_enabled() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRememberToggled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UserRememberToggled)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRememberToggled* source =
      ::google::protobuf::DynamicCastToGenerated<UserRememberToggled>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UserRememberToggled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UserRememberToggled)
    MergeFrom(*source);
  }
}

void UserRememberToggled::MergeFrom(const UserRememberToggled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UserRememberToggled)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.has_user_id()) {
    mutable_user_id()->::eve_launcher::user::Identifier::MergeFrom(from.user_id());
  }
  if (from.remember_enabled() != 0) {
    set_remember_enabled(from.remember_enabled());
  }
}

void UserRememberToggled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UserRememberToggled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRememberToggled::CopyFrom(const UserRememberToggled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UserRememberToggled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRememberToggled::IsInitialized() const {
  return true;
}

void UserRememberToggled::Swap(UserRememberToggled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRememberToggled::InternalSwap(UserRememberToggled* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  swap(remember_enabled_, other->remember_enabled_);
}

::google::protobuf::Metadata UserRememberToggled::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LauncherUpdateCancelled::InitAsDefaultInstance() {
}
class LauncherUpdateCancelled::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LauncherUpdateCancelled::kTargetVersionFieldNumber;
const int LauncherUpdateCancelled::kDownloadSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LauncherUpdateCancelled::LauncherUpdateCancelled()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LauncherUpdateCancelled)
}
LauncherUpdateCancelled::LauncherUpdateCancelled(const LauncherUpdateCancelled& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  download_speed_ = from.download_speed_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LauncherUpdateCancelled)
}

void LauncherUpdateCancelled::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LauncherUpdateCancelled_eve_5flauncher_2flauncher_2eproto.base);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_speed_ = 0;
}

LauncherUpdateCancelled::~LauncherUpdateCancelled() {
  // @@protoc_insertion_point(destructor:eve_launcher.LauncherUpdateCancelled)
  SharedDtor();
}

void LauncherUpdateCancelled::SharedDtor() {
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LauncherUpdateCancelled::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LauncherUpdateCancelled& LauncherUpdateCancelled::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LauncherUpdateCancelled_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LauncherUpdateCancelled::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LauncherUpdateCancelled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_speed_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LauncherUpdateCancelled::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LauncherUpdateCancelled*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.LauncherUpdateCancelled.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // float download_speed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_download_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LauncherUpdateCancelled::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LauncherUpdateCancelled)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.LauncherUpdateCancelled.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float download_speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &download_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LauncherUpdateCancelled)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LauncherUpdateCancelled)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LauncherUpdateCancelled::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LauncherUpdateCancelled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateCancelled.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_version(), output);
  }

  // float download_speed = 2;
  if (this->download_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->download_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LauncherUpdateCancelled)
}

::google::protobuf::uint8* LauncherUpdateCancelled::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LauncherUpdateCancelled)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateCancelled.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target_version(), target);
  }

  // float download_speed = 2;
  if (this->download_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->download_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LauncherUpdateCancelled)
  return target;
}

size_t LauncherUpdateCancelled::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LauncherUpdateCancelled)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  // float download_speed = 2;
  if (this->download_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LauncherUpdateCancelled::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LauncherUpdateCancelled)
  GOOGLE_DCHECK_NE(&from, this);
  const LauncherUpdateCancelled* source =
      ::google::protobuf::DynamicCastToGenerated<LauncherUpdateCancelled>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LauncherUpdateCancelled)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LauncherUpdateCancelled)
    MergeFrom(*source);
  }
}

void LauncherUpdateCancelled::MergeFrom(const LauncherUpdateCancelled& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LauncherUpdateCancelled)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  if (from.download_speed() != 0) {
    set_download_speed(from.download_speed());
  }
}

void LauncherUpdateCancelled::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LauncherUpdateCancelled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LauncherUpdateCancelled::CopyFrom(const LauncherUpdateCancelled& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LauncherUpdateCancelled)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LauncherUpdateCancelled::IsInitialized() const {
  return true;
}

void LauncherUpdateCancelled::Swap(LauncherUpdateCancelled* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LauncherUpdateCancelled::InternalSwap(LauncherUpdateCancelled* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(download_speed_, other->download_speed_);
}

::google::protobuf::Metadata LauncherUpdateCancelled::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LauncherUpdateAccepted::InitAsDefaultInstance() {
}
class LauncherUpdateAccepted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LauncherUpdateAccepted::kTargetVersionFieldNumber;
const int LauncherUpdateAccepted::kAutomaticFieldNumber;
const int LauncherUpdateAccepted::kUpdaterStartedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LauncherUpdateAccepted::LauncherUpdateAccepted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.LauncherUpdateAccepted)
}
LauncherUpdateAccepted::LauncherUpdateAccepted(const LauncherUpdateAccepted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_version().size() > 0) {
    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  ::memcpy(&automatic_, &from.automatic_,
    static_cast<size_t>(reinterpret_cast<char*>(&updater_started_) -
    reinterpret_cast<char*>(&automatic_)) + sizeof(updater_started_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.LauncherUpdateAccepted)
}

void LauncherUpdateAccepted::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LauncherUpdateAccepted_eve_5flauncher_2flauncher_2eproto.base);
  target_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&automatic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updater_started_) -
      reinterpret_cast<char*>(&automatic_)) + sizeof(updater_started_));
}

LauncherUpdateAccepted::~LauncherUpdateAccepted() {
  // @@protoc_insertion_point(destructor:eve_launcher.LauncherUpdateAccepted)
  SharedDtor();
}

void LauncherUpdateAccepted::SharedDtor() {
  target_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LauncherUpdateAccepted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LauncherUpdateAccepted& LauncherUpdateAccepted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LauncherUpdateAccepted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void LauncherUpdateAccepted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.LauncherUpdateAccepted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&automatic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updater_started_) -
      reinterpret_cast<char*>(&automatic_)) + sizeof(updater_started_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LauncherUpdateAccepted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LauncherUpdateAccepted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string target_version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.LauncherUpdateAccepted.target_version");
        object = msg->mutable_target_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool automatic = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_automatic(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool updater_started = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_updater_started(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LauncherUpdateAccepted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.LauncherUpdateAccepted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_version().data(), static_cast<int>(this->target_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.LauncherUpdateAccepted.target_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool automatic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automatic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool updater_started = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &updater_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.LauncherUpdateAccepted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.LauncherUpdateAccepted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LauncherUpdateAccepted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.LauncherUpdateAccepted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateAccepted.target_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_version(), output);
  }

  // bool automatic = 2;
  if (this->automatic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->automatic(), output);
  }

  // bool updater_started = 3;
  if (this->updater_started() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->updater_started(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.LauncherUpdateAccepted)
}

::google::protobuf::uint8* LauncherUpdateAccepted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.LauncherUpdateAccepted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_version().data(), static_cast<int>(this->target_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.LauncherUpdateAccepted.target_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target_version(), target);
  }

  // bool automatic = 2;
  if (this->automatic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->automatic(), target);
  }

  // bool updater_started = 3;
  if (this->updater_started() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->updater_started(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.LauncherUpdateAccepted)
  return target;
}

size_t LauncherUpdateAccepted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.LauncherUpdateAccepted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_version = 1;
  if (this->target_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_version());
  }

  // bool automatic = 2;
  if (this->automatic() != 0) {
    total_size += 1 + 1;
  }

  // bool updater_started = 3;
  if (this->updater_started() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LauncherUpdateAccepted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.LauncherUpdateAccepted)
  GOOGLE_DCHECK_NE(&from, this);
  const LauncherUpdateAccepted* source =
      ::google::protobuf::DynamicCastToGenerated<LauncherUpdateAccepted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.LauncherUpdateAccepted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.LauncherUpdateAccepted)
    MergeFrom(*source);
  }
}

void LauncherUpdateAccepted::MergeFrom(const LauncherUpdateAccepted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.LauncherUpdateAccepted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_version().size() > 0) {

    target_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_version_);
  }
  if (from.automatic() != 0) {
    set_automatic(from.automatic());
  }
  if (from.updater_started() != 0) {
    set_updater_started(from.updater_started());
  }
}

void LauncherUpdateAccepted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.LauncherUpdateAccepted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LauncherUpdateAccepted::CopyFrom(const LauncherUpdateAccepted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.LauncherUpdateAccepted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LauncherUpdateAccepted::IsInitialized() const {
  return true;
}

void LauncherUpdateAccepted::Swap(LauncherUpdateAccepted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LauncherUpdateAccepted::InternalSwap(LauncherUpdateAccepted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  target_version_.Swap(&other->target_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(automatic_, other->automatic_);
  swap(updater_started_, other->updater_started_);
}

::google::protobuf::Metadata LauncherUpdateAccepted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CertificateErrorOccurred::InitAsDefaultInstance() {
  ::eve_launcher::_CertificateErrorOccurred_default_instance_._instance.get_mutable()->host_ip_ = const_cast< ::eve_launcher::IPAddress*>(
      ::eve_launcher::IPAddress::internal_default_instance());
}
class CertificateErrorOccurred::HasBitSetters {
 public:
  static const ::eve_launcher::IPAddress& host_ip(const CertificateErrorOccurred* msg);
};

const ::eve_launcher::IPAddress&
CertificateErrorOccurred::HasBitSetters::host_ip(const CertificateErrorOccurred* msg) {
  return *msg->host_ip_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CertificateErrorOccurred::kUrlFieldNumber;
const int CertificateErrorOccurred::kHostIpFieldNumber;
const int CertificateErrorOccurred::kErrorCodeFieldNumber;
const int CertificateErrorOccurred::kUserPromptedFieldNumber;
const int CertificateErrorOccurred::kUserIgnoredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CertificateErrorOccurred::CertificateErrorOccurred()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.CertificateErrorOccurred)
}
CertificateErrorOccurred::CertificateErrorOccurred(const CertificateErrorOccurred& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_host_ip()) {
    host_ip_ = new ::eve_launcher::IPAddress(*from.host_ip_);
  } else {
    host_ip_ = nullptr;
  }
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_ignored_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(user_ignored_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.CertificateErrorOccurred)
}

void CertificateErrorOccurred::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CertificateErrorOccurred_eve_5flauncher_2flauncher_2eproto.base);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&host_ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_ignored_) -
      reinterpret_cast<char*>(&host_ip_)) + sizeof(user_ignored_));
}

CertificateErrorOccurred::~CertificateErrorOccurred() {
  // @@protoc_insertion_point(destructor:eve_launcher.CertificateErrorOccurred)
  SharedDtor();
}

void CertificateErrorOccurred::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete host_ip_;
}

void CertificateErrorOccurred::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CertificateErrorOccurred& CertificateErrorOccurred::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CertificateErrorOccurred_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void CertificateErrorOccurred::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.CertificateErrorOccurred)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && host_ip_ != nullptr) {
    delete host_ip_;
  }
  host_ip_ = nullptr;
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_ignored_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(user_ignored_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CertificateErrorOccurred::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CertificateErrorOccurred*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.CertificateErrorOccurred.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.IPAddress host_ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::eve_launcher::IPAddress::_InternalParse;
        object = msg->mutable_host_ip();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 error_code = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_error_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool user_prompted = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_user_prompted(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool user_ignored = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_user_ignored(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CertificateErrorOccurred::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.CertificateErrorOccurred)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.CertificateErrorOccurred.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.IPAddress host_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_host_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 error_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool user_prompted = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &user_prompted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool user_ignored = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &user_ignored_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.CertificateErrorOccurred)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.CertificateErrorOccurred)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CertificateErrorOccurred::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.CertificateErrorOccurred)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.CertificateErrorOccurred.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // .eve_launcher.IPAddress host_ip = 2;
  if (this->has_host_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::host_ip(this), output);
  }

  // int32 error_code = 3;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->error_code(), output);
  }

  // bool user_prompted = 4;
  if (this->user_prompted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->user_prompted(), output);
  }

  // bool user_ignored = 5;
  if (this->user_ignored() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->user_ignored(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.CertificateErrorOccurred)
}

::google::protobuf::uint8* CertificateErrorOccurred::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.CertificateErrorOccurred)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.CertificateErrorOccurred.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // .eve_launcher.IPAddress host_ip = 2;
  if (this->has_host_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::host_ip(this), target);
  }

  // int32 error_code = 3;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->error_code(), target);
  }

  // bool user_prompted = 4;
  if (this->user_prompted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->user_prompted(), target);
  }

  // bool user_ignored = 5;
  if (this->user_ignored() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->user_ignored(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.CertificateErrorOccurred)
  return target;
}

size_t CertificateErrorOccurred::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.CertificateErrorOccurred)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // .eve_launcher.IPAddress host_ip = 2;
  if (this->has_host_ip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *host_ip_);
  }

  // int32 error_code = 3;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  // bool user_prompted = 4;
  if (this->user_prompted() != 0) {
    total_size += 1 + 1;
  }

  // bool user_ignored = 5;
  if (this->user_ignored() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CertificateErrorOccurred::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.CertificateErrorOccurred)
  GOOGLE_DCHECK_NE(&from, this);
  const CertificateErrorOccurred* source =
      ::google::protobuf::DynamicCastToGenerated<CertificateErrorOccurred>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.CertificateErrorOccurred)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.CertificateErrorOccurred)
    MergeFrom(*source);
  }
}

void CertificateErrorOccurred::MergeFrom(const CertificateErrorOccurred& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.CertificateErrorOccurred)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_host_ip()) {
    mutable_host_ip()->::eve_launcher::IPAddress::MergeFrom(from.host_ip());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.user_prompted() != 0) {
    set_user_prompted(from.user_prompted());
  }
  if (from.user_ignored() != 0) {
    set_user_ignored(from.user_ignored());
  }
}

void CertificateErrorOccurred::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.CertificateErrorOccurred)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CertificateErrorOccurred::CopyFrom(const CertificateErrorOccurred& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.CertificateErrorOccurred)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CertificateErrorOccurred::IsInitialized() const {
  return true;
}

void CertificateErrorOccurred::Swap(CertificateErrorOccurred* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CertificateErrorOccurred::InternalSwap(CertificateErrorOccurred* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(host_ip_, other->host_ip_);
  swap(error_code_, other->error_code_);
  swap(user_prompted_, other->user_prompted_);
  swap(user_ignored_, other->user_ignored_);
}

::google::protobuf::Metadata CertificateErrorOccurred::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UnpackingBundlesStarted::InitAsDefaultInstance() {
}
class UnpackingBundlesStarted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnpackingBundlesStarted::kBundleCountFieldNumber;
const int UnpackingBundlesStarted::kFileCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnpackingBundlesStarted::UnpackingBundlesStarted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UnpackingBundlesStarted)
}
UnpackingBundlesStarted::UnpackingBundlesStarted(const UnpackingBundlesStarted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bundle_count_, &from.bundle_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_count_) -
    reinterpret_cast<char*>(&bundle_count_)) + sizeof(file_count_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UnpackingBundlesStarted)
}

void UnpackingBundlesStarted::SharedCtor() {
  ::memset(&bundle_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_count_) -
      reinterpret_cast<char*>(&bundle_count_)) + sizeof(file_count_));
}

UnpackingBundlesStarted::~UnpackingBundlesStarted() {
  // @@protoc_insertion_point(destructor:eve_launcher.UnpackingBundlesStarted)
  SharedDtor();
}

void UnpackingBundlesStarted::SharedDtor() {
}

void UnpackingBundlesStarted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnpackingBundlesStarted& UnpackingBundlesStarted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnpackingBundlesStarted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UnpackingBundlesStarted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UnpackingBundlesStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bundle_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_count_) -
      reinterpret_cast<char*>(&bundle_count_)) + sizeof(file_count_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnpackingBundlesStarted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnpackingBundlesStarted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 bundle_count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_bundle_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 file_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_file_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnpackingBundlesStarted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UnpackingBundlesStarted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bundle_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bundle_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UnpackingBundlesStarted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UnpackingBundlesStarted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnpackingBundlesStarted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UnpackingBundlesStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bundle_count = 1;
  if (this->bundle_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bundle_count(), output);
  }

  // uint32 file_count = 2;
  if (this->file_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->file_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UnpackingBundlesStarted)
}

::google::protobuf::uint8* UnpackingBundlesStarted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UnpackingBundlesStarted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bundle_count = 1;
  if (this->bundle_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bundle_count(), target);
  }

  // uint32 file_count = 2;
  if (this->file_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->file_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UnpackingBundlesStarted)
  return target;
}

size_t UnpackingBundlesStarted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UnpackingBundlesStarted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 bundle_count = 1;
  if (this->bundle_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bundle_count());
  }

  // uint32 file_count = 2;
  if (this->file_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnpackingBundlesStarted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UnpackingBundlesStarted)
  GOOGLE_DCHECK_NE(&from, this);
  const UnpackingBundlesStarted* source =
      ::google::protobuf::DynamicCastToGenerated<UnpackingBundlesStarted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UnpackingBundlesStarted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UnpackingBundlesStarted)
    MergeFrom(*source);
  }
}

void UnpackingBundlesStarted::MergeFrom(const UnpackingBundlesStarted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UnpackingBundlesStarted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bundle_count() != 0) {
    set_bundle_count(from.bundle_count());
  }
  if (from.file_count() != 0) {
    set_file_count(from.file_count());
  }
}

void UnpackingBundlesStarted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UnpackingBundlesStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnpackingBundlesStarted::CopyFrom(const UnpackingBundlesStarted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UnpackingBundlesStarted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnpackingBundlesStarted::IsInitialized() const {
  return true;
}

void UnpackingBundlesStarted::Swap(UnpackingBundlesStarted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnpackingBundlesStarted::InternalSwap(UnpackingBundlesStarted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bundle_count_, other->bundle_count_);
  swap(file_count_, other->file_count_);
}

::google::protobuf::Metadata UnpackingBundlesStarted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UnpackingBundlesFailed::InitAsDefaultInstance() {
}
class UnpackingBundlesFailed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnpackingBundlesFailed::kFileNameFieldNumber;
const int UnpackingBundlesFailed::kStageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnpackingBundlesFailed::UnpackingBundlesFailed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UnpackingBundlesFailed)
}
UnpackingBundlesFailed::UnpackingBundlesFailed(const UnpackingBundlesFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  stage_ = from.stage_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UnpackingBundlesFailed)
}

void UnpackingBundlesFailed::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UnpackingBundlesFailed_eve_5flauncher_2flauncher_2eproto.base);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stage_ = 0;
}

UnpackingBundlesFailed::~UnpackingBundlesFailed() {
  // @@protoc_insertion_point(destructor:eve_launcher.UnpackingBundlesFailed)
  SharedDtor();
}

void UnpackingBundlesFailed::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnpackingBundlesFailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnpackingBundlesFailed& UnpackingBundlesFailed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnpackingBundlesFailed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UnpackingBundlesFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UnpackingBundlesFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stage_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnpackingBundlesFailed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnpackingBundlesFailed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string file_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.UnpackingBundlesFailed.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .eve_launcher.UnpackingBundlesFailed.UnpackingStage stage = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_stage(static_cast<::eve_launcher::UnpackingBundlesFailed_UnpackingStage>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnpackingBundlesFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UnpackingBundlesFailed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.UnpackingBundlesFailed.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_launcher.UnpackingBundlesFailed.UnpackingStage stage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_stage(static_cast< ::eve_launcher::UnpackingBundlesFailed_UnpackingStage >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UnpackingBundlesFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UnpackingBundlesFailed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnpackingBundlesFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UnpackingBundlesFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UnpackingBundlesFailed.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // .eve_launcher.UnpackingBundlesFailed.UnpackingStage stage = 2;
  if (this->stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->stage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UnpackingBundlesFailed)
}

::google::protobuf::uint8* UnpackingBundlesFailed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UnpackingBundlesFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.UnpackingBundlesFailed.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // .eve_launcher.UnpackingBundlesFailed.UnpackingStage stage = 2;
  if (this->stage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->stage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UnpackingBundlesFailed)
  return target;
}

size_t UnpackingBundlesFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UnpackingBundlesFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // .eve_launcher.UnpackingBundlesFailed.UnpackingStage stage = 2;
  if (this->stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->stage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnpackingBundlesFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UnpackingBundlesFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const UnpackingBundlesFailed* source =
      ::google::protobuf::DynamicCastToGenerated<UnpackingBundlesFailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UnpackingBundlesFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UnpackingBundlesFailed)
    MergeFrom(*source);
  }
}

void UnpackingBundlesFailed::MergeFrom(const UnpackingBundlesFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UnpackingBundlesFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.stage() != 0) {
    set_stage(from.stage());
  }
}

void UnpackingBundlesFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UnpackingBundlesFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnpackingBundlesFailed::CopyFrom(const UnpackingBundlesFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UnpackingBundlesFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnpackingBundlesFailed::IsInitialized() const {
  return true;
}

void UnpackingBundlesFailed::Swap(UnpackingBundlesFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnpackingBundlesFailed::InternalSwap(UnpackingBundlesFailed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stage_, other->stage_);
}

::google::protobuf::Metadata UnpackingBundlesFailed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UnpackingBundlesCompleted::InitAsDefaultInstance() {
}
class UnpackingBundlesCompleted::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnpackingBundlesCompleted::kBundleCountFieldNumber;
const int UnpackingBundlesCompleted::kFileCountFieldNumber;
const int UnpackingBundlesCompleted::kExtractedByteSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnpackingBundlesCompleted::UnpackingBundlesCompleted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.UnpackingBundlesCompleted)
}
UnpackingBundlesCompleted::UnpackingBundlesCompleted(const UnpackingBundlesCompleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bundle_count_, &from.bundle_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&extracted_byte_size_) -
    reinterpret_cast<char*>(&bundle_count_)) + sizeof(extracted_byte_size_));
  // @@protoc_insertion_point(copy_constructor:eve_launcher.UnpackingBundlesCompleted)
}

void UnpackingBundlesCompleted::SharedCtor() {
  ::memset(&bundle_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extracted_byte_size_) -
      reinterpret_cast<char*>(&bundle_count_)) + sizeof(extracted_byte_size_));
}

UnpackingBundlesCompleted::~UnpackingBundlesCompleted() {
  // @@protoc_insertion_point(destructor:eve_launcher.UnpackingBundlesCompleted)
  SharedDtor();
}

void UnpackingBundlesCompleted::SharedDtor() {
}

void UnpackingBundlesCompleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnpackingBundlesCompleted& UnpackingBundlesCompleted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UnpackingBundlesCompleted_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void UnpackingBundlesCompleted::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.UnpackingBundlesCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bundle_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extracted_byte_size_) -
      reinterpret_cast<char*>(&bundle_count_)) + sizeof(extracted_byte_size_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UnpackingBundlesCompleted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UnpackingBundlesCompleted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 bundle_count = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_bundle_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 file_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_file_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 extracted_byte_size = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_extracted_byte_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UnpackingBundlesCompleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.UnpackingBundlesCompleted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 bundle_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bundle_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 extracted_byte_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &extracted_byte_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.UnpackingBundlesCompleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.UnpackingBundlesCompleted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UnpackingBundlesCompleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.UnpackingBundlesCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bundle_count = 1;
  if (this->bundle_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bundle_count(), output);
  }

  // uint32 file_count = 2;
  if (this->file_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->file_count(), output);
  }

  // uint64 extracted_byte_size = 3;
  if (this->extracted_byte_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->extracted_byte_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.UnpackingBundlesCompleted)
}

::google::protobuf::uint8* UnpackingBundlesCompleted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.UnpackingBundlesCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 bundle_count = 1;
  if (this->bundle_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bundle_count(), target);
  }

  // uint32 file_count = 2;
  if (this->file_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->file_count(), target);
  }

  // uint64 extracted_byte_size = 3;
  if (this->extracted_byte_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->extracted_byte_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.UnpackingBundlesCompleted)
  return target;
}

size_t UnpackingBundlesCompleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.UnpackingBundlesCompleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 bundle_count = 1;
  if (this->bundle_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bundle_count());
  }

  // uint32 file_count = 2;
  if (this->file_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_count());
  }

  // uint64 extracted_byte_size = 3;
  if (this->extracted_byte_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->extracted_byte_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnpackingBundlesCompleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.UnpackingBundlesCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  const UnpackingBundlesCompleted* source =
      ::google::protobuf::DynamicCastToGenerated<UnpackingBundlesCompleted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.UnpackingBundlesCompleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.UnpackingBundlesCompleted)
    MergeFrom(*source);
  }
}

void UnpackingBundlesCompleted::MergeFrom(const UnpackingBundlesCompleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.UnpackingBundlesCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bundle_count() != 0) {
    set_bundle_count(from.bundle_count());
  }
  if (from.file_count() != 0) {
    set_file_count(from.file_count());
  }
  if (from.extracted_byte_size() != 0) {
    set_extracted_byte_size(from.extracted_byte_size());
  }
}

void UnpackingBundlesCompleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.UnpackingBundlesCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnpackingBundlesCompleted::CopyFrom(const UnpackingBundlesCompleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.UnpackingBundlesCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnpackingBundlesCompleted::IsInitialized() const {
  return true;
}

void UnpackingBundlesCompleted::Swap(UnpackingBundlesCompleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnpackingBundlesCompleted::InternalSwap(UnpackingBundlesCompleted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(bundle_count_, other->bundle_count_);
  swap(file_count_, other->file_count_);
  swap(extracted_byte_size_, other->extracted_byte_size_);
}

::google::protobuf::Metadata UnpackingBundlesCompleted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CopierFailed::InitAsDefaultInstance() {
}
class CopierFailed::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CopierFailed::kErrorCodeFieldNumber;
const int CopierFailed::kFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CopierFailed::CopierFailed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_launcher.CopierFailed)
}
CopierFailed::CopierFailed(const CopierFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:eve_launcher.CopierFailed)
}

void CopierFailed::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CopierFailed_eve_5flauncher_2flauncher_2eproto.base);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
}

CopierFailed::~CopierFailed() {
  // @@protoc_insertion_point(destructor:eve_launcher.CopierFailed)
  SharedDtor();
}

void CopierFailed::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CopierFailed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CopierFailed& CopierFailed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CopierFailed_eve_5flauncher_2flauncher_2eproto.base);
  return *internal_default_instance();
}


void CopierFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_launcher.CopierFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CopierFailed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CopierFailed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 error_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_error_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string file_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("eve_launcher.CopierFailed.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CopierFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_launcher.CopierFailed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_launcher.CopierFailed.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_launcher.CopierFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_launcher.CopierFailed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CopierFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_launcher.CopierFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  // string file_name = 2;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.CopierFailed.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_launcher.CopierFailed)
}

::google::protobuf::uint8* CopierFailed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_launcher.CopierFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  // string file_name = 2;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_launcher.CopierFailed.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_launcher.CopierFailed)
  return target;
}

size_t CopierFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_launcher.CopierFailed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_name = 2;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // uint32 error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CopierFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_launcher.CopierFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const CopierFailed* source =
      ::google::protobuf::DynamicCastToGenerated<CopierFailed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_launcher.CopierFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_launcher.CopierFailed)
    MergeFrom(*source);
  }
}

void CopierFailed::MergeFrom(const CopierFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_launcher.CopierFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void CopierFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_launcher.CopierFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CopierFailed::CopyFrom(const CopierFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_launcher.CopierFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CopierFailed::IsInitialized() const {
  return true;
}

void CopierFailed::Swap(CopierFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CopierFailed::InternalSwap(CopierFailed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_code_, other->error_code_);
}

::google::protobuf::Metadata CopierFailed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_eve_5flauncher_2flauncher_2eproto);
  return ::file_level_metadata_eve_5flauncher_2flauncher_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace eve_launcher
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientOptions* Arena::CreateMaybeMessage< ::eve_launcher::ClientOptions >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::Application* Arena::CreateMaybeMessage< ::eve_launcher::Application >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::Application >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::IPAddress* Arena::CreateMaybeMessage< ::eve_launcher::IPAddress >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::IPAddress >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::OS* Arena::CreateMaybeMessage< ::eve_launcher::OS >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::OS >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::Host* Arena::CreateMaybeMessage< ::eve_launcher::Host >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::Host >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UsersOnServer* Arena::CreateMaybeMessage< ::eve_launcher::UsersOnServer >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UsersOnServer >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::Settings* Arena::CreateMaybeMessage< ::eve_launcher::Settings >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::Settings >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::Event* Arena::CreateMaybeMessage< ::eve_launcher::Event >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::Event >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::Installed* Arena::CreateMaybeMessage< ::eve_launcher::Installed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::Installed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::Started* Arena::CreateMaybeMessage< ::eve_launcher::Started >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::Started >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UpdateStarted* Arena::CreateMaybeMessage< ::eve_launcher::UpdateStarted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UpdateStarted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::Shutdown* Arena::CreateMaybeMessage< ::eve_launcher::Shutdown >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::Shutdown >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientInitiallyLaunched* Arena::CreateMaybeMessage< ::eve_launcher::ClientInitiallyLaunched >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientInitiallyLaunched >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientLaunched* Arena::CreateMaybeMessage< ::eve_launcher::ClientLaunched >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientLaunched >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientCrashed* Arena::CreateMaybeMessage< ::eve_launcher::ClientCrashed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientCrashed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientShutdown* Arena::CreateMaybeMessage< ::eve_launcher::ClientShutdown >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientShutdown >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ReleaseWineLaunched* Arena::CreateMaybeMessage< ::eve_launcher::ReleaseWineLaunched >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ReleaseWineLaunched >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::DevelopmentWineLaunched* Arena::CreateMaybeMessage< ::eve_launcher::DevelopmentWineLaunched >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::DevelopmentWineLaunched >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::CustomWineLaunched* Arena::CreateMaybeMessage< ::eve_launcher::CustomWineLaunched >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::CustomWineLaunched >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientUpdateStarted* Arena::CreateMaybeMessage< ::eve_launcher::ClientUpdateStarted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientUpdateStarted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientUpdateCompleted* Arena::CreateMaybeMessage< ::eve_launcher::ClientUpdateCompleted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientUpdateCompleted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::ClientUpdateFailed* Arena::CreateMaybeMessage< ::eve_launcher::ClientUpdateFailed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::ClientUpdateFailed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::WebLoaded* Arena::CreateMaybeMessage< ::eve_launcher::WebLoaded >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::WebLoaded >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LoginCancelled* Arena::CreateMaybeMessage< ::eve_launcher::LoginCancelled >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LoginCancelled >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LoginFailed* Arena::CreateMaybeMessage< ::eve_launcher::LoginFailed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LoginFailed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UserAdded* Arena::CreateMaybeMessage< ::eve_launcher::UserAdded >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UserAdded >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UsersRemoved* Arena::CreateMaybeMessage< ::eve_launcher::UsersRemoved >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UsersRemoved >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::PlayButtonClicked* Arena::CreateMaybeMessage< ::eve_launcher::PlayButtonClicked >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::PlayButtonClicked >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LoginButtonClicked* Arena::CreateMaybeMessage< ::eve_launcher::LoginButtonClicked >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LoginButtonClicked >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::BitnessWarningShown* Arena::CreateMaybeMessage< ::eve_launcher::BitnessWarningShown >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::BitnessWarningShown >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::BitnessWarningClosed* Arena::CreateMaybeMessage< ::eve_launcher::BitnessWarningClosed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::BitnessWarningClosed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::WebPageLoaded* Arena::CreateMaybeMessage< ::eve_launcher::WebPageLoaded >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::WebPageLoaded >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::AssignedToExperiment* Arena::CreateMaybeMessage< ::eve_launcher::AssignedToExperiment >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::AssignedToExperiment >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LoginFlowStarted* Arena::CreateMaybeMessage< ::eve_launcher::LoginFlowStarted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LoginFlowStarted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::SystemBrowserOpened* Arena::CreateMaybeMessage< ::eve_launcher::SystemBrowserOpened >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::SystemBrowserOpened >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::FileUpdateFailed* Arena::CreateMaybeMessage< ::eve_launcher::FileUpdateFailed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::FileUpdateFailed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::DownloadInterrupted* Arena::CreateMaybeMessage< ::eve_launcher::DownloadInterrupted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::DownloadInterrupted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LauncherUpdateDownloaded* Arena::CreateMaybeMessage< ::eve_launcher::LauncherUpdateDownloaded >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LauncherUpdateDownloaded >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LauncherUpdateFailed* Arena::CreateMaybeMessage< ::eve_launcher::LauncherUpdateFailed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LauncherUpdateFailed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UiSettings* Arena::CreateMaybeMessage< ::eve_launcher::UiSettings >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UiSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UserRememberToggled* Arena::CreateMaybeMessage< ::eve_launcher::UserRememberToggled >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UserRememberToggled >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LauncherUpdateCancelled* Arena::CreateMaybeMessage< ::eve_launcher::LauncherUpdateCancelled >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LauncherUpdateCancelled >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::LauncherUpdateAccepted* Arena::CreateMaybeMessage< ::eve_launcher::LauncherUpdateAccepted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::LauncherUpdateAccepted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::CertificateErrorOccurred* Arena::CreateMaybeMessage< ::eve_launcher::CertificateErrorOccurred >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::CertificateErrorOccurred >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UnpackingBundlesStarted* Arena::CreateMaybeMessage< ::eve_launcher::UnpackingBundlesStarted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UnpackingBundlesStarted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UnpackingBundlesFailed* Arena::CreateMaybeMessage< ::eve_launcher::UnpackingBundlesFailed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UnpackingBundlesFailed >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::UnpackingBundlesCompleted* Arena::CreateMaybeMessage< ::eve_launcher::UnpackingBundlesCompleted >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::UnpackingBundlesCompleted >(arena);
}
template<> PROTOBUF_NOINLINE ::eve_launcher::CopierFailed* Arena::CreateMaybeMessage< ::eve_launcher::CopierFailed >(Arena* arena) {
  return Arena::CreateInternal< ::eve_launcher::CopierFailed >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
